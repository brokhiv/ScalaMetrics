commit,faults,path,NumberOfLambdaFunctions,SourceLinesOfLambda,LambdaScore,LambdaFunctionsUsingOuterVariables,LambdaFunctionsUsingInnerVariables,LambdaFunctionsWithSideEffects,LambdaFunctionsWithAssignment
HEAD,0,package shapeless - trait Refute,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Refute,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Refute - trait Impl,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Refute - object Impl,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Refute - method refute - <$anon: shapeless.Refute[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,2,package <empty> - object Boilerplate,25.0,22.0,0.07407407407407407,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - object Boilerplate - class BlockHelper,3.0,2.0,0.25,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - object Boilerplate - class TemplateVals,3.0,3.0,0.1875,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - object Boilerplate - trait Template,10.0,4.0,0.2857142857142857,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - object Boilerplate - object GenTuplerInstances,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - object Boilerplate - object GenFnToProductInstances,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - object Boilerplate - object GenFnFromProductInstances,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - object Boilerplate - object GenCaseInst,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - object Boilerplate - object GenPolyApply,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - object Boilerplate - object GenPolyInst,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - object Boilerplate - object GenCases,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - object Boilerplate - object GenPolyNTraits,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - object Boilerplate - object GenPolyNBuilders,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - object Boilerplate - object GenNats,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package <empty> - object Boilerplate - object GenTupleTypeableInstances,3.0,3.0,0.14285714285714285,0.0,0.0,0.0,0.0
HEAD,1,package <empty> - object Boilerplate - object GenSizedBuilder,1.0,1.0,0.09090909090909091,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - object Boilerplate - object GenHMapBuilder,4.0,4.0,0.25,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - object Boilerplate - object GenUnpackInstances,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package opticDemoDatatypes - class Address,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package opticDemoDatatypes - class Person,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package opticDemoDatatypes - trait Tree,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package opticDemoDatatypes - class Node,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package opticDemoDatatypes - class Leaf,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package opticDemoDatatypes - class Foo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package opticDemoDatatypes - class Bar,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package opticDemoDatatypes - trait Either,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package opticDemoDatatypes - class Left,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package opticDemoDatatypes - class Right,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object OpticExamples,1.0,1.0,0.02127659574468085,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - class Selector,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,4,package shapeless - package ops - package record - object Selector,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - package record - class UnsafeSelector,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - package record - class SelectorMacros,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait SelectAll,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object SelectAll,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object SelectAll - method hnilSelectAll - <$anon: shapeless.ops.record.SelectAll[L shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object SelectAll - method hconsSelectAll - <$anon: shapeless.ops.record.SelectAll[L KH :: KT]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - class Updater,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,4,package shapeless - package ops - package record - object Updater,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - package record - class UnsafeUpdater,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - package record - class UpdaterMacros,1.0,1.0,0.06666666666666667,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait Merger,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait LowPriorityMerger,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait LowPriorityMerger - method hlistMerger1 - <$anon: shapeless.ops.record.Merger[H :: T M]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Merger,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Merger - method hnilMerger - <$anon: shapeless.ops.record.Merger[shapeless.HNil M]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Merger - method hlistMerger2 - <$anon: shapeless.ops.record.Merger[shapeless.labelled.FieldType[K V] :: T M]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait DeepMerger,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait LowPriorityDeepMerger,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait LowPriorityDeepMerger - method hlistMerger1 - <$anon: shapeless.ops.record.DeepMerger[H :: T M]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait LowPriorityDeepMerger0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait LowPriorityDeepMerger0 - method hlistMerger2 - <$anon: shapeless.ops.record.DeepMerger[shapeless.labelled.FieldType[K V] :: T M]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object DeepMerger,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object DeepMerger - method hnilMerger - <$anon: shapeless.ops.record.DeepMerger[shapeless.HNil M]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object DeepMerger - method hlistMerger3 - <$anon: shapeless.ops.record.DeepMerger[shapeless.labelled.FieldType[K V] :: T M]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait Extractor,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait LowPriorityExtractor,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait LowPriorityExtractor - method extract - <$anon: L => shapeless.labelled.FieldType[K V] :: ET>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Extractor,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Extractor - method hnil - <$anon: L => E>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Extractor - <$anon: shapeless.HList => shapeless.HList>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Extractor - method descend - <$anon: L => shapeless.labelled.FieldType[K V] :: ET>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait MergeWith,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait LowPriorityMergeWith,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait LowPriorityMergeWith - method hlistMergeWith1 - <$anon: shapeless.ops.record.MergeWith[shapeless.labelled.FieldType[K V] :: T M F]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object MergeWith,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object MergeWith - method hnilMergeWith - <$anon: shapeless.ops.record.MergeWith[shapeless.HNil M F]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object MergeWith - method hlistMergeWith2 - <$anon: shapeless.ops.record.MergeWith[shapeless.labelled.FieldType[K V0] :: T M F]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - class Modifier,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - package record - object Modifier,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - package record - class UnsafeModifier,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - package record - class ModifierMacros,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - class Remover,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - package record - object Remover,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - package record - class UnsafeRemover,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - package record - class RemoverMacros,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait Remove,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait LowPriorityRemove,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait LowPriorityRemove - method hconsRemove - <$anon: shapeless.ops.record.Remove[H :: T E]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Remove,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Remove - method removeHead - <$anon: shapeless.ops.record.Remove[shapeless.labelled.FieldType[K V] :: T shapeless.labelled.FieldType[K V]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Remove - method removeUnlabelledHead - <$anon: shapeless.ops.record.Remove[shapeless.labelled.FieldType[K V] :: T V]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,2,package shapeless - package ops - package record - trait RemoveAll,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object RemoveAll,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object RemoveAll - method hnilRemoveAll - <$anon: shapeless.ops.record.RemoveAll[L shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object RemoveAll - method hconsRemoveAll - <$anon: shapeless.ops.record.RemoveAll[L H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait Renamer,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Renamer,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Renamer - method hlistRenamer1 - <$anon: shapeless.ops.record.Renamer[shapeless.labelled.FieldType[K1 V] :: T K1 K2]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Renamer - method hlistRenamer - <$anon: shapeless.ops.record.Renamer[H :: T K1 K2]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - class LacksKey,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - package record - object LacksKey,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - package record - class LacksKeyMacros,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait Keys,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - package record - object Keys,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Keys - <$anon: shapeless.ops.record.Keys[shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - package record - object Keys - method hlistKeys - <$anon: shapeless.ops.record.Keys[shapeless.labelled.FieldType[K V] :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait Values,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Values,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Values - method hnilValues - <$anon: shapeless.ops.record.Values[L]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Values - method hlistValues - <$anon: shapeless.ops.record.Values[shapeless.labelled.FieldType[K V] :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait SwapRecord,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object SwapRecord,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object SwapRecord - method hnilSwapRecord - <$anon: shapeless.ops.record.SwapRecord[L]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object SwapRecord - method hlistSwapRecord - <$anon: shapeless.ops.record.SwapRecord[shapeless.labelled.FieldType[K V] :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait Fields,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Fields,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Fields - method hnilFields - <$anon: shapeless.ops.record.Fields[L]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Fields - method hconsFields - <$anon: shapeless.ops.record.Fields[shapeless.labelled.FieldType[K V] :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait UnzipFields,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object UnzipFields,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object UnzipFields - method hnilUnzipFields - <$anon: shapeless.ops.record.UnzipFields[L]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object UnzipFields - method hconsUnzipFields - <$anon: shapeless.ops.record.UnzipFields[shapeless.labelled.FieldType[K V] :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait ToMap,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object ToMap,1.0,1.0,0.030303030303030304,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object ToMap - method hnilToMap - <$anon: shapeless.ops.record.ToMap[L]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object ToMap - method hsingleToMap - <$anon: shapeless.ops.record.ToMap[shapeless.labelled.FieldType[K V] :: shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object ToMap - method hlistToMap - <$anon: shapeless.ops.record.ToMap[shapeless.labelled.FieldType[HK HV] :: TH :: TT]>,1.0,1.0,0.14285714285714285,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait MapValues,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object MapValues,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object MapValues - method hnilMapValues - <$anon: shapeless.ops.record.MapValues[HF L]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object MapValues - method hconsMapValues - <$anon: shapeless.ops.record.MapValues[HF shapeless.labelled.FieldType[K V] :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait AlignByKeys,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object AlignByKeys,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object AlignByKeys - <$anon: shapeless.ops.record.AlignByKeys[shapeless.HNil shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object AlignByKeys - method hlistAlign - <$anon: shapeless.ops.record.AlignByKeys[T KH :: KT]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object MonoidExamples,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object MonoidExamples - class Foo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object MonoidExamples - class Bar,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait Monoid,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Monoid,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Monoid - method booleanMonoid - <$anon: shapeless.examples.Monoid[Boolean]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Monoid - method intMonoid - <$anon: shapeless.examples.Monoid[Int]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Monoid - method doubleMonoid - <$anon: shapeless.examples.Monoid[Double]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Monoid - method stringMonoid - <$anon: shapeless.examples.Monoid[String]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Monoid - object typeClass,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Monoid - object typeClass - method emptyProduct - <$anon: shapeless.examples.Monoid[shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Monoid - object typeClass - method product - <$anon: shapeless.examples.Monoid[F :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Monoid - object typeClass - method project - <$anon: shapeless.examples.Monoid[F]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait MonoidSyntax,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object MonoidSyntax,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object MonoidSyntax - method monoidSyntax - <$anon: shapeless.examples.MonoidSyntax[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,3,package shapeless - package syntax - class CoproductOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CombinatorTesting,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CombinatorTesting - object CombinatorParser,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CombinatorTesting - trait Flatten,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CombinatorTesting - method flattenString - <$anon: String => List[String]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CombinatorTesting - method flattenPattern - <$anon: <error> => List[String]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CombinatorTesting - method flattenParseResult - <$anon: <error> => List[String]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,2,package shapeless - package ops - object hlist,3.0,3.0,0.0015212981744421906,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait IsHCons,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object IsHCons,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object IsHCons - method hlistIsHCons - <$anon: shapeless.ops.hlist.IsHCons[H0 :: T0]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Mapped,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityMapped,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityMapped - method hlistIdMapped - <$anon: shapeless.ops.hlist.Mapped[H :: T shapeless.Id]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityMapped - method hlistMapped2 - <$anon: shapeless.ops.hlist.Mapped[H :: T [T]F]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Mapped,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Mapped - method hnilMapped - <$anon: shapeless.ops.hlist.Mapped[shapeless.HNil F]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Mapped - method hnilConstMapped - <$anon: shapeless.ops.hlist.Mapped[shapeless.HNil [T]F]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Mapped - method hlistMapped1 - <$anon: shapeless.ops.hlist.Mapped[H :: T F]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Comapped,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityComapped,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityComapped - method hlistIdComapped - <$anon: shapeless.ops.hlist.Comapped[L shapeless.Id]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Comapped,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Comapped - method hnilComapped - <$anon: shapeless.ops.hlist.Comapped[shapeless.HNil F]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Comapped - method hlistComapped - <$anon: shapeless.ops.hlist.Comapped[F[H] :: T F]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait NatTRel,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object NatTRel,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object NatTRel - method hnilNatTRel1 - <$anon: shapeless.ops.hlist.NatTRel[shapeless.HNil F1 shapeless.HNil F2]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object NatTRel - method hnilNatTRel2 - <$anon: shapeless.ops.hlist.NatTRel[shapeless.HNil F1 shapeless.HNil [T]H2]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object NatTRel - method hlistNatTRel1 - <$anon: shapeless.ops.hlist.NatTRel[F1[H] :: T1 F1 F2[H] :: T2 F2]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object NatTRel - method hlistNatTRel2 - <$anon: shapeless.ops.hlist.NatTRel[H :: T1 shapeless.Id F2[H] :: T2 F2]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object NatTRel - method hlistNatTRel3 - <$anon: shapeless.ops.hlist.NatTRel[F1[H] :: T1 F1 H :: T2 shapeless.Id]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object NatTRel - method hlistNatTRel4 - <$anon: shapeless.ops.hlist.NatTRel[F1[H1] :: T1 F1 H2 :: T2 [T]H2]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object NatTRel - method hlistNatTRel5 - <$anon: shapeless.ops.hlist.NatTRel[H1 :: T1 shapeless.Id H2 :: T2 [T]H2]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait HKernel,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait HNilHKernel,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object HNilHKernel,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - class HConsHKernel,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object HKernel,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait HKernelAux,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object HKernelAux,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object HKernelAux - method mkHNilHKernel - <$anon: shapeless.ops.hlist.HKernelAux[shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object HKernelAux - method mkHListHKernel - <$anon: shapeless.ops.hlist.HKernelAux[H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait ToCoproduct,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ToCoproduct,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ToCoproduct - <$anon: shapeless.ops.hlist.ToCoproduct[shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ToCoproduct - method hlistToCoproduct - <$anon: shapeless.ops.hlist.ToCoproduct[H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait lowPriorityToSum,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait lowPriorityToSum - method hlistToSum - <$anon: shapeless.ops.hlist.ToSum[H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait ToSum,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ToSum,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ToSum - <$anon: shapeless.ops.hlist.ToSum[shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ToSum - method hlistToSum - <$anon: shapeless.ops.hlist.ToSum[H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Length,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Length,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Length - method hnilLength - <$anon: shapeless.ops.hlist.Length[L]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Length - method hlistLength - <$anon: shapeless.ops.hlist.Length[H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Mapper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Mapper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Mapper - method hnilMapper1 - <$anon: shapeless.ops.hlist.Mapper[HF shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Mapper - method hlistMapper1 - <$anon: shapeless.ops.hlist.Mapper[HF InH :: InT]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait FlatMapper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object FlatMapper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object FlatMapper - method hnilFlatMapper1 - <$anon: shapeless.ops.hlist.FlatMapper[HF shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object FlatMapper - method hlistFlatMapper1 - <$anon: shapeless.ops.hlist.FlatMapper[HF InH :: InT]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait ConstMapper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ConstMapper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ConstMapper - method hnilConstMapper - <$anon: shapeless.ops.hlist.ConstMapper[C shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ConstMapper - method hlistConstMapper - <$anon: shapeless.ops.hlist.ConstMapper[C H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait MapFolder,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object MapFolder,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object MapFolder - method hnilMapFolder - <$anon: shapeless.ops.hlist.MapFolder[shapeless.HNil R HF]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object MapFolder - method hlistMapFolder - <$anon: shapeless.ops.hlist.MapFolder[H :: T R HF]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LeftFolder,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object LeftFolder,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object LeftFolder - method hnilLeftFolder - <$anon: shapeless.ops.hlist.LeftFolder[shapeless.HNil In HF]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object LeftFolder - method hlistLeftFolder - <$anon: shapeless.ops.hlist.LeftFolder[H :: T In HF]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait RightFolder,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RightFolder,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RightFolder - method hnilRightFolder - <$anon: shapeless.ops.hlist.RightFolder[shapeless.HNil In HF]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RightFolder - method hlistRightFolder - <$anon: shapeless.ops.hlist.RightFolder[H :: T In HF]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LeftReducer,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object LeftReducer,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object LeftReducer - method leftReducer - <$anon: shapeless.ops.hlist.LeftReducer[H :: T HF]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait RightReducer,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RightReducer,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RightReducer - method hsingleRightReducer - <$anon: shapeless.ops.hlist.RightReducer[H :: shapeless.HNil HF]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RightReducer - method hlistRightReducer - <$anon: shapeless.ops.hlist.RightReducer[H :: T HF]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Unifier,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Unifier,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Unifier - <$anon: shapeless.ops.hlist.Unifier[shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Unifier - method hsingleUnifier - <$anon: shapeless.ops.hlist.Unifier[T :: shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Unifier - method hlistUnifier - <$anon: shapeless.ops.hlist.Unifier[H1 :: H2 :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait SubtypeUnifier,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SubtypeUnifier,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SubtypeUnifier - method hnilSubtypeUnifier - <$anon: shapeless.ops.hlist.SubtypeUnifier[shapeless.HNil B]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SubtypeUnifier - method hlistSubtypeUnifier1 - <$anon: shapeless.ops.hlist.SubtypeUnifier[H :: T B]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SubtypeUnifier - method hlistSubtypeUnifier2 - <$anon: shapeless.ops.hlist.SubtypeUnifier[H :: T B]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait ToTraversable,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ToTraversable,1.0,1.0,0.027777777777777776,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ToTraversable - method hnilToTraversable - <$anon: shapeless.ops.hlist.ToTraversable[L M]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ToTraversable - method hsingleToTraversable - <$anon: shapeless.ops.hlist.ToTraversable[T :: shapeless.HNil M]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ToTraversable - method hlistToTraversable - <$anon: shapeless.ops.hlist.ToTraversable[H1 :: H2 :: T M]>,1.0,1.0,0.14285714285714285,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait ToCoproductTraversable,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityToCoproductTraversable,1.0,1.0,0.04,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityToCoproductTraversable - trait NotIn,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityToCoproductTraversable - object NotIn,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityToCoproductTraversable - object NotIn - method notInCNil - <$anon: LowPriorityToCoproductTraversable.this.NotIn[shapeless.CNil T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityToCoproductTraversable - object NotIn - method notInCCons - <$anon: LowPriorityToCoproductTraversable.this.NotIn[CH :+: CT T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityToCoproductTraversable - method hconsToCoproductTraversable1 - <$anon: shapeless.ops.hlist.ToCoproductTraversable[LH :: LT M]>,1.0,1.0,0.1111111111111111,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ToCoproductTraversable,1.0,1.0,0.04,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ToCoproductTraversable - method hnilToCoproductTraversable - <$anon: shapeless.ops.hlist.ToCoproductTraversable[L M]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ToCoproductTraversable - method hconsToCoproductTraversable0 - <$anon: shapeless.ops.hlist.ToCoproductTraversable[LH :: LT M]>,1.0,1.0,0.1,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait ToSized,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object hlist - object ToSized,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object hlist - object ToSized - method hnilToSized - <$anon: shapeless.ops.hlist.ToSized[L M]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object hlist - object ToSized - method hsingleToSized - <$anon: shapeless.ops.hlist.ToSized[T :: shapeless.HNil M]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object hlist - object ToSized - method hlistToSized - <$anon: shapeless.ops.hlist.ToSized[H1 :: H2 :: T M]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Tupler,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Tupler,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Tupler - <$anon: shapeless.ops.hlist.Tupler[shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Last,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Last,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Last - method hsingleLast - <$anon: shapeless.ops.hlist.Last[H :: shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Last - method hlistLast - <$anon: shapeless.ops.hlist.Last[H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Init,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Init,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Init - method hsingleInit - <$anon: shapeless.ops.hlist.Init[H :: shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Init - method hlistInit - <$anon: shapeless.ops.hlist.Init[H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Selector,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Selector,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Selector - method select - <$anon: shapeless.ops.hlist.Selector[H :: T H]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Selector - method recurse - <$anon: shapeless.ops.hlist.Selector[H :: T U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait SelectAll,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SelectAll,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SelectAll - method hnilSelectAll - <$anon: shapeless.ops.hlist.SelectAll[L shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SelectAll - method hconsSelectAll - <$anon: shapeless.ops.hlist.SelectAll[L H :: S]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait SelectMany,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SelectMany,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SelectMany - method SelectManyHNil - <$anon: shapeless.ops.hlist.SelectMany[L shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SelectMany - method SelectManyHList - <$anon: shapeless.ops.hlist.SelectMany[L H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait SelectRange,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SelectRange,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SelectRange - method take - <$anon: shapeless.ops.hlist.SelectRange[L shapeless._0 T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SelectRange - method drop - <$anon: shapeless.ops.hlist.SelectRange[H :: L shapeless.Succ[A] shapeless.Succ[B]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait SelectFirst,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SelectFirst,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SelectFirst - method selectAny - <$anon: shapeless.ops.hlist.SelectFirst[L H :: S]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SelectFirst - method recurse - <$anon: shapeless.ops.hlist.SelectFirst[L H :: S]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Partition,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Partition,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Partition - method hlistPartitionNil - <$anon: shapeless.ops.hlist.Partition[shapeless.HNil U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Partition - method hlistPartition1 - <$anon: shapeless.ops.hlist.Partition[H :: L H]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Partition - method hlistPartition2 - <$anon: shapeless.ops.hlist.Partition[H :: L U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Grouper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityGrouper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityGrouper - method hlistGrouper - <$anon: shapeless.ops.hlist.Grouper[L N Step]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Grouper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Grouper - method hnilGrouper - <$anon: shapeless.ops.hlist.Grouper[shapeless.HNil N Step]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Grouper - method hlistGrouper1 - <$anon: shapeless.ops.hlist.Grouper[L N Step]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityPaddedGrouper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityPaddedGrouper - method incompletePaddedGrouper - <$anon: shapeless.ops.hlist.PaddedGrouper[L N Step Pad]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait PaddedGrouper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object PaddedGrouper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object PaddedGrouper - method defaultPaddedGrouper - <$anon: shapeless.ops.hlist.PaddedGrouper[L N Step Pad]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Filter,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Filter,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Filter - method hlistFilter - <$anon: shapeless.ops.hlist.Filter[L U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait FilterNot,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object FilterNot,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object FilterNot - method hlistFilterNot - <$anon: shapeless.ops.hlist.FilterNot[L U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Remove,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityRemove,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityRemove - method recurse - <$anon: shapeless.ops.hlist.Remove[H :: T E]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Remove,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Remove - method remove - <$anon: shapeless.ops.hlist.Remove[H :: T H]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait RemoveAll,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RemoveAll,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RemoveAll - method hlistRemoveAllNil - <$anon: shapeless.ops.hlist.RemoveAll[L shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RemoveAll - method hlistRemoveAll - <$anon: shapeless.ops.hlist.RemoveAll[L E :: SLT]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Union,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Union,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Union - method hlistUnion - <$anon: shapeless.ops.hlist.Union[shapeless.HNil M]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Union - method hlistUnion1 - <$anon: shapeless.ops.hlist.Union[H :: T M]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Union - method hlistUnion2 - <$anon: shapeless.ops.hlist.Union[H :: T M]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Intersection,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Intersection,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Intersection - method hnilIntersection - <$anon: shapeless.ops.hlist.Intersection[shapeless.HNil M]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Intersection - method hlistIntersection1 - <$anon: shapeless.ops.hlist.Intersection[H :: T M]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Intersection - method hlistIntersection2 - <$anon: shapeless.ops.hlist.Intersection[H :: T M]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Diff,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityDiff,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityDiff - method hconsDiff1 - <$anon: shapeless.ops.hlist.Diff[L H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Diff,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Diff - method hnilDiff - <$anon: shapeless.ops.hlist.Diff[L shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Diff - method hconsDiff2 - <$anon: shapeless.ops.hlist.Diff[L H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Replacer,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Replacer,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Replacer - method hlistReplacer1 - <$anon: shapeless.ops.hlist.Replacer[U :: T U V]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Replacer - method hlistReplacer2 - <$anon: shapeless.ops.hlist.Replacer[H :: T U V]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Modifier,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Modifier,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Modifier - method hlistModify1 - <$anon: shapeless.ops.hlist.Modifier[U :: T U V]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Modifier - method hlistModify2 - <$anon: shapeless.ops.hlist.Modifier[H :: T U V]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait ModifierAt,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ModifierAt,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ModifierAt - method hlistModifierAt - <$anon: shapeless.ops.hlist.ModifierAt[L N U V]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait ReplaceAt,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReplaceAt,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReplaceAt - method hlistReplaceAt1 - <$anon: shapeless.ops.hlist.ReplaceAt[H :: T shapeless._0 V]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReplaceAt - method hlistReplaceAt2 - <$anon: shapeless.ops.hlist.ReplaceAt[H :: T shapeless.Succ[N] V]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait At,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object At,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object At - method hlistAtZero - <$anon: shapeless.ops.hlist.At[H :: T shapeless._0]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object At - method hlistAtN - <$anon: shapeless.ops.hlist.At[H :: T shapeless.Succ[N]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Drop,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Drop,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Drop - method hlistDrop1 - <$anon: shapeless.ops.hlist.Drop[L shapeless._0]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Drop - method hlistDrop2 - <$anon: shapeless.ops.hlist.Drop[H :: T shapeless.Succ[N]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Take,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Take,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Take - method hlistTake1 - <$anon: shapeless.ops.hlist.Take[L shapeless._0]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Take - method hlistTake2 - <$anon: shapeless.ops.hlist.Take[H :: T shapeless.Succ[N]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Split,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Split,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Split - method split - <$anon: shapeless.ops.hlist.Split[L N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Split - trait Split0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Split - object Split0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Split - object Split0 - method hlistSplit1 - <$anon: shapeless.ops.hlist.Split.Split0[P S shapeless._0 P S]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Split - object Split0 - method hlistSplit2 - <$anon: shapeless.ops.hlist.Split.Split0[AccP AccSH :: AccST shapeless.Succ[N] AccSH :: P S]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait ReverseSplit,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplit,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplit - method reverseSplit - <$anon: shapeless.ops.hlist.ReverseSplit[L N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplit - trait ReverseSplit0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplit - object ReverseSplit0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplit - object ReverseSplit0 - method hlistReverseSplit1 - <$anon: shapeless.ops.hlist.ReverseSplit.ReverseSplit0[P S shapeless._0 P S]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplit - object ReverseSplit0 - method hlistReverseSplit2 - <$anon: shapeless.ops.hlist.ReverseSplit.ReverseSplit0[AccP AccSH :: AccST shapeless.Succ[N] P S]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait SplitLeft,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SplitLeft,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SplitLeft - method splitLeft - <$anon: shapeless.ops.hlist.SplitLeft[L U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SplitLeft - trait SplitLeft0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SplitLeft - trait LowPrioritySplitLeft0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SplitLeft - trait LowPrioritySplitLeft0 - method hlistSplitLeft1 - <$anon: shapeless.ops.hlist.SplitLeft.SplitLeft0[AccP AccSH :: AccST U AccSH :: P S]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SplitLeft - object SplitLeft0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SplitLeft - object SplitLeft0 - method hlistSplitLeft2 - <$anon: shapeless.ops.hlist.SplitLeft.SplitLeft0[P SH :: ST SH P SH :: ST]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait ReverseSplitLeft,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitLeft,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitLeft - method reverseSplitLeft - <$anon: shapeless.ops.hlist.ReverseSplitLeft[L U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitLeft - trait ReverseSplitLeft0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitLeft - trait LowPriorityReverseSplitLeft0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitLeft - trait LowPriorityReverseSplitLeft0 - method hlistReverseSplitLeft1 - <$anon: shapeless.ops.hlist.ReverseSplitLeft.ReverseSplitLeft0[AccP AccSH :: AccST U P S]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitLeft - object ReverseSplitLeft0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitLeft - object ReverseSplitLeft0 - method hlistReverseSplitLeft2 - <$anon: shapeless.ops.hlist.ReverseSplitLeft.ReverseSplitLeft0[P SH :: ST SH P SH :: ST]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait SplitRight,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SplitRight,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SplitRight - method splitRight - <$anon: shapeless.ops.hlist.SplitRight[L U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SplitRight - trait SplitRight0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SplitRight - trait LowPrioritySplitRight0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SplitRight - trait LowPrioritySplitRight0 - method hlistSplitRight1 - <$anon: shapeless.ops.hlist.SplitRight.SplitRight0[RevH :: RevT AccP shapeless.HNil U P S]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SplitRight - trait LowPrioritySplitRight0 - method hlistSplitRight2 - <$anon: shapeless.ops.hlist.SplitRight.SplitRight0[shapeless.HNil AccPH :: AccPT AccS U P S]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SplitRight - object SplitRight0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SplitRight - object SplitRight0 - method hlistSplitRight3 - <$anon: shapeless.ops.hlist.SplitRight.SplitRight0[shapeless.HNil PH :: PT S PH Out0 S]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait ReverseSplitRight,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitRight,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitRight - method reverseSplitRight - <$anon: shapeless.ops.hlist.ReverseSplitRight[L U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitRight - trait ReverseSplitRight0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitRight - trait LowPriorityReverseSplitRight0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitRight - trait LowPriorityReverseSplitRight0 - method hlistReverseSplitRight1 - <$anon: shapeless.ops.hlist.ReverseSplitRight.ReverseSplitRight0[RevH :: RevT AccP shapeless.HNil U P S]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitRight - trait LowPriorityReverseSplitRight0 - method hlistReverseSplitRight2 - <$anon: shapeless.ops.hlist.ReverseSplitRight.ReverseSplitRight0[shapeless.HNil AccPH :: AccPT AccS U P S]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitRight - object ReverseSplitRight0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitRight - object ReverseSplitRight0 - method hlistReverseSplitRight3 - <$anon: shapeless.ops.hlist.ReverseSplitRight.ReverseSplitRight0[shapeless.HNil PH :: PT S PH PH :: PT S]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Reverse,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Reverse,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Reverse - method reverse - <$anon: shapeless.ops.hlist.Reverse[L]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Reverse - trait Reverse0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Reverse - object Reverse0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Reverse - object Reverse0 - method hnilReverse - <$anon: shapeless.ops.hlist.Reverse.Reverse0[Out shapeless.HNil Out]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Reverse - object Reverse0 - method hlistReverse - <$anon: shapeless.ops.hlist.Reverse.Reverse0[Acc InH :: InT Out]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Align,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Align,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Align - <$anon: shapeless.HNil => shapeless.HNil>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Align - method hlistAlign - <$anon: L => MH :: MT>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Prepend,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowestPriorityPrepend,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowestPriorityPrepend - method hlistPrepend - <$anon: shapeless.ops.hlist.Prepend[PH :: PT S]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityPrepend,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityPrepend - method hnilPrepend0 - <$anon: shapeless.ops.hlist.Prepend[P S]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Prepend,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Prepend - method hnilPrepend1 - <$anon: shapeless.ops.hlist.Prepend[P S]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait ReversePrepend,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityReversePrepend,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityReversePrepend - method hnilReversePrepend0 - <$anon: shapeless.ops.hlist.ReversePrepend[P S]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReversePrepend,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReversePrepend - method hnilReversePrepend1 - <$anon: shapeless.ops.hlist.ReversePrepend[P S]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReversePrepend - method hlistReversePrepend - <$anon: shapeless.ops.hlist.ReversePrepend[PH :: PT S]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Repeat,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Repeat,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Repeat - method base - <$anon: shapeless.ops.hlist.Repeat[L <error>]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Repeat - method succ - <$anon: shapeless.ops.hlist.Repeat[L shapeless.Succ[Prev]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait ZipOne,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipOne,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipOne - method zipOne0 - <$anon: shapeless.ops.hlist.ZipOne[shapeless.HNil shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipOne - method zipOne3 - <$anon: shapeless.ops.hlist.ZipOne[H :: shapeless.HNil T :: shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityZipOne,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityZipOne - method zipOne1 - <$anon: shapeless.ops.hlist.ZipOne[H shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityZipOne - method zipOne2 - <$anon: shapeless.ops.hlist.ZipOne[shapeless.HNil T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityZipOne - method zipOne4 - <$anon: shapeless.ops.hlist.ZipOne[HH :: HT TH :: TT]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Transposer,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Transposer,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Transposer - method hnilTransposer - <$anon: shapeless.ops.hlist.Transposer[shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Transposer - method hlistTransposer1 - <$anon: shapeless.ops.hlist.Transposer[H :: shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Transposer - method hlistTransposer2 - <$anon: shapeless.ops.hlist.Transposer[H :: TH :: TT]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Zip,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Zip,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Zip - method zipper - <$anon: shapeless.ops.hlist.Zip[L]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Unzip,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Unzip,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Unzip - method unzipper - <$anon: shapeless.ops.hlist.Unzip[L]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait ZipApply,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipApply,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipApply - method hnilZipApply - <$anon: shapeless.ops.hlist.ZipApply[shapeless.HNil shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipApply - method hconsZipApply - <$anon: shapeless.ops.hlist.ZipApply[T => R :: FLT T :: ALT]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait ZipConst,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipConst,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipConst - method hnilZipConst - <$anon: shapeless.ops.hlist.ZipConst[C L]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipConst - method constZipper - <$anon: shapeless.ops.hlist.ZipConst[C L]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait ZipWith,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipWith,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipWith - method hlistZipWithHList - <$anon: shapeless.ops.hlist.ZipWith[LH :: LT RH :: RT P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipWith - method constZipWith - <$anon: shapeless.ops.hlist.ZipWith[L R P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - class ZipWithKeys,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object hlist - object ZipWithKeys,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipWithKeys - <$anon: shapeless.ops.hlist.ZipWithKeys[shapeless.HList shapeless.HList]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait ZipWithIndex,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipWithIndex,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipWithIndex - trait Helper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipWithIndex - object Helper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipWithIndex - object Helper - method hnil - <$anon: shapeless.ops.hlist.ZipWithIndex.Helper[shapeless.HNil N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipWithIndex - object Helper - method hcons - <$anon: shapeless.ops.hlist.ZipWithIndex.Helper[H :: T N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipWithIndex - method default - <$anon: shapeless.ops.hlist.ZipWithIndex[L]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Collect,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Collect,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Collect - method hnilCollect - <$anon: shapeless.ops.hlist.Collect[shapeless.HNil P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Collect - method hlistCollect - <$anon: shapeless.ops.hlist.Collect[LH :: LT P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityCollect,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityCollect - method hlistNoPolyCase - <$anon: shapeless.ops.hlist.Collect[LH :: LT P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object hnilOrdering,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - method hlistOrdering - <$anon: Ordering[H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait MapCons,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object MapCons,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object MapCons - method hnilMapCons - <$anon: shapeless.ops.hlist.MapCons[A shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object MapCons - method hlistMapCons - <$anon: shapeless.ops.hlist.MapCons[A H :: TM]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Interleave,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Interleave,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Interleave - method hnilInterleave - <$anon: shapeless.ops.hlist.Interleave[A L]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Interleave - method hlistInterleave - <$anon: shapeless.ops.hlist.Interleave[A H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait FlatMapInterleave,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object FlatMapInterleave,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object FlatMapInterleave - method hnilFlatMapInterleave - <$anon: shapeless.ops.hlist.FlatMapInterleave[A M]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object FlatMapInterleave - method hlistFlatMapInterleave - <$anon: shapeless.ops.hlist.FlatMapInterleave[A H :: TM]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Permutations,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Permutations,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Permutations - method hnilPermutations - <$anon: shapeless.ops.hlist.Permutations[L]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Permutations - method hlistPermutations - <$anon: shapeless.ops.hlist.Permutations[H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait RotateLeft,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RotateLeft,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RotateLeft - method hnilRotateLeft - <$anon: shapeless.ops.hlist.RotateLeft[L N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityRotateLeft,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityRotateLeft - method hlistRotateLeft - <$anon: shapeless.ops.hlist.RotateLeft[L N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait RotateRight,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RotateRight,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RotateRight - method hnilRotateRight - <$anon: shapeless.ops.hlist.RotateRight[L N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityRotateRight,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityRotateRight - method hlistRotateRight - <$anon: shapeless.ops.hlist.RotateRight[L N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityRotateRight - method noopRotateRight - <$anon: shapeless.ops.hlist.RotateRight[L N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LeftScanner,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object LeftScanner,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object LeftScanner - method hnilLeftScanner - <$anon: shapeless.ops.hlist.LeftScanner[shapeless.HNil In P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object LeftScanner - method hlistLeftScanner - <$anon: shapeless.ops.hlist.LeftScanner[H :: T In P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait RightScanner,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RightScanner,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RightScanner - trait RightScanner0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RightScanner - object RightScanner0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RightScanner - method hlistRightScanner0 - <$anon: shapeless.ops.hlist.RightScanner.RightScanner0[H :: T H0 P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RightScanner - method hnilRightScanner - <$anon: shapeless.ops.hlist.RightScanner[shapeless.HNil In P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RightScanner - method hlistRightScanner - <$anon: shapeless.ops.hlist.RightScanner[H :: T In P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Fill,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Fill,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Fill - method fill1Zero - <$anon: shapeless.ops.hlist.Fill[shapeless.Nat._0 A]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Fill - method fill1Succ - <$anon: shapeless.ops.hlist.Fill[shapeless.Succ[N] A]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Fill - method fill2 - <$anon: shapeless.ops.hlist.Fill[(N1  N2) A]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait FillWith,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object FillWith,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object FillWith - method hnilFill - <$anon: shapeless.ops.hlist.FillWith[F shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object FillWith - method hconsFill - <$anon: shapeless.ops.hlist.FillWith[F Head :: Tail]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Patcher,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Patcher,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Patcher - method hlistPatch1 - <$anon: shapeless.ops.hlist.Patcher[shapeless.Succ[N] M H :: T In]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Patcher - method hlistPatch2 - <$anon: shapeless.ops.hlist.Patcher[shapeless._0 M L In]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait CollectFirst,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object CollectFirst,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object CollectFirst - method hlistEval - <$anon: shapeless.ops.hlist.CollectFirst[H :: T P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityCollectFirst,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityCollectFirst - method hlistIterate - <$anon: shapeless.ops.hlist.CollectFirst[H :: T P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LiftAll,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object LiftAll,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object LiftAll - class Curried,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object LiftAll - method hnil - <$anon: shapeless.ops.hlist.LiftAll[F shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object LiftAll - method hcons - <$anon: shapeless.ops.hlist.LiftAll[F H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait PadTo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object PadTo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object PadTo - method padToHNil0 - <$anon: shapeless.ops.hlist.PadTo[shapeless._0 A shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object PadTo - method padToHNil - <$anon: shapeless.ops.hlist.PadTo[shapeless.Succ[N] A shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object PadTo - method padTo1 - <$anon: shapeless.ops.hlist.PadTo[shapeless.Succ[N] A H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Slice,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Slice,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Slice - method slice0 - <$anon: shapeless.ops.hlist.Slice[shapeless._0 shapeless._0 L]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Slice - method slice1 - <$anon: shapeless.ops.hlist.Slice[shapeless.Succ[N] shapeless.Succ[U] H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Slice - method slice2 - <$anon: shapeless.ops.hlist.Slice[shapeless._0 shapeless.Succ[U] H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Reify,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Reify,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Reify - method hnilReify - <$anon: shapeless.ops.hlist.Reify[L]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Reify - method hlistReify - <$anon: shapeless.ops.hlist.Reify[H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Combinations,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Combinations,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Combinations - method combination0 - <$anon: shapeless.ops.hlist.Combinations[shapeless._0 L]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Combinations - method combination1 - <$anon: shapeless.ops.hlist.Combinations[shapeless.Succ[N] H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityCombinations,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityCombinations - method combinationHNil - <$anon: shapeless.ops.hlist.Combinations[N shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait ProductToHList,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ProductToHList,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ProductToHList - method pairToHCons - <$anon: shapeless.ops.hlist.ProductToHList[Product2[H T]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ProductToHList - <$anon: shapeless.ops.hlist.ProductToHList[Unit]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait HListToProduct,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object HListToProduct,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object HListToProduct - <$anon: shapeless.ops.hlist.HListToProduct[shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object HListToProduct - method hconsToPair - <$anon: shapeless.ops.hlist.HListToProduct[H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassFacet,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ProductISOFacet,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ProductISOFacet - trait ProductISOOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ApplyUnapplyFacet,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ApplyUnapplyFacet - trait ApplyUnapplyOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ApplyUnapplyFacet - trait ApplyUnapplyCompanion,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ProductFacet,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ProductFacet - trait ProductOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ProductFacet - trait ProductMethods,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait PolymorphicEqualityFacet,1.0,2.0,0.11764705882352941,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait PolymorphicEqualityFacet - trait PolymorphicEqualityOps,1.0,2.0,0.2,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait PolymorphicEqualityFacet - trait PolymorphicEqualityMethods,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CopyFacet,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CopyFacet - trait CopyOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CopyFacet - trait CopyMethods,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ToStringFacet,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ToStringFacet - trait ToStringOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ToStringFacet - trait ToStringMethods,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait DefaultCaseClassDefns,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait DefaultCaseClassDefns - trait CaseClassOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait DefaultCaseClassDefns - trait CaseClassCompanion,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait DefaultCaseClassDefns - trait CaseClass,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait DefaultCaseClassDefns - method Ops - <$anon: DefaultCaseClassDefns.this.CaseClassOps>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - object tuple,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package syntax - package std - class TupleOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - class ReplaceTypeAux,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - class UpdatedTypeAux,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - class UpdateWithAux,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - class UpdatedAtAux,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - class PatchAux,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object function,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object function - trait FnToProduct,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object function - object FnToProduct,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object function - trait FnFromProduct,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object function - object FnFromProduct,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - object inject,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - object inject - class InjectSyntax,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait UnaryTCConstraint,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityUnaryTCConstraint,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityUnaryTCConstraint - <$anon: shapeless.UnaryTCConstraint[Any shapeless.Id]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object UnaryTCConstraint,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait BasisConstraint,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object BasisConstraint,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object BasisConstraint - <$anon: shapeless.BasisConstraint[Any Any]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LUBConstraint,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object LUBConstraint,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object LUBConstraint - <$anon: shapeless.LUBConstraint[Any Any]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait KeyConstraint,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object KeyConstraint,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object KeyConstraint - <$anon: shapeless.KeyConstraint[Any Any]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ValueConstraint,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object ValueConstraint,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object ValueConstraint - <$anon: shapeless.ValueConstraint[Any Any]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait NotContainsConstraint,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object NotContainsConstraint,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object NotContainsConstraint - <$anon: shapeless.NotContainsConstraint[Any Any]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait IsDistinctConstraint,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object IsDistinctConstraint,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object IsDistinctConstraint - <$anon: shapeless.IsDistinctConstraint[Any]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - object function,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - object function - method fnHListOps - <$anon: shapeless.syntax.std.FnHListOps[T => R]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - object function - method fnUnHListOps - <$anon: shapeless.syntax.std.FnUnHListOps[fnUnHLister.Out]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - trait FnHListOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - trait FnUnHListOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ShowExamples,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ShowExamples - trait Super,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ShowExamples - class Foo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ShowExamples - class Bar,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ShowExamples - class BarRec,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ShowExamples - object Super,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ShowExamples - trait MutualA,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ShowExamples - class MutualA1,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ShowExamples - class MutualA2,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ShowExamples - trait MutualB,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ShowExamples - class MutualB1,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ShowExamples - class MutualB2,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ShowExamples - object MutualA,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ShowExamples - object MutualB,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait ShowSyntax,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ShowSyntax,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ShowSyntax - method showSyntax - <$anon: shapeless.examples.ShowSyntax>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait Show,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Show,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Show - method stringShow - <$anon: shapeless.examples.Show[String]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Show - method intShow - <$anon: shapeless.examples.Show[Int]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Show - object typeClass,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Show - object typeClass - method emptyProduct - <$anon: shapeless.examples.Show[shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Show - object typeClass - method product - <$anon: shapeless.examples.Show[F :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Show - object typeClass - method emptyCoproduct - <$anon: shapeless.examples.Show[shapeless.CNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Show - object typeClass - method coproduct - <$anon: shapeless.examples.Show[L :+: R]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Show - object typeClass - method project - <$anon: shapeless.examples.Show[F]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - object unwrapped,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - object unwrapped - class UnwrappedSyntax,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Unwrapped,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Unwrapped,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait UnwrappedInstances,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait UnwrappedInstances - method unwrapAnyVal - <$anon: shapeless.Unwrapped[W]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait UnwrappedInstances - trait AnyValHelper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait UnwrappedInstances - object AnyValHelper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait UnwrappedInstances - object AnyValHelper - <$anon: UnwrappedInstances.this.AnyValHelper[Any :: shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityUnwrappedInstances,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityUnwrappedInstances - <$anon: shapeless.Unwrapped[Any]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ZipperExamples,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ZipperExamples - class Dept,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ZipperExamples - class Employee,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Tuple,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class HMap,1.0,1.0,0.16666666666666666,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object HMap,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class ~?>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class ~?> - class λ,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object ~?>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait NatTRel0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package examples - object UnwrappedExamples,11.0,17.0,0.2361111111111111,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UnwrappedExamples - class Email,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UnwrappedExamples - class UserHandle,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UnwrappedExamples - class UserId,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UnwrappedExamples - class User,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package examples - object UnwrappedExamples - trait Encode,1.0,1.0,0.2,0.0,0.0,0.0,0.0
HEAD,1,package examples - object UnwrappedExamples - object Encode,3.0,6.0,0.3333333333333333,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UnwrappedExamples - object Encode - method instance - <$anon: shapeless.examples.UnwrappedExamples.Encode[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UnwrappedExamples - trait EncodeValue,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package examples - object UnwrappedExamples - object EncodeValue,3.0,3.0,0.25,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UnwrappedExamples - object EncodeValue - method instance - <$anon: shapeless.examples.UnwrappedExamples.EncodeValue[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package examples - object UnwrappedExamples - trait Encode2,1.0,1.0,0.2,0.0,0.0,0.0,0.0
HEAD,1,package examples - object UnwrappedExamples - object Encode2,3.0,6.0,0.2857142857142857,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UnwrappedExamples - object Encode2 - method instance - <$anon: shapeless.examples.UnwrappedExamples.Encode2[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object SizedExamples,14.0,22.0,0.3793103448275862,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ADTPartitionExampleTypes,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ADTPartitionExampleTypes - trait Fruit,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ADTPartitionExampleTypes - class Apple,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ADTPartitionExampleTypes - class Pear,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package examples - object ADTPartitionExample,2.0,2.0,0.037037037037037035,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ADTPartitionExample - trait Partitioner,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ADTPartitionExample - object Partitioner,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ADTPartitionExample - object Partitioner - method cnilPartitioner - <$anon: shapeless.examples.ADTPartitionExample.Partitioner[shapeless.CNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ADTPartitionExample - object Partitioner - method cpPartitioner - <$anon: shapeless.examples.ADTPartitionExample.Partitioner[shapeless.labelled.FieldType[K H] :+: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class Orphan,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Orphan,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class WrappedOrphan,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object WrappedOrphan,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait OrphanDeriver,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class OrphanMacros,4.0,6.0,0.07792207792207792,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - object singleton,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - trait SingletonOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - object SingletonOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - object SingletonOps - method instance - <$anon: shapeless.syntax.SingletonOps>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CaseClassMergeDemo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CaseClassMergeDemo - class Foo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CaseClassMergeDemo - class Bar,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object mergeSyntax,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object mergeSyntax - class MergeSyntax,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait CaseClassMerge,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CaseClassMerge,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CaseClassMerge - method mkCCMerge - <$anon: shapeless.examples.CaseClassMerge[T U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FactorialExamples,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FactorialExamples - trait Factorial,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FactorialExamples - object Factorial,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FactorialExamples - object Factorial - method fact0 - <$anon: shapeless.examples.FactorialExamples.Factorial[shapeless.nat._0]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FactorialExamples - object Factorial - method factN - <$anon: shapeless.examples.FactorialExamples.Factorial[shapeless.Succ[N]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Sorting,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Sorting - trait NonDecreasing,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Sorting - method hnilNonDecreasing - <$anon: shapeless.examples.Sorting.NonDecreasing[shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Sorting - method hlistNonDecreasing1 - <$anon: shapeless.examples.Sorting.NonDecreasing[H :: shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Sorting - method hlistNonDecreasing2 - <$anon: shapeless.examples.Sorting.NonDecreasing[H1 :: H2 :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Sorting - trait SelectLeast,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Sorting - trait LowPrioritySelectLeast,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Sorting - trait LowPrioritySelectLeast - method hlistSelectLeast1 - <$anon: shapeless.examples.Sorting.SelectLeast[H :: T H T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Sorting - object SelectLeast,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Sorting - object SelectLeast - method hlistSelectLeast3 - <$anon: shapeless.examples.Sorting.SelectLeast[H :: T TM H :: TRem]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Sorting - trait SelectionSort,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Sorting - trait LowPrioritySelectionSort,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Sorting - trait LowPrioritySelectionSort - method hlistSelectionSort1 - <$anon: shapeless.examples.Sorting.SelectionSort[S S]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Sorting - object SelectionSort,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Sorting - object SelectionSort - method hlistSelectionSort2 - <$anon: shapeless.examples.Sorting.SelectionSort[L M :: ST]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - object product,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class ProductOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package examples - object LabelledGenericExamples,1.0,1.0,0.037037037037037035,0.0,0.0,0.0,0.0
HEAD,0,package examples - object LabelledGenericExamples - class Book,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object LabelledGenericExamples - class ExtendedBook,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object LabelledGenericExamples - class Libro,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait Field,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Field,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Field - method apply - <$anon: shapeless.examples.Field>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package examples - object OldWineNewBottles,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object OldWineNewBottles - class From,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object OldWineNewBottles - class To,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object record,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object record - object Record,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait RecordArgs,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait FromRecordArgs,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - class RecordMacros,5.0,5.0,0.08928571428571429,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Witness,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Witness,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Witness - method mkWitness - <$anon: shapeless.Witness>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Witness - <$anon: shapeless.Witness>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Witness - method witnessN - <$anon: shapeless.Witness>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait WitnessWith,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityWitnessWith,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object WitnessWith,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object WitnessWith - method depInstance - <$anon: shapeless.WitnessWith[TC]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object WitnessWith - method instance - <$anon: shapeless.WitnessWith[TC]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait NatWith,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object NatWith,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object NatWith - method depInstance - <$anon: shapeless.NatWith[TC]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object NatWith - method instance - <$anon: shapeless.NatWith[TC]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Widen,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Widen,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Widen - method instance - <$anon: shapeless.Widen[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,2,package shapeless - trait SingletonTypeUtils,7.0,9.0,0.1875,0.0,0.0,0.0,0.0
HEAD,2,package shapeless - trait SingletonTypeUtils - object SingletonType,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,7,package shapeless - class SingletonTypeMacros,4.0,14.0,0.12173913043478261,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Generic,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Generic,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Generic - method instance - <$anon: shapeless.Generic[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LabelledGeneric,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,2,package shapeless - object LabelledGeneric,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object LabelledGeneric - method unsafeInstance - <$anon: shapeless.LabelledGeneric[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class nonGeneric,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class IsTuple,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object IsTuple,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class HasProductGeneric,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object HasProductGeneric,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class HasCoproductGeneric,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object HasCoproductGeneric,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,5,package shapeless - trait ReprTypes,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,19,package shapeless - trait CaseClassMacros,70.0,122.0,0.23921568627450981,0.0,0.0,1.0,0.0
HEAD,3,package shapeless - trait CaseClassMacros - object FieldType,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,2,package shapeless - trait CaseClassMacros - method patchedCompanionSymbolOf - class PatchedContext,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - method patchedCompanionSymbolOf - class PatchedContext - trait PatchedLookupResult,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - method patchedCompanionSymbolOf - class PatchedContext - method patchedLookup - <$anon: PatchedContext.this.PatchedLookupResult>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - object HasApply,8.0,8.0,0.6666666666666666,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - object HasUnapply,5.0,7.0,0.6363636363636364,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - object HasUniqueCtor,6.0,6.0,0.6,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - object HasApplyUnapply,1.0,1.0,0.1111111111111111,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - object HasCtorUnapply,1.0,1.0,0.1111111111111111,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - trait CtorDtor,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - object CtorDtor,10.0,14.0,0.17073170731707318,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - object CtorDtor - method apply - method mkCtorDtor0 - <$anon: CaseClassMacros.this.CtorDtor>,2.0,2.0,0.4,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - object CtorDtor - method apply - method mkCtorDtor1 - <$anon: CaseClassMacros.this.CtorDtor>,1.0,1.0,0.2,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - object CtorDtor - method apply - <$anon: CaseClassMacros.this.CtorDtor>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - object CtorDtor - method apply - <$anon: CaseClassMacros.this.CtorDtor>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,8,package shapeless - class GenericMacros,2.0,2.0,0.04,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Fin,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class FinZero,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class FinSucc,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Fin,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Data,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Data0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Data0 - method dfltData - <$anon: shapeless.Data[F T R]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Data1,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Data1 - method deriveInstance - <$anon: shapeless.Data[P F R]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Data,2.0,5.0,0.11904761904761904,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Data - method genTraversableData - <$anon: shapeless.Data[P C[T] R]>,1.0,2.0,0.3333333333333333,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Data - method genMapData - <$anon: shapeless.Data[P M[K V] R]>,1.0,3.0,0.5,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Data - method deriveHNil - <$anon: shapeless.Data[P shapeless.HNil R]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Data - method deriveHCons - <$anon: shapeless.Data[P H :: T R]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Data - method deriveCNil - <$anon: shapeless.Data[P shapeless.CNil R]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Data - method deriveCCons - <$anon: shapeless.Data[P H :+: T R]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait DataT,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait DataT0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait DataT0 - method dfltDataT - <$anon: shapeless.DataT[F T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait DataT1,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait DataT1 - method deriveInstance - <$anon: shapeless.DataT[P F]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object DataT,2.0,5.0,0.1,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object DataT - method genTraversableDataT - <$anon: shapeless.DataT[F CC[T]]>,1.0,2.0,0.2857142857142857,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object DataT - method genMapDataT - <$anon: shapeless.DataT[F M[K V]]>,1.0,3.0,0.42857142857142855,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object DataT - method deriveHNil - <$anon: shapeless.DataT[P shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object DataT - method deriveHCons - <$anon: shapeless.DataT[P H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object DataT - method deriveCNil - <$anon: shapeless.DataT[P shapeless.CNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object DataT - method deriveCCons - <$anon: shapeless.DataT[P H :+: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class EverythingAux,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object EverythingAux,1.0,1.0,0.1111111111111111,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class EverywhereAux,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object EverywhereAux,1.0,1.0,0.14285714285714285,0.0,0.0,0.0,0.0
HEAD,0,package examples - object DeltaExamples,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object DeltaExamples - class Foo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object DeltaExamples - class Bar,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait Delta,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait Delta0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait Delta0 - method generic - <$anon: shapeless.examples.Delta[F]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Delta,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Delta - <$anon: shapeless.examples.Delta[Boolean]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Delta - <$anon: shapeless.examples.Delta[Int]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Delta - method stringDelta - <$anon: shapeless.examples.Delta[String]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Delta - method optionDelta - <$anon: shapeless.examples.Delta[Option[T]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Delta - method deriveHNil - <$anon: shapeless.examples.Delta[shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Delta - method deriveHCons - <$anon: shapeless.examples.Delta[H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object DeltaSyntax,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object DeltaSyntax - class DeltaOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Lift,2.0,3.0,0.13043478260869565,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Lift - object isDefined,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Lift - object get,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait DeepHLister,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait LowPriorityDeepHLister,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait LowPriorityDeepHLister - method headNotCaseClassDeepHLister - <$anon: shapeless.examples.DeepHLister[H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object DeepHLister,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object DeepHLister - object hnilDeepHLister,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object DeepHLister - method headCaseClassDeepHLister - <$anon: shapeless.examples.DeepHLister[H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object DeepHListerDemo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object DeepHListerDemo - class A,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object DeepHListerDemo - class B,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object DeepHListerDemo - class C,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object DeepHListerDemo - class D,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object BaseCopyDemo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object BaseCopyDemo - trait Base,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object BaseCopyDemo - class Foo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object BaseCopyDemo - class Bar,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object BaseCopyDemo - class Baz,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object BaseCopyDemo - class Quux,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object OpenBaseCopyDemo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object OpenBaseCopyDemo - trait Base,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object OpenBaseCopyDemo - trait Base - class BaseFields,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object OpenBaseCopyDemo - class Foo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object OpenBaseCopyDemo - class Bar,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object OpenBaseCopyDemo - class Baz,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object OpenBaseCopyDemo - class Quux,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object copySyntax,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object copySyntax - class CopySyntax,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object copySyntax - class CopySyntax - object copy,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object openCopySyntax,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object openCopySyntax - class CopySyntax,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object openCopySyntax - class CopySyntax - object copy,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait OpenFamily,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait UpdateRepr,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UpdateRepr,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UpdateRepr - method mergeUpdateRepr - <$anon: shapeless.examples.UpdateRepr[T R]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UpdateRepr - method cnilUpdateRepr - <$anon: shapeless.examples.UpdateRepr[shapeless.CNil R]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UpdateRepr - method cconsUpdateRepr - <$anon: shapeless.examples.UpdateRepr[H :+: T R]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UpdateRepr - method genProdUpdateRepr - <$anon: shapeless.examples.UpdateRepr[T R]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UpdateRepr - method genCoprodUpdateRepr - <$anon: shapeless.examples.UpdateRepr[T R]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample,4.0,4.0,0.05405405405405406,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - trait FizzBuzz,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - object FizzBuzz,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - object FizzBuzz - object Fizz,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - object FizzBuzz - object Buzz,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - object FizzBuzz - object FizzAndBuzz,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - object FizzBuzz - class Other,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - trait NatToFizzBuzz,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - trait NatToFizzBuzzInstances1,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - trait NatToFizzBuzzInstances1 - method other - <$anon: shapeless.examples.FizzBuzzExample.NatToFizzBuzz[N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - trait NatToFizzBuzInstances0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - trait NatToFizzBuzInstances0 - method fizz - <$anon: shapeless.examples.FizzBuzzExample.NatToFizzBuzz[N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - trait NatToFizzBuzInstances0 - method buzz - <$anon: shapeless.examples.FizzBuzzExample.NatToFizzBuzz[N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - object NatToFizzBuzz,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - object NatToFizzBuzz - method fizzAndBuzz - <$anon: shapeless.examples.FizzBuzzExample.NatToFizzBuzz[N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - trait RevFizzBuzz,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - object RevFizzBuzz,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - object RevFizzBuzz - method revFizzBuzzOne - <$anon: shapeless.examples.FizzBuzzExample.RevFizzBuzz[<error>]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - object RevFizzBuzz - method succRevFizzBuzz - <$anon: shapeless.examples.FizzBuzzExample.RevFizzBuzz[shapeless.Succ[N]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - trait FizzBuzzResult,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - object FizzBuzzResult,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - object FizzBuzzResult - method fizzBuzzResult - <$anon: shapeless.examples.FizzBuzzExample.FizzBuzzResult[N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - object FizzBuzzToString,4.0,4.0,0.6666666666666666,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ScalaVersionSpecifics,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ScalaVersionSpecifics - class GenTraversableLikeOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ScalaVersionSpecifics - class NewEither,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ScalaVersionSpecifics - class NewLeft,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ScalaVersionSpecifics - class NewRight,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ScalaVersionSpecifics - class NewIsIterable0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LP0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LP0 - class NewIsIterable1,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LP1,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LP1 - class CanBuildFromOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacrosVersionSpecifics,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object labelled,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object labelled - trait KeyTag,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object labelled - class FieldBuilder,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Labelling,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Labelling,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Labelling - method instance - <$anon: shapeless.Labelling[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait FieldPoly,1.0,1.0,0.07692307692307693,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait FieldPoly - class FieldCaseBuilder,1.0,1.0,0.1111111111111111,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait FieldPoly - class FieldCaseBuilder - method apply - <$anon: <error>>,1.0,1.0,0.2,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait FieldOf,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,2,package shapeless - class LabelledMacros,8.0,17.0,0.2236842105263158,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StackOverflow2,3.0,3.0,0.17647058823529413,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StackOverflow2 - class A,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StackOverflow2 - class A0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StackOverflow2 - class A1,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StackOverflow2 - class A2,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StackOverflow2 - class ApplyA,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StackOverflow3,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StackOverflow3 - class Input,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StackOverflow3 - object value,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StackOverflow3 - class Preprocessor,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StackOverflow3 - class Foo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StackOverflow3 - object FooBuilder,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StackOverflow3 - class Bar,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StackOverflow3 - object BarBuilder,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StackOverflow4,4.0,4.0,0.23529411764705882,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - trait FatherOf,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - trait MotherOf,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - method fact - <$anon: shapeless.examples.TypeLevelBacktrack.FatherOf[P C]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - method fact - <$anon: shapeless.examples.TypeLevelBacktrack.MotherOf[P C]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - trait Bob,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - trait Bill,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - trait Stacy,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - trait Ben,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - trait Buffy,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - trait Sarah,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - trait Philip,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - trait Julie,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - trait IsAncestor,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - object IsAncestor,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - object IsAncestor - method directFather - <$anon: shapeless.examples.TypeLevelBacktrack.IsAncestor[A D]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - object IsAncestor - method directMother - <$anon: shapeless.examples.TypeLevelBacktrack.IsAncestor[A D]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - object IsAncestor - method fatherSideRelation - <$anon: shapeless.examples.TypeLevelBacktrack.IsAncestor[A D]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - object IsAncestor - method motherSideRelation - <$anon: shapeless.examples.TypeLevelBacktrack.IsAncestor[A D]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - trait AllAncestors,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - trait AllAncestorsLowPrio,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - trait AllAncestorsLowPrio - method none - <$anon: shapeless.examples.TypeLevelBacktrack.AllAncestors[Person shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - object AllAncestors,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - object AllAncestors - method fatherSide - <$anon: shapeless.examples.TypeLevelBacktrack.AllAncestors[P F :: PA]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - object AllAncestors - method motherSide - <$anon: shapeless.examples.TypeLevelBacktrack.AllAncestors[P M :: PA]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - object AllAncestors - method bothSides - <$anon: shapeless.examples.TypeLevelBacktrack.AllAncestors[P F :: M :: CA]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - class Relationship,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - object Relationship,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - object Relationship - method caseP2AncestorOfP1 - <$anon: shapeless.examples.TypeLevelBacktrack.Relationship[P1 P2]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - object Relationship - method caseP1AncestorOfP2 - <$anon: shapeless.examples.TypeLevelBacktrack.Relationship[P1 P2]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package examples - object recordsubtyping,6.0,6.0,0.14634146341463414,0.0,0.0,0.0,0.0
HEAD,0,package examples - object recordsubtyping - class City,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object recordsubtyping - class PopulatedCity,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object recordsubtyping - trait default,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object recordsubtyping - object toUpper,3.0,3.0,0.6,0.0,0.0,0.0,0.0
HEAD,0,package examples - class Person,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CSVExample,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - class CSVException,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait CSVConverter,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CSVConverter,12.0,15.0,0.20833333333333334,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CSVConverter - method stringCSVConverter - <$anon: shapeless.examples.CSVConverter[String]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CSVConverter - method intCsvConverter - <$anon: shapeless.examples.CSVConverter[Int]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CSVConverter - method listCsvConverter - <$anon: shapeless.examples.CSVConverter[List[A]]>,1.0,1.0,0.25,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CSVConverter - method deriveHNil - <$anon: shapeless.examples.CSVConverter[shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CSVConverter - method deriveHCons - <$anon: shapeless.examples.CSVConverter[V :: T]>,3.0,4.0,0.3076923076923077,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CSVConverter - method deriveHConsOption - <$anon: shapeless.examples.CSVConverter[Option[V] :: T]>,5.0,6.0,0.4,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CSVConverter - method deriveClass - <$anon: shapeless.examples.CSVConverter[A]>,1.0,1.0,0.25,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FoldExamples,2.0,2.0,0.15384615384615385,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FoldExamples - object combine,2.0,2.0,0.5,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ScaldingPoC,5.0,4.0,0.16,0.0,0.0,0.0,0.0
HEAD,0,package examples - object NewtypeExamples,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object NewtypeExamples - class MyStringOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,2,package shapeless - object tag,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,2,package shapeless - object tag - trait Tagged,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object tag - class Tagger,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object tag - object Tagger,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object newtype,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object newtype - trait NewtypeTag,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object the,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - class TheMacros,3.0,7.0,0.2692307692307692,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object TypeOf,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object TypeOf - class Macros,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Lub,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Lub,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Lub - method lub - <$anon: shapeless.Lub[T T T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - trait LogFacet,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - trait LogFacet - trait LogOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - trait LogFacet - trait LogMethods,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - trait CachedFacet,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - trait CachedFacet - trait CachedOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - trait CachedFacet - trait CachedMethods,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - trait CachedFacet - trait CachedCompanion,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - trait CachedCaseClassDefns,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - trait CachedCaseClassDefns - trait CaseClassOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - trait CachedCaseClassDefns - trait CaseClassCompanion,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - trait CachedCaseClassDefns - trait CaseClass,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - trait CachedCaseClassDefns - method Ops - <$anon: CachedCaseClassDefns.this.CaseClassOps>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object ALaCacheDemo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object ALaCacheDemo - object FooDefns,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object ALaCacheDemo - object FooDefns - object Foo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object ALaCacheDemo - object FooDefns - class Foo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - trait Right,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Right,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Right - method right - <$anon: shapeless.ops.zipper.Right[shapeless.Zipper[C L RH :: RT P]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - trait Left,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Left,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Left - method left - <$anon: shapeless.ops.zipper.Left[shapeless.Zipper[C LH :: LT R P]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - trait First,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object First,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object First - method first - <$anon: shapeless.ops.zipper.First[shapeless.Zipper[C L R P]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - trait Last,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Last,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Last - method last - <$anon: shapeless.ops.zipper.Last[shapeless.Zipper[C L R P]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - trait RightBy,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object RightBy,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object RightBy - method rightBy - <$anon: shapeless.ops.zipper.RightBy[shapeless.Zipper[C L R P] N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - trait LeftBy,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object LeftBy,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object LeftBy - method leftBy - <$anon: shapeless.ops.zipper.LeftBy[shapeless.Zipper[C L R P] N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - trait RightTo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object RightTo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object RightTo - method rightTo - <$anon: shapeless.ops.zipper.RightTo[shapeless.Zipper[C L R P] T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - trait LeftTo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object LeftTo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object LeftTo - method leftTo - <$anon: shapeless.ops.zipper.LeftTo[shapeless.Zipper[C L R P] T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - trait Up,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Up,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Up - method up - <$anon: shapeless.ops.zipper.Up[shapeless.Zipper[C L R Some[P]]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - trait Down,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Down,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Down - method hlistDown - <$anon: shapeless.ops.zipper.Down[shapeless.Zipper[C L RH :: RT P]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Down - method genericDown - <$anon: shapeless.ops.zipper.Down[shapeless.Zipper[C L RH :: RT P]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - trait Root,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Root,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Root - method rootRoot - <$anon: shapeless.ops.zipper.Root[shapeless.Zipper[C L R None.type]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Root - method nonRootRoot - <$anon: shapeless.ops.zipper.Root[shapeless.Zipper[C L R Some[P]]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - trait Get,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Get,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Get - method get - <$anon: shapeless.ops.zipper.Get[shapeless.Zipper[C L RH :: RT P]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - trait Put,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Put,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Put - method genericPut - <$anon: shapeless.ops.zipper.Put[shapeless.Zipper[C L RH :: RT P] E]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Put - method hlistPut - <$anon: shapeless.ops.zipper.Put[shapeless.Zipper[C L RH :: RT P] E]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - trait Modify,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Modify,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Modify - method modify - <$anon: shapeless.ops.zipper.Modify[shapeless.Zipper[C L RH1 :: RT P] RH1 RH2]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - trait Insert,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Insert,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Insert - method hlistInsert - <$anon: shapeless.ops.zipper.Insert[shapeless.Zipper[C L R P] E]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - trait Delete,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Delete,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Delete - method hlistDelete - <$anon: shapeless.ops.zipper.Delete[shapeless.Zipper[C L RH :: RT P]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - trait Reify,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Reify,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Reify - method hlistReify - <$anon: shapeless.ops.zipper.Reify[shapeless.Zipper[LR L R P]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Reify - method genericReify - <$anon: shapeless.ops.zipper.Reify[shapeless.Zipper[C L R P]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object union,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object union - object Union,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - class UnionMacros,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class Cached,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Cached,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object CachedMacros,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class CachedMacrosState,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class CachedMacros,1.0,1.0,0.023809523809523808,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class CachedMacros - method deepCopyTree - <$anon: CachedMacros.this.c.universe.Transformer>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - object traversable,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TraversableOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TraversableOps2,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object LinearAlgebraExamples,1.0,7.0,0.1320754716981132,0.0,0.0,0.0,0.0
HEAD,0,package examples - object LinearAlgebraExamples - class VectorOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object LinearAlgebraExamples - object VectorOps,1.0,7.0,0.3333333333333333,0.0,0.0,0.0,0.0
HEAD,0,package examples - object LinearAlgebraExamples - object VectorOps - object sum,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object LinearAlgebraExamples - object VectorOps - method pointOps1 - <$anon: shapeless.examples.LinearAlgebraExamples.VectorOps[<error> (Double )]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object LinearAlgebraExamples - object VectorOps - method pointOpsN - <$anon: shapeless.examples.LinearAlgebraExamples.VectorOps[N PN]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package FunctorDemoDefns - class Foo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package FunctorDemoDefns - trait Tree,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package FunctorDemoDefns - class Leaf,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package FunctorDemoDefns - class Node,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FunctorDemo,6.0,6.0,0.17142857142857143,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait Functor,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Functor,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Functor - <$anon: shapeless.examples.Functor[shapeless.Id]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Functor - method hcons - <$anon: shapeless.examples.Functor[F]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Functor - method constFunctor - <$anon: shapeless.examples.Functor[[T]T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait Functor0,2.0,1.0,0.07692307692307693,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait Functor0 - method ccons - <$anon: shapeless.examples.Functor[F]>,2.0,1.0,0.25,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait Functor0 - method generic - <$anon: shapeless.examples.Functor[F]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object functorSyntax,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object functorSyntax - class FunctorOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StagedTypeClassExample,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StagedTypeClassExample - trait TupleConsumer,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StagedTypeClassExample - object TupleConsumer,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StagedTypeClassExample - object TupleConsumer - <$anon: shapeless.examples.StagedTypeClassExample.TupleConsumer[Int String]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StagedTypeClassExample - object TupleConsumer - <$anon: shapeless.examples.StagedTypeClassExample.TupleConsumer[Boolean Double]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ReflectionUtils,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ReflectionUtils - method mkExpr - <$anon: scala.reflect.api.TreeCreator>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object sized,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object sized - trait ToHList,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object sized - object ToHList,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object sized - object ToHList - <$anon: shapeless.ops.sized.ToHList[Any shapeless.Nat._0]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object sized - object ToHList - method nonEmptySizedToHList - <$anon: shapeless.ops.sized.ToHList[Repr shapeless.Succ[L]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait Lens,4.0,4.0,0.14285714285714285,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Lens - method compose - <$anon: shapeless.Lens[T A]>,1.0,1.0,0.25,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Lens - method compose - <$anon: shapeless.Prism[T A]>,2.0,2.0,0.5,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Lens - method ~ - <$anon: shapeless.ProductLensBuilder[S (A  B)]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Lens - method ~ - <$anon: shapeless.ProductPrismBuilder[S (A  B)]>,1.0,1.0,0.25,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait LPLens,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait Prism,7.0,8.0,0.26666666666666666,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Prism - method compose - <$anon: shapeless.Prism[T A]>,1.0,1.0,0.25,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Prism - method compose - <$anon: shapeless.Prism[T A]>,2.0,2.0,0.5,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Prism - method ~ - <$anon: shapeless.ProductPrismBuilder[S (A  B)]>,1.0,1.0,0.25,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Prism - method ~ - <$anon: shapeless.ProductPrismBuilder[S (A  B)]>,2.0,3.0,0.375,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait LPPrism,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait ProductLensBuilder,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ProductLensBuilder - method ~ - <$anon: shapeless.ProductLensBuilder[C Q]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait ProductPrismBuilder,2.0,3.0,0.13636363636363635,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ProductPrismBuilder - method ~ - <$anon: shapeless.ProductPrismBuilder[C Q]>,2.0,3.0,0.2727272727272727,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object OpticDefns,1.0,1.0,0.02857142857142857,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object OpticDefns - object compose,1.0,1.0,0.3333333333333333,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object OpticDefns - class RootLens,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object OpticDefns - method setLens - <$anon: shapeless.Lens[Set[E] Boolean]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object OpticDefns - method mapLens - <$anon: shapeless.Lens[Map[K V] Option[V]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object OpticDefns - method mapPrism - <$anon: shapeless.Prism[Map[K V] V]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait OpticComposer,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object OpticComposer,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object OpticComposer - method composeLL - <$anon: shapeless.OpticComposer[shapeless.Lens[S A] shapeless.Lens[T S]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object OpticComposer - method composeLP - <$anon: shapeless.OpticComposer[shapeless.Lens[S A] shapeless.Prism[T S]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object OpticComposer - method composePL - <$anon: shapeless.OpticComposer[shapeless.Prism[S A] shapeless.Lens[T S]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object OpticComposer - method composePP - <$anon: shapeless.OpticComposer[shapeless.Prism[S A] shapeless.Prism[T S]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait MkFieldLens,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkFieldLens,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkFieldLens - method mkFieldLens - <$anon: shapeless.MkFieldLens[A K]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait MkNthFieldLens,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkNthFieldLens,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkNthFieldLens - method mkGenPNth - <$anon: shapeless.MkNthFieldLens[A N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait MkCtorPrism,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkCtorPrism,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkCtorPrism - method mkCtorPrism - <$anon: shapeless.MkCtorPrism[A B]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait InferProduct,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object InferProduct,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object InferProduct - method inferProduct1 - <$anon: shapeless.InferProduct[P :+: T K]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object InferProduct - method inferProduct2 - <$anon: shapeless.InferProduct[H :+: T K]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait MkSelectDynamicOptic,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityMkSelectDynamicOptic,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityMkSelectDynamicOptic - method mkInferCtorSelField - <$anon: shapeless.MkSelectDynamicOptic[R A K Nothing]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityMkSelectDynamicOptic - method mkSelFieldCtor - <$anon: shapeless.MkSelectDynamicOptic[R A K B]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkSelectDynamicOptic,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkSelectDynamicOptic - method mkSelField - <$anon: shapeless.MkSelectDynamicOptic[R A K Nothing]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkSelectDynamicOptic - method mkSelCtor - <$anon: shapeless.MkSelectDynamicOptic[R A Nothing B]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait MkGenericLens,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkGenericLens,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkGenericLens - method mkGenericLens - <$anon: shapeless.MkGenericLens[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkGenericLens - method mkGenericLens - <$anon: shapeless.MkGenericLens[T]> - method apply - <$anon: shapeless.Lens[T this.Repr]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait MkLabelledGenericLens,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkLabelledGenericLens,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkLabelledGenericLens - method mkLabelledGenericLens - <$anon: shapeless.MkLabelledGenericLens[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkLabelledGenericLens - method mkLabelledGenericLens - <$anon: shapeless.MkLabelledGenericLens[T]> - method apply - <$anon: shapeless.Lens[T this.Repr]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait MkHListNthLens,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkHListNthLens,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkHListNthLens - method mkHListNthLens - <$anon: shapeless.MkHListNthLens[L N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkHListNthLens - method mkHListNthLens - <$anon: shapeless.MkHListNthLens[L N]> - method apply - <$anon: shapeless.Lens[L E]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait MkHListSelectLens,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkHListSelectLens,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkHListSelectLens - method mKHlistSelectLens - <$anon: shapeless.MkHListSelectLens[L U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkHListSelectLens - method mKHlistSelectLens - <$anon: shapeless.MkHListSelectLens[L U]> - method apply - <$anon: shapeless.Lens[L U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait MkCoproductSelectPrism,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkCoproductSelectPrism,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkCoproductSelectPrism - method mKCoproductSelectPrism - <$anon: shapeless.MkCoproductSelectPrism[C T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkCoproductSelectPrism - method mKCoproductSelectPrism - <$anon: shapeless.MkCoproductSelectPrism[C T]> - method apply - <$anon: shapeless.Prism[C T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait MkRecordSelectLens,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkRecordSelectLens,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkRecordSelectLens - method mkRecordSelectLens - <$anon: shapeless.MkRecordSelectLens[R K]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkRecordSelectLens - method mkRecordSelectLens - <$anon: shapeless.MkRecordSelectLens[R K]> - method apply - <$anon: shapeless.Lens[R E]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait MkPathOptic,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityMkPathOptic,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityMkPathOptic - method mkCoselSelPathOptic - <$anon: shapeless.MkPathOptic[S shapeless.Select[K] :: P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkPathOptic,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkPathOptic - method mkHNilPathLens - <$anon: shapeless.MkPathOptic[S shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkPathOptic - method mkSelPathOptic - <$anon: shapeless.MkPathOptic[S shapeless.Select[K] :: P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkPathOptic - method mkCoselPathOptic - <$anon: shapeless.MkPathOptic[S shapeless.Coselect[B] :: P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Select,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Coselect,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Segment,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait LowPrioritySegment,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait LowPrioritySegment - method two - <$anon: shapeless.Segment[P S T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Segment,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Segment - method one - <$anon: shapeless.Segment[P Nothing T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Path,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Path - method apply - <$anon: shapeless.Path[shapeless.Coselect[H] :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Path - method selectDynamic - <$anon: shapeless.Path[segment.Out]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LPPath,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LPPath - method selectDynamic - <$anon: shapeless.Path[segment.Out]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Path,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package syntax - class HListOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - class SelectManyAux,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - class ReinsertAux,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - class ReinsertAllAux,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - class ReplaceTypeAux,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - class UpdatedTypeAux,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - class UpdatedAtAux,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - class PatchAux,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - object either,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class EitherOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object ALaCarteDemo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object ALaCarteDemo - object FooDefns,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object ALaCarteDemo - object Foo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object ALaCarteDemo - class Foo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Default,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Default,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Default - method mkDefaultByName - <$anon: shapeless.Default[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Default - trait AsRecord,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Default - object AsRecord,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Default - object AsRecord - trait Helper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Default - object AsRecord - object Helper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Default - object AsRecord - object Helper - <$anon: shapeless.Default.AsRecord.Helper[shapeless.HNil shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Default - object AsRecord - object Helper - method hconsSomeHelper - <$anon: shapeless.Default.AsRecord.Helper[Some[H] :: T K :: LabT]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Default - object AsRecord - object Helper - method hconsNoneHelper - <$anon: shapeless.Default.AsRecord.Helper[None.type :: T K :: LabT]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Default - object AsRecord - method asRecord - <$anon: shapeless.Default.AsRecord[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Default - trait AsOptions,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Default - object AsOptions,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Default - object AsOptions - trait Helper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Default - object AsOptions - object Helper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Default - object AsOptions - object Helper - method hnilHelper - <$anon: shapeless.Default.AsOptions.Helper[shapeless.HNil shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Default - object AsOptions - object Helper - method hconsSomeHelper - <$anon: shapeless.Default.AsOptions.Helper[Some[H] :: T H :: ReprT]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Default - object AsOptions - object Helper - method hconsNoneHelper - <$anon: shapeless.Default.AsOptions.Helper[None.type :: T H :: ReprT]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Default - object AsOptions - method asOption - <$anon: shapeless.Default.AsOptions[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,2,package shapeless - class DefaultMacros,6.0,11.0,0.20754716981132076,0.0,0.0,0.0,0.0
HEAD,0,package examples - object DeepSearchExamples,4.0,4.0,0.0851063829787234,0.0,0.0,0.0,0.0
HEAD,0,package examples - object DeepSearchExamples - trait Searchable,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object DeepSearchExamples - trait LowPrioritySearchable,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object DeepSearchExamples - trait LowPrioritySearchable - method hlistishSearchable - <$anon: shapeless.examples.DeepSearchExamples.Searchable[A Q]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object DeepSearchExamples - object Searchable,2.0,2.0,0.1111111111111111,0.0,0.0,0.0,0.0
HEAD,0,package examples - object DeepSearchExamples - object Searchable - method elemSearchable - <$anon: shapeless.examples.DeepSearchExamples.Searchable[A A]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object DeepSearchExamples - object Searchable - method listSearchable - <$anon: shapeless.examples.DeepSearchExamples.Searchable[List[A] Q]>,1.0,1.0,0.3333333333333333,0.0,0.0,0.0,0.0
HEAD,0,package examples - object DeepSearchExamples - object Searchable - method hnilSearchable - <$anon: shapeless.examples.DeepSearchExamples.Searchable[shapeless.HNil Q]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object DeepSearchExamples - object Searchable - method hlistSearchable - <$anon: shapeless.examples.DeepSearchExamples.Searchable[H :: T Q]>,1.0,1.0,0.25,0.0,0.0,0.0,0.0
HEAD,0,package examples - object DeepSearchExamples - class SearchableWrapper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object DeepSearchExamples - class Foo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package sexp - trait Sexp,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package sexp - class SexpCons,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package sexp - class SexpAtom,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package sexp - object SexpNil,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package sexp - object SexpProp,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package examples - trait Super,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package examples - class Foo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package examples - class Bar,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package examples - class Baz,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package examples - class Wibble,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package ast - trait Token,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package ast - trait RawToken,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package ast - class Split,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package ast - class And,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package ast - class Or,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package ast - trait ContextualMarker,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package ast - class Like,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package ast - class Prefer,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package ast - class Negate,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package ast - trait TokenTree,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package ast - trait ContextualToken,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package ast - trait CompressedToken,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package ast - class Unparsed,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package ast - class AndCondition,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package ast - class OrCondition,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package ast - class Ignored,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package ast - class Unclear,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package ast - object SpecialToken,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package ast - trait Term,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package ast - class DatabaseField,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package ast - class FieldTerm,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package ast - class BoundedTerm,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package ast - class LikeTerm,1.0,1.0,0.25,0.0,0.0,0.0,0.0
HEAD,0,package examples - package ast - class PreferToken,2.0,1.0,0.3333333333333333,0.0,0.0,0.0,0.0
HEAD,0,package examples - package ast - class InTerm,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package ast - class QualifierToken,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - trait Base,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo01,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo02,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo03,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo04,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo05,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo06,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo07,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo08,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo09,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo10,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo11,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo12,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo13,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo14,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo15,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo16,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo17,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo18,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo19,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo20,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo21,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo22,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo23,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo24,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo25,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo26,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo27,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo28,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo29,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo30,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo31,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo32,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo33,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo34,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo35,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo36,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo37,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo38,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo39,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo40,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo41,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo42,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo43,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo44,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo45,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo46,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo47,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo48,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo49,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package big - object Foo50,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object SexpExamples,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait SexpConvert,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object SexpUserConvert,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object SexpUserConvert - method stringSexpConvert - <$anon: shapeless.examples.SexpConvert[String]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object SexpUserConvert - method intSexpConvert - <$anon: shapeless.examples.SexpConvert[Int]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object SexpUserConvert - method boolSexpConvert - <$anon: shapeless.examples.SexpConvert[Boolean]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object SexpUserConvert - method optSexpConvert - <$anon: shapeless.examples.SexpConvert[Option[T]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package examples - object SexpConvert,5.0,6.0,0.10909090909090909,0.0,0.0,0.0,0.0
HEAD,0,package examples - object SexpConvert - <$anon: shapeless.examples.SexpConvert[shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package examples - object SexpConvert - method deriveHCons - <$anon: shapeless.examples.SexpConvert[shapeless.labelled.FieldType[K V] :: T]>,2.0,3.0,0.15789473684210525,0.0,0.0,0.0,0.0
HEAD,0,package examples - object SexpConvert - <$anon: shapeless.examples.SexpConvert[shapeless.CNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package examples - object SexpConvert - method deriveCCons - <$anon: shapeless.examples.SexpConvert[shapeless.labelled.FieldType[K V] :+: T]>,2.0,2.0,0.13333333333333333,0.0,0.0,0.0,0.0
HEAD,1,package examples - object SexpConvert - method deriveInstance - <$anon: shapeless.examples.SexpConvert[F]>,1.0,1.0,0.25,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CoproductRuntimeInject,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CoproductRuntimeInject - class Foo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - trait Pack,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - class PCons,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - class PNil,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - object Pack,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - trait Pack0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - trait Pack0 - trait Unpack,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - trait Pack0 - object Unpack,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - trait Pack0 - object Unpack - method unpack1 - <$anon: Pack0.this.Unpack[F H :: T H]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - trait Pack0 - trait Unpack0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - trait Pack0 - trait Unpack0 - method unpack2 - <$anon: Pack0.this.Unpack[F H :: T E]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - trait Pack0 - trait IsPCons,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - trait Pack0 - object IsPCons,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - trait Pack0 - object IsPCons - method hlistIsPCons - <$anon: Pack0.this.IsPCons[F H0 :: T0]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - trait A,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - trait B,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - trait C,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - trait Show,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - <$anon: shapeless.examples.PackExamples.A>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - <$anon: shapeless.examples.PackExamples.B>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - <$anon: shapeless.examples.PackExamples.C>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - <$anon: shapeless.examples.PackExamples.Show[shapeless.examples.PackExamples.A]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - <$anon: shapeless.examples.PackExamples.Show[shapeless.examples.PackExamples.B]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - <$anon: shapeless.examples.PackExamples.Show[shapeless.examples.PackExamples.C]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - class TyApp,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object TyApp,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait TyApp0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait TyApp1,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait TyApp1 - class Arbitrary,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object KindPolyExamples,3.0,2.0,0.2,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - object zipper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class GenericZipperOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListZipperOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MacroState,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MacroState - class MacroStateAttachment,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - object typeable,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class TypeableOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object tupled,1.0,1.0,0.3333333333333333,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object productElements,1.0,1.0,0.3333333333333333,0.0,0.0,0.0,0.0
HEAD,0,package std - object maps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package std - class MapOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object fin,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object fin - trait FromNat,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object fin - object FromNat,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object fin - object FromNat - method finZeroFromNat - <$anon: shapeless.ops.fin.FromNat[shapeless._0 N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object fin - object FromNat - method finSuccFromNat - <$anon: shapeless.ops.fin.FromNat[shapeless.Succ[M] shapeless.Succ[N]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object fin - trait ToNat,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object fin - object ToNat,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object fin - object ToNat - method finZeroToNat - <$anon: shapeless.ops.fin.ToNat[shapeless.FinZero[N]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object fin - object ToNat - method finSuccToNat - <$anon: shapeless.ops.fin.ToNat[shapeless.FinSucc[N F]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package syntax - object sized,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package syntax - class SizedConv,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CartesianProductExample,1.0,1.0,0.018518518518518517,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CartesianProductExample - trait ApplyMapper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CartesianProductExample - object ApplyMapper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CartesianProductExample - object ApplyMapper - method hnil - <$anon: shapeless.examples.CartesianProductExample.ApplyMapper[HF A shapeless.HNil shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CartesianProductExample - object ApplyMapper - method hlist - <$anon: shapeless.examples.CartesianProductExample.ApplyMapper[HF A XH :: XT OutH :: OutT]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CartesianProductExample - trait LiftA2,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CartesianProductExample - object LiftA2,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CartesianProductExample - object LiftA2 - method hnil - <$anon: shapeless.examples.CartesianProductExample.LiftA2[HF shapeless.HNil Y shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CartesianProductExample - object LiftA2 - method hlist - <$anon: shapeless.examples.CartesianProductExample.LiftA2[HF XH :: XT Y prepend.Out]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CartesianProductExample - object tuple,1.0,1.0,0.3333333333333333,0.0,0.0,0.0,0.0
HEAD,0,package examples - object KList,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object SybClassExamples,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object SybClassExamples - class Company,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object SybClassExamples - trait Subunit,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object SybClassExamples - class Dept,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object SybClassExamples - class Employee,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object SybClassExamples - class Person,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object SybClassExamples - class Salary,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object SybClassExamples - method paradise - object raise,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object SybClassExamples - trait Tree,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object SybClassExamples - class Leaf,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object SybClassExamples - class Node,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object SybClassExamples - method recursion - object inc,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object RecordExamples,1.0,1.0,0.03225806451612903,0.0,0.0,1.0,0.0
HEAD,0,package examples - object FlattenExample,3.0,3.0,0.10344827586206896,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FlattenExample - trait LowPriorityFlatten,1.0,1.0,0.3333333333333333,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FlattenExample - object flatten,1.0,1.0,0.25,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FlattenExample - object toDouble,1.0,1.0,0.25,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - object nat,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class NatOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UniquenessExample,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UniquenessExample - class Uniqueable,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UniquenessExample - class Foo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UniquenessExample - class Bar,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object OrderingExamples,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object OrderingExamples - trait LowPriorityGenericOrdering,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object OrderingExamples - trait LowPriorityGenericOrdering - method hlistIsoOrdering - <$anon: Ordering[A]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object OrderingExamples - object GenericOrdering,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object OrderingExamples - object GenericOrdering - method hnilOrdering - <$anon: Ordering[shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object OrderingExamples - object GenericOrdering - method hlistOrdering - <$anon: Ordering[H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object OrderingExamples - class Foo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - trait ProductLength,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - object ProductLength,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - object ProductLength - method length - <$anon: shapeless.ops.product.ProductLength[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - trait ToTuple,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - object ToTuple,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - object ToTuple - method toTuple - <$anon: shapeless.ops.product.ToTuple[P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - trait ToHList,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - object ToHList,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - object ToHList - method toHList - <$anon: shapeless.ops.product.ToHList[P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - trait ToRecord,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - object ToRecord,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - object ToRecord - method toRecord - <$anon: shapeless.ops.product.ToRecord[P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - trait ToMap,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - object ToMap,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - object ToMap - method productToMap - <$anon: shapeless.ops.product.ToMap[P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - trait ToTraversable,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - object ToTraversable,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - object ToTraversable - method productToTraversable - <$anon: shapeless.ops.product.ToTraversable[P M]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - trait ToSized,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - object ToSized,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - object ToSized - method productToSized - <$anon: shapeless.ops.product.ToSized[P M]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package ops - object maps,3.0,4.0,0.17391304347826086,0.0,0.0,0.0,0.0
HEAD,0,package ops - object maps - trait FromMap,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package ops - object maps - object FromMap,3.0,4.0,0.21052631578947367,0.0,0.0,0.0,0.0
HEAD,0,package ops - object maps - object FromMap - method hnilFromMap - <$anon: shapeless.ops.maps.FromMap[shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package ops - object maps - object FromMap - method hlistFromMap - <$anon: shapeless.ops.maps.FromMap[shapeless.labelled.FieldType[K0 V0] :: T]>,3.0,4.0,0.4444444444444444,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Lazy,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,2,package shapeless - object Lazy,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Lazy - method apply - <$anon: shapeless.Lazy[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Lazy - class Values,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Lazy - object Values,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object lazily,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Strict,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,2,package shapeless - object Strict,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Strict - method apply - <$anon: shapeless.Strict[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,4,package shapeless - trait OpenImplicitMacros,2.0,7.0,0.35,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - class LazyMacros,17.0,42.0,0.13861386138613863,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class LazyMacros - method setAnnotation - class SubstMessage,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class LazyMacros - trait LazyDefinitions,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class LazyMacros - trait LazyDefinitions - class Instance,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class LazyMacros - trait LazyDefinitions - object Instance,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class LazyMacros - trait LazyDefinitions - class TypeWrapper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class LazyMacros - trait LazyDefinitions - object TypeWrapper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - class LazyMacros - class DerivationContext,15.0,40.0,0.1762114537444934,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - class LazyMacros - class DerivationContext - object State,3.0,5.0,0.10869565217391304,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class LazyMacros - class DerivationContext - class State,2.0,2.0,0.0392156862745098,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class LazyMacros - class DerivationContext - class StripUnApplyNodes,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object LazyMacros,3.0,3.0,0.1111111111111111,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Annotation,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Annotation,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Annotation - method mkAnnotation - <$anon: shapeless.Annotation[A T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Annotations,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Annotations,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Annotations - method mkAnnotations - <$anon: shapeless.Annotations[A T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait TypeAnnotations,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object TypeAnnotations,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object TypeAnnotations - method mkAnnotations - <$anon: shapeless.TypeAnnotations[A T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,2,package shapeless - class AnnotationMacros,8.0,18.0,0.1935483870967742,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object adjoin,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object adjoin - trait Adjoin,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object adjoin - trait LowPriorityAdjoin,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object adjoin - trait LowPriorityAdjoin - method hlistAdjoin0 - <$anon: shapeless.ops.adjoin.Adjoin[H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object adjoin - trait LowPriorityAdjoin - method coproductAdjoin0 - <$anon: shapeless.ops.adjoin.Adjoin[H :+: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object adjoin - object Adjoin,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object adjoin - object Adjoin - method hnilAdjoin - <$anon: shapeless.ops.adjoin.Adjoin[shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object adjoin - object Adjoin - method cnilAdjoin - <$anon: shapeless.ops.adjoin.Adjoin[shapeless.CNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object adjoin - object Adjoin - method hlistLAdjoin1 - <$anon: shapeless.ops.adjoin.Adjoin[H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object adjoin - object Adjoin - method coproductAdjoin1 - <$anon: shapeless.ops.adjoin.Adjoin[H :+: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Nat,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class Succ,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class _0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Nat,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class NatMacros,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait NatMacroDefns,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait NatMacroDefns - object NatLiteral,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - trait Pred,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Pred,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Pred - method pred - <$anon: shapeless.ops.nat.Pred[shapeless.Succ[B]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - trait Sum,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Sum,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Sum - method sum1 - <$anon: shapeless.ops.nat.Sum[shapeless._0 B]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Sum - method sum2 - <$anon: shapeless.ops.nat.Sum[shapeless.Succ[A] B]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - trait Diff,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Diff,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Diff - method diff1 - <$anon: shapeless.ops.nat.Diff[A shapeless._0]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Diff - method diff2 - <$anon: shapeless.ops.nat.Diff[shapeless.Succ[A] shapeless.Succ[B]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - trait Prod,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Prod,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Prod - method prod1 - <$anon: shapeless.ops.nat.Prod[shapeless._0 B]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Prod - method prod2 - <$anon: shapeless.ops.nat.Prod[shapeless.Succ[A] B]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - trait Div,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Div,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Div - method div1 - <$anon: shapeless.ops.nat.Div[shapeless._0 A]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Div - method div2 - <$anon: shapeless.ops.nat.Div[A B]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Div - method div3 - <$anon: shapeless.ops.nat.Div[shapeless.Succ[A] B]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - trait Mod,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Mod,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Mod - method modAux - <$anon: shapeless.ops.nat.Mod[A B]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - trait LT,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object LT,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object LT - method lt1 - <$anon: shapeless._0 < shapeless.Succ[B]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object LT - method lt2 - <$anon: shapeless.Succ[A] < shapeless.Succ[B]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - trait LT0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - trait LT0 - method lt3 - <$anon: A < shapeless.Succ[A]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - trait LTEq,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object LTEq,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object LTEq - method ltEq1 - <$anon: A <= A>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object LTEq - method ltEq2 - <$anon: A <= shapeless.Succ[A]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - trait LTEq0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - trait LTEq0 - method ltEq3 - <$anon: shapeless._0 <= B>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - trait LTEq0 - method ltEq4 - <$anon: shapeless.Succ[A] <= shapeless.Succ[B]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object GT,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object GTEq,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - trait Min,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Min,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Min - method minAux0 - <$anon: shapeless.ops.nat.Min[A B]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Min - method minAux1 - <$anon: shapeless.ops.nat.Min[A B]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - trait Max,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Max,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Max - method maxAux0 - <$anon: shapeless.ops.nat.Max[A B]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Max - method maxAux1 - <$anon: shapeless.ops.nat.Max[A B]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - trait Pow,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Pow,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Pow - method pow1 - <$anon: shapeless.ops.nat.Pow[shapeless.Succ[A] shapeless._0]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Pow - method pow2 - <$anon: shapeless.ops.nat.Pow[shapeless._0 shapeless.Succ[A]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Pow - method pow3 - <$anon: shapeless.ops.nat.Pow[shapeless.Succ[N] X]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - trait Range,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Range,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Range - method range1 - <$anon: shapeless.ops.nat.Range[A A]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Range - method range2 - <$anon: shapeless.ops.nat.Range[A shapeless.Succ[B]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - trait LowPriorityGCD,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - trait LowPriorityGCD - method defaultCase - <$anon: shapeless.ops.nat.GCD[A B]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - trait GCD,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object GCD,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object GCD - method terminationCase - <$anon: shapeless.ops.nat.GCD[A shapeless._0]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - trait LCM,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object LCM,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object LCM - method lcm - <$anon: shapeless.ops.nat.LCM[A B]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - trait BoundedRange,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - trait Bound,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - trait Inclusive,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - trait SoftInclusive,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - trait Exclusive,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method nilClosed - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Inclusive[A] shapeless.ops.nat.BoundedRange.Inclusive[A]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method nilOpen - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Exclusive[A] shapeless.ops.nat.BoundedRange.Exclusive[A]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method nilLeftOpenRightClosed - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Exclusive[A] shapeless.ops.nat.BoundedRange.Inclusive[A]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method nilLeftClosedRightOpen - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Inclusive[A] shapeless.ops.nat.BoundedRange.Exclusive[A]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method nilLeftOpenRightSoft - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Exclusive[A] shapeless.ops.nat.BoundedRange.SoftInclusive[A]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method nilLeftClosedRightSoft - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Inclusive[A] shapeless.ops.nat.BoundedRange.SoftInclusive[A]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method leftOpenRightSoft - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Exclusive[A] shapeless.ops.nat.BoundedRange.SoftInclusive[shapeless.Succ[B]]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method leftClosedRightSoft - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Inclusive[A] shapeless.ops.nat.BoundedRange.SoftInclusive[shapeless.Succ[B]]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method closed - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Inclusive[A] shapeless.ops.nat.BoundedRange.Inclusive[shapeless.Succ[B]]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method open - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Exclusive[A] shapeless.ops.nat.BoundedRange.Exclusive[shapeless.Succ[B]]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method leftOpenRightClosed - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Exclusive[A] shapeless.ops.nat.BoundedRange.Inclusive[shapeless.Succ[B]]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method leftClosedRightOpen - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Inclusive[A] shapeless.ops.nat.BoundedRange.Exclusive[shapeless.Succ[B]]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method openReverse - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Exclusive[shapeless.Succ[A]] shapeless.ops.nat.BoundedRange.Exclusive[B]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method leftClosedRightOpenReverse - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Inclusive[shapeless.Succ[A]] shapeless.ops.nat.BoundedRange.Exclusive[B]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method leftOpenRightClosedReverse - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Exclusive[shapeless.Succ[A]] shapeless.ops.nat.BoundedRange.Inclusive[B]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method closedReverse - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Inclusive[shapeless.Succ[A]] shapeless.ops.nat.BoundedRange.Inclusive[B]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - object Bound,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - object Bound - method inclusive - <$anon: shapeless.ops.nat.BoundedRange.Inclusive[A]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - object Bound - method exclusive - <$anon: shapeless.ops.nat.BoundedRange.Exclusive[A]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - class ToInt,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object ToInt,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object ToInt - class Inst,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - class ToIntMacros,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object traversable,3.0,2.0,0.043478260869565216,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object traversable - trait FromTraversable,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object traversable - object FromTraversable,2.0,1.0,0.06666666666666667,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object traversable - object FromTraversable - method hnilFromTraversable - <$anon: shapeless.ops.traversable.FromTraversable[shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object traversable - object FromTraversable - method hlistFromTraversable - <$anon: shapeless.ops.traversable.FromTraversable[OutH :: OutT]>,2.0,1.0,0.2,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object traversable - trait ToSizedHList,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object traversable - object ToSizedHList,1.0,1.0,0.041666666666666664,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object traversable - object ToSizedHList - method instance - <$anon: shapeless.ops.traversable.ToSizedHList[CC A N]>,1.0,1.0,0.2,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait Typeable,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait LowPriorityTypeable,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,9,package shapeless - object Typeable,14.0,12.0,0.05194805194805195,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Typeable - class ValueTypeable,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Typeable - <$anon: shapeless.Typeable[Any]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Typeable - <$anon: shapeless.Typeable[AnyVal]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Typeable - <$anon: shapeless.Typeable[AnyRef]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Typeable - method namedSimpleTypeable - <$anon: shapeless.Typeable[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Typeable - method partialFunctionTypeable - <$anon: shapeless.Typeable[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Typeable - method valueSingletonTypeable - <$anon: shapeless.Typeable[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,2,package shapeless - object Typeable - method referenceSingletonTypeable - <$anon: shapeless.Typeable[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Typeable - method intersectionTypeable - <$anon: shapeless.Typeable[T]>,2.0,2.0,0.3333333333333333,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Typeable - method optionTypeable - <$anon: shapeless.Typeable[Option[T]]>,2.0,1.0,0.09090909090909091,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Typeable - method eitherTypeable - <$anon: shapeless.Typeable[Either[A B]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Typeable - method leftTypeable - <$anon: shapeless.Typeable[Left[A B]]>,1.0,1.0,0.1,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Typeable - method rightTypeable - <$anon: shapeless.Typeable[Right[A B]]>,1.0,1.0,0.1,0.0,0.0,0.0,0.0
HEAD,2,package shapeless - object Typeable - method genTraversableTypeable - <$anon: shapeless.Typeable[CC[T]]>,1.0,1.0,0.1,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Typeable - method genMapTypeable - <$anon: shapeless.Typeable[M[K V]]>,1.0,1.0,0.1,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Typeable - method namedCaseClassTypeable - <$anon: shapeless.Typeable[T]>,2.0,2.0,0.16666666666666666,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Typeable - <$anon: shapeless.Typeable[shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Typeable - method hlistTypeable - <$anon: shapeless.Typeable[H :: T]>,2.0,1.0,0.1,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Typeable - <$anon: shapeless.Typeable[shapeless.CNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Typeable - method coproductTypeable - <$anon: shapeless.Typeable[H :+: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Typeable - method inlTypeable - <$anon: shapeless.Typeable[shapeless.Inl[H T]]>,1.0,1.0,0.1,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Typeable - method inrTypeable - <$anon: shapeless.Typeable[shapeless.Inr[H T]]>,1.0,1.0,0.1,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait TypeCase,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object TypeCase,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object TypeCase - method apply - <$anon: shapeless.TypeCase[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,13,package shapeless - class TypeableMacros,5.0,8.0,0.09302325581395349,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class Zipper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Zipper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Zipper - class Modifier,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Coproduct,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait :+:,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class Inl,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class Inr,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CNil,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,4,package shapeless - object Coproduct,1.0,1.0,0.05555555555555555,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Coproduct - class MkCoproduct,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemo,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemo - trait ADT,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemo - class Ctor,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemo - class ExtCtor,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemo - class ADTRec,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemo - class CtorRec,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemo - class IndirectADTRec,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemo - class ExtIndirectADTRec,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemo - class ExtADT,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemo - class RefMutual,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemo - class Show2Dep,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemo - method showExtCtor - <$anon: shapeless.examples.TypeClassesDemoAux.Show[shapeless.examples.TypeClassesDemo.ExtCtor]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemo - method showShow2Dep - <$anon: shapeless.examples.TypeClassesDemoAux.Show[shapeless.examples.TypeClassesDemo.Show2Dep]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemo - trait ADT2,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemo - class Ctor2a,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemo - class Ctor2b,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemo - trait Mutual,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemo - class RefADT,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package examples - object TypeClassesDemoAux,11.0,22.0,0.27848101265822783,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemoAux - object ExtInstances,1.0,1.0,0.16666666666666666,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemoAux - object ExtInstances - method showOption - <$anon: shapeless.examples.TypeClassesDemoAux.Show[Option[A]]>,1.0,1.0,0.3333333333333333,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemoAux - object ShowSyntax,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemoAux - object ShowSyntax - class ShowSyntaxEnrich,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemoAux - trait Show,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package examples - object TypeClassesDemoAux - object Show,10.0,21.0,0.5526315789473685,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemoAux - object Show - method instance - <$anon: shapeless.examples.TypeClassesDemoAux.Show[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package examples - object TypeClassesDemoAux - object Show - method showList - <$anon: shapeless.examples.TypeClassesDemoAux.Show[List[A]]>,1.0,1.0,0.3333333333333333,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemoAux - trait Show2,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemoAux - object Show2,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemoAux - object Show2 - <$anon: shapeless.examples.TypeClassesDemoAux.Show2[Int]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemoAux - object Show2 - method deriveHNil - <$anon: shapeless.examples.TypeClassesDemoAux.Show2[shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemoAux - object Show2 - method deriveHCons - <$anon: shapeless.examples.TypeClassesDemoAux.Show2[H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemoAux - object Show2 - method deriveInstance - <$anon: shapeless.examples.TypeClassesDemoAux.Show2[F]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union,1.0,1.0,0.005555555555555556,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - trait Selector,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - trait LowPrioritySelector,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - trait LowPrioritySelector - method tlSelector - <$anon: shapeless.ops.union.Selector[H :+: T K]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object Selector,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object Selector - method hdSelector - <$anon: shapeless.ops.union.Selector[shapeless.labelled.FieldType[K V0] :+: T K]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - trait Keys,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object Keys,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object Keys - method cnilKeys - <$anon: shapeless.ops.union.Keys[U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object Keys - method coproductKeys - <$anon: shapeless.ops.union.Keys[shapeless.labelled.FieldType[K V] :+: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - trait Values,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object Values,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object Values - method cnilValues - <$anon: shapeless.ops.union.Values[U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object Values - method coproductValues - <$anon: shapeless.ops.union.Values[shapeless.labelled.FieldType[K V] :+: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - trait Fields,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object Fields,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object Fields - <$anon: shapeless.ops.union.Fields[shapeless.CNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object Fields - method cconsFields - <$anon: shapeless.ops.union.Fields[shapeless.labelled.FieldType[K V] :+: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - trait UnzipFields,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object UnzipFields,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object UnzipFields - method cnilUnzipFields - <$anon: shapeless.ops.union.UnzipFields[L]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object UnzipFields - method cconsUnzipFields - <$anon: shapeless.ops.union.UnzipFields[shapeless.labelled.FieldType[K V] :+: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - trait ToMap,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object ToMap,1.0,1.0,0.027777777777777776,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object ToMap - method cnilToMap - <$anon: shapeless.ops.union.ToMap[shapeless.CNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object ToMap - method csingleToMap - <$anon: shapeless.ops.union.ToMap[shapeless.labelled.FieldType[K V] :+: shapeless.CNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object ToMap - method coproductToMap - <$anon: shapeless.ops.union.ToMap[shapeless.labelled.FieldType[HK HV] :+: TH :+: TT]>,1.0,1.0,0.125,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - trait MapValues,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object MapValues,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object MapValues - method cnilMapValues - <$anon: shapeless.ops.union.MapValues[HF shapeless.CNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object MapValues - method cconsMapValues - <$anon: shapeless.ops.union.MapValues[HF shapeless.labelled.FieldType[K V] :+: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object tuple,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait IsComposite,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object IsComposite,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object IsComposite - method isComposite - <$anon: shapeless.ops.tuple.IsComposite[P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait Prepend,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Prepend,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Prepend - method prepend - <$anon: shapeless.ops.tuple.Prepend[T U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait ReversePrepend,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ReversePrepend,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ReversePrepend - method prepend - <$anon: shapeless.ops.tuple.ReversePrepend[T U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait At,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object At,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object At - method at - <$anon: shapeless.ops.tuple.At[T N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait Last,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Last,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Last - method last - <$anon: shapeless.ops.tuple.Last[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait Init,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Init,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Init - method init - <$anon: shapeless.ops.tuple.Init[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait Selector,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Selector,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Selector - method select - <$anon: shapeless.ops.tuple.Selector[T U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait Filter,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Filter,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Filter - method filterTuple - <$anon: shapeless.ops.tuple.Filter[T U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait FilterNot,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object FilterNot,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object FilterNot - method filterNotTuple - <$anon: shapeless.ops.tuple.FilterNot[T U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait Remove,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Remove,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Remove - method removeTuple - <$anon: shapeless.ops.tuple.Remove[T U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait RemoveAll,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object RemoveAll,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object RemoveAll - method removeAllTuple - <$anon: shapeless.ops.tuple.RemoveAll[T ST]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait Replacer,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Replacer,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Replacer - method replaceTuple - <$anon: shapeless.ops.tuple.Replacer[T U V]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait ReplaceAt,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ReplaceAt,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ReplaceAt - method replaceTuple - <$anon: shapeless.ops.tuple.ReplaceAt[T N U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait Modifier,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Modifier,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Modifier - method modifyTuple - <$anon: shapeless.ops.tuple.Modifier[T U V]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait ModifierAt,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ModifierAt,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ModifierAt - method modifyTuple - <$anon: shapeless.ops.tuple.ModifierAt[T N U V]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait Take,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Take,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Take - method tupleTake - <$anon: shapeless.ops.tuple.Take[T N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait Drop,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Drop,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Drop - method tupleDrop - <$anon: shapeless.ops.tuple.Drop[T N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait Split,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Split,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Split - method tupleSplit - <$anon: shapeless.ops.tuple.Split[T N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait ReverseSplit,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ReverseSplit,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ReverseSplit - method tupleReverseSplit - <$anon: shapeless.ops.tuple.ReverseSplit[T N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait SplitLeft,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object SplitLeft,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object SplitLeft - method tupleSplitLeft - <$anon: shapeless.ops.tuple.SplitLeft[T U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait ReverseSplitLeft,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ReverseSplitLeft,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ReverseSplitLeft - method tupleReverseSplitLeft - <$anon: shapeless.ops.tuple.ReverseSplitLeft[T U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait SplitRight,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object SplitRight,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object SplitRight - method tupleSplitRight - <$anon: shapeless.ops.tuple.SplitRight[T U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait ReverseSplitRight,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ReverseSplitRight,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ReverseSplitRight - method tupleReverseSplitRight - <$anon: shapeless.ops.tuple.ReverseSplitRight[T U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait Reverse,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Reverse,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Reverse - method tupleReverseAux - <$anon: shapeless.ops.tuple.Reverse[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait Mapper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Mapper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Mapper - method mapper - <$anon: shapeless.ops.tuple.Mapper[T P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait FlatMapper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object FlatMapper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object FlatMapper - method mapper - <$anon: shapeless.ops.tuple.FlatMapper[T P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait ConstMapper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ConstMapper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ConstMapper - method mapper - <$anon: shapeless.ops.tuple.ConstMapper[T C]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait MapFolder,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object MapFolder,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object MapFolder - method mapper - <$anon: shapeless.ops.tuple.MapFolder[T R P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait LeftFolder,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object LeftFolder,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object LeftFolder - method folder - <$anon: shapeless.ops.tuple.LeftFolder[T U P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait RightFolder,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object RightFolder,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object RightFolder - method folder - <$anon: shapeless.ops.tuple.RightFolder[T U P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait LeftReducer,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object LeftReducer,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object LeftReducer - method folder - <$anon: shapeless.ops.tuple.LeftReducer[T P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait RightReducer,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object RightReducer,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object RightReducer - method folder - <$anon: shapeless.ops.tuple.RightReducer[T P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait Transposer,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Transposer,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Transposer - method transpose - <$anon: shapeless.ops.tuple.Transposer[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait ZipApply,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ZipApply,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ZipApply - method zipApply - <$anon: shapeless.ops.tuple.ZipApply[FT AT]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait ZipOne,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ZipOne,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ZipOne - method zipOne - <$anon: shapeless.ops.tuple.ZipOne[HT TT]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait ZipConst,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ZipConst,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ZipConst - method zipConst - <$anon: shapeless.ops.tuple.ZipConst[T C]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait ZipWithIndex,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ZipWithIndex,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ZipWithIndex - method zipConst - <$anon: shapeless.ops.tuple.ZipWithIndex[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait Unifier,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Unifier,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Unifier - method unifier - <$anon: shapeless.ops.tuple.Unifier[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait SubtypeUnifier,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object SubtypeUnifier,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object SubtypeUnifier - method subtypeUnifier - <$anon: shapeless.ops.tuple.SubtypeUnifier[T B]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait Length,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Length,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Length - method length - <$anon: shapeless.ops.tuple.Length[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait ToTraversable,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object tuple - object ToTraversable,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ToTraversable - method toTraversableNothing - <$anon: shapeless.ops.tuple.ToTraversable[Unit M]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ToTraversable - method toTraversable - <$anon: shapeless.ops.tuple.ToTraversable[T M]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait ToList,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ToList,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ToList - method toList - <$anon: shapeless.ops.tuple.ToList[T Lub]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait ToArray,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ToArray,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ToArray - method toArray - <$anon: shapeless.ops.tuple.ToArray[T Lub]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait ToSized,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ToSized,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ToSized - method toSized - <$anon: shapeless.ops.tuple.ToSized[T M]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait ToCoproduct,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ToCoproduct,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ToCoproduct - <$anon: shapeless.ops.tuple.ToCoproduct[shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ToCoproduct - method hlistToCoproduct - <$anon: shapeless.ops.tuple.ToCoproduct[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait ToSum,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ToSum,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ToSum - <$anon: shapeless.ops.tuple.ToSum[shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ToSum - method hlistToSum - <$anon: shapeless.ops.tuple.ToSum[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait Collect,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Collect,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Collect - method collect - <$anon: shapeless.ops.tuple.Collect[T P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait Permutations,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Permutations,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Permutations - method permutations - <$anon: shapeless.ops.tuple.Permutations[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait RotateLeft,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object RotateLeft,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object RotateLeft - method tupleRotateLeft - <$anon: shapeless.ops.tuple.RotateLeft[T N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait RotateRight,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object RotateRight,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object RotateRight - method tupleRotateRight - <$anon: shapeless.ops.tuple.RotateRight[T N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait LeftScanner,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object LeftScanner,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object LeftScanner - method scanner - <$anon: shapeless.ops.tuple.LeftScanner[T In P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait RightScanner,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object RightScanner,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object RightScanner - method scanner - <$anon: shapeless.ops.tuple.RightScanner[T In P]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait Fill,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Fill,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Fill - method fill1 - <$anon: shapeless.ops.tuple.Fill[N A]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Fill - method fill2 - <$anon: shapeless.ops.tuple.Fill[(N1  N2) A]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait Patcher,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Patcher,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Patcher - method tuplePatch - <$anon: shapeless.ops.tuple.Patcher[N M T InT]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait Grouper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Grouper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Grouper - method tupleGrouper - <$anon: shapeless.ops.tuple.Grouper[T N Step]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait PaddedGrouper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object PaddedGrouper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object PaddedGrouper - method tuplePaddedGrouper - <$anon: shapeless.ops.tuple.PaddedGrouper[T N Step Pad]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait Align,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Align,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Align - method tupleAlign - <$anon: T => U>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Generic1,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Generic1,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Generic1 - method unsafeInstance - <$anon: shapeless.Generic1[F FR]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Generic10,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait IsHCons1,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object IsHCons1,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object IsHCons1 - method unsafeInstance - <$anon: shapeless.IsHCons1[L FH FT]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait IsHCons10,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait IsCCons1,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object IsCCons1,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object IsCCons1 - method unsafeInstance - <$anon: shapeless.IsCCons1[L FH FT]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait IsCCons10,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Split1,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Split1,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Split1 - method instance - <$anon: shapeless.Split1[[x]O0[I0[x]] FO FI]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Split10,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,2,package shapeless - class Generic1Macros,2.0,2.0,0.047619047619047616,0.0,0.0,0.0,0.0
HEAD,2,package shapeless - class IsHCons1Macros,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,2,package shapeless - class IsCCons1Macros,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,2,package shapeless - trait IsCons1Macros,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class Split1Macros,5.0,6.0,0.15384615384615385,0.0,0.0,0.0,0.0
HEAD,0,package examples - object RouterExample,6.0,6.0,0.16216216216216217,0.0,0.0,0.0,0.0
HEAD,0,package examples - object RouterExample - trait Router,2.0,2.0,0.1111111111111111,0.0,0.0,0.0,0.0
HEAD,0,package examples - object RouterExample - trait Router - method map - <$anon: shapeless.examples.RouterExample.Router[B]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object RouterExample - trait Router - method orElse - <$anon: shapeless.examples.RouterExample.Router[B]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object RouterExample - trait Router - method :+: - <$anon: shapeless.examples.RouterExample.Router[adjoin.Out]>,2.0,2.0,0.4,0.0,0.0,0.0,0.0
HEAD,0,package examples - object RouterExample - method matchString - <$anon: shapeless.examples.RouterExample.Router[String]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,2,package shapeless - class Sized,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - class SizedOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPrioritySized,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Sized,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait AdditiveCollection,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object AdditiveCollection,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object AdditiveCollection - method linearSeqAdditiveCollection - <$anon: shapeless.AdditiveCollection[scala.collection.LinearSeq[T]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object AdditiveCollection - method vectorAdditiveCollection - <$anon: shapeless.AdditiveCollection[Vector[T]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object AdditiveCollection - method arrayAdditiveCollection - <$anon: shapeless.AdditiveCollection[Array[T]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object AdditiveCollection - method stringAdditiveCollection - <$anon: shapeless.AdditiveCollection[String]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object AdditiveCollection - method listAdditiveCollection - <$anon: shapeless.AdditiveCollection[List[T]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object AdditiveCollection - method streamAdditiveCollection - <$anon: shapeless.AdditiveCollection[LazyList[T]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object AdditiveCollection - method queueAdditiveCollection - <$anon: shapeless.AdditiveCollection[scala.collection.immutable.Queue[T]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object AdditiveCollection - method defaultAdditiveCollection - <$anon: shapeless.AdditiveCollection[IndexedSeq[T]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class DefaultToIndexedSeq,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object DefaultToIndexedSeq,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait OrElse,1.0,1.0,0.25,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class Primary,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class Secondary,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object OrElse,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class OrElse0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object GCDExamples,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object GCDExamples - trait GCD,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object GCDExamples - object GCD,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object GCDExamples - object GCD - method gcd0 - <$anon: shapeless.examples.GCDExamples.GCD[X X]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object GCDExamples - object GCD - method gcd1 - <$anon: shapeless.examples.GCDExamples.GCD[X Y]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object GCDExamples - object GCD - method gcd2 - <$anon: shapeless.examples.GCDExamples.GCD[X Y]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ProductTypeClass,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait ProductTypeClassCompanion,2.0,1.0,0.1111111111111111,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LabelledProductTypeClass,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait LabelledProductTypeClassCompanion,2.0,2.0,0.058823529411764705,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LabelledProductTypeClassCompanion - class Wrap,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LabelledProductTypeClassCompanion - object Wrap,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LabelledProductTypeClassCompanion - class Instance,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait TypeClass,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait TypeClassCompanion,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LabelledTypeClass,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait LabelledTypeClassCompanion,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - package shapeless - package object shapeless,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - package shapeless - package object shapeless - trait =:!=,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - package shapeless - package object shapeless - method neq - <$anon: A =:!= B>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - package shapeless - package object shapeless - trait <:!<,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - package shapeless - package object shapeless - method nsub - <$anon: A <:!< B>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - package shapeless - package object shapeless - trait DepFn0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - package shapeless - package object shapeless - trait DepFn1,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - package shapeless - package object shapeless - trait DepFn2,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - package shapeless - package object shapeless - class ApplyEverything,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,4,package <empty> - package shapeless - class CachedImplicitMacros,2.0,5.0,0.1111111111111111,0.0,0.0,0.0,0.0
HEAD,2,package <empty> - package shapeless - class CachedImplicitMacros - method cachedImplicitImpl - <$anon: analyzer.ImplicitSearch>,2.0,5.0,0.35714285714285715,0.0,0.0,0.0,0.0
HEAD,5,package shapeless - package ops - object coproduct,4.0,4.0,0.004319654427645789,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait Inject,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Inject,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Inject - method tlInject - <$anon: shapeless.ops.coproduct.Inject[H :+: T I]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Inject - method hdInject - <$anon: shapeless.ops.coproduct.Inject[H :+: T HH]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait Selector,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object coproduct - object Selector,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object coproduct - object Selector - method hdSelector - <$anon: shapeless.ops.coproduct.Selector[H :+: T H]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Selector - method tlSelector - <$anon: shapeless.ops.coproduct.Selector[H :+: T S]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait At,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object At,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object At - method coproductAt0 - <$anon: shapeless.ops.coproduct.At[H :+: T shapeless.Nat._0]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object At - method coproductAtN - <$anon: shapeless.ops.coproduct.At[H :+: T shapeless.Succ[N]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait IndexOf,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object IndexOf,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object IndexOf - method matched - <$anon: shapeless.ops.coproduct.IndexOf[A :+: C A]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object IndexOf - method notMatched - <$anon: shapeless.ops.coproduct.IndexOf[H :+: C A]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait Partition,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Partition,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Partition - method cnilPartition - <$anon: shapeless.ops.coproduct.Partition[shapeless.CNil U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Partition - method coproductPartition_Match - <$anon: shapeless.ops.coproduct.Partition[H :+: T H]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Partition - method coproductPartition_NonMatch - <$anon: shapeless.ops.coproduct.Partition[H :+: T U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait Filter,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Filter,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Filter - method coproductFilter - <$anon: shapeless.ops.coproduct.Filter[C U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait FilterNot,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object FilterNot,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object FilterNot - method coproductFilterNot - <$anon: shapeless.ops.coproduct.FilterNot[C U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object coproduct - trait Remove,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object coproduct - trait LowPriorityRemove,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object coproduct - trait LowPriorityRemove - method removeTail - <$anon: shapeless.ops.coproduct.Remove[H :+: T U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object coproduct - object Remove,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object coproduct - object Remove - method removeHead - <$anon: shapeless.ops.coproduct.Remove[H :+: T H]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait RemoveLast,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait LowPriorityRemoveLast,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait LowPriorityRemoveLast - method fromRemove - <$anon: shapeless.ops.coproduct.RemoveLast[C I]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait LowPriorityRemoveLast - method toRemove - <$anon: shapeless.ops.coproduct.Remove[C I]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object RemoveLast,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object coproduct - trait FlatMap,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object FlatMap,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object FlatMap - method cnilFlatMap - <$anon: shapeless.ops.coproduct.FlatMap[shapeless.CNil F]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object FlatMap - method cpFlatMap - <$anon: shapeless.ops.coproduct.FlatMap[H :+: T F]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait Mapper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Mapper,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Mapper - method cnilMapper - <$anon: shapeless.ops.coproduct.Mapper[F shapeless.CNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Mapper - method cpMapper - <$anon: shapeless.ops.coproduct.Mapper[F H :+: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait Unifier,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Unifier,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Unifier - method lstUnifier - <$anon: shapeless.ops.coproduct.Unifier[H :+: shapeless.CNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Unifier - method cpUnifier - <$anon: shapeless.ops.coproduct.Unifier[H1 :+: H2 :+: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait Folder,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Folder,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Folder - method mkFolder - <$anon: shapeless.ops.coproduct.Folder[F C]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait LeftFolder,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object LeftFolder,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object LeftFolder - method hdLeftFolder - <$anon: shapeless.ops.coproduct.LeftFolder[H :+: shapeless.CNil In F]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object LeftFolder - method tlLeftFolder - <$anon: shapeless.ops.coproduct.LeftFolder[H :+: T In HF]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait ZipConst,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipConst,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipConst - method cnilZipConst - <$anon: shapeless.ops.coproduct.ZipConst[Z shapeless.CNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipConst - method cpZipConst - <$anon: shapeless.ops.coproduct.ZipConst[Z VH :+: VT]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - class ZipWithKeys,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object coproduct - object ZipWithKeys,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipWithKeys - <$anon: shapeless.ops.coproduct.ZipWithKeys[shapeless.HList shapeless.Coproduct]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait ZipWithIndex,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipWithIndex,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipWithIndex - method cpZipWithIndex - <$anon: shapeless.ops.coproduct.ZipWithIndex[C]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipWithIndex - trait Impl,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipWithIndex - object Impl,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipWithIndex - object Impl - method singleZipWithIndexImpl - <$anon: shapeless.ops.coproduct.ZipWithIndex.Impl[CH :+: shapeless.CNil N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipWithIndex - object Impl - method cpZipWithIndexImpl - <$anon: shapeless.ops.coproduct.ZipWithIndex.Impl[CH :+: CT N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait ZipWith,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipWith,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipWith - method cnilZipWith - <$anon: shapeless.ops.coproduct.ZipWith[shapeless.HNil shapeless.CNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipWith - method cpZipWith - <$anon: shapeless.ops.coproduct.ZipWith[HH :: HT VH :+: VT]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait Length,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Length,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Length - method cnilLength - <$anon: shapeless.ops.coproduct.Length[shapeless.CNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Length - method coproductLength - <$anon: shapeless.ops.coproduct.Length[H :+: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait ExtendRight,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendRight,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendRight - method extendRightSingleton - <$anon: shapeless.ops.coproduct.ExtendRight[H :+: shapeless.CNil A]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendRight - method extendRightCoproduct - <$anon: shapeless.ops.coproduct.ExtendRight[H :+: T A]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait ExtendBy,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendBy,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendBy - method extendBy - <$anon: shapeless.ops.coproduct.ExtendBy[L R]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait ExtendLeftBy,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendLeftBy,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendLeftBy - method extendLeftByCoproduct - <$anon: shapeless.ops.coproduct.ExtendLeftBy[L R]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendLeftBy - trait Impl,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendLeftBy - object Impl,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendLeftBy - object Impl - method extendLeftByCNilImpl - <$anon: shapeless.ops.coproduct.ExtendLeftBy.Impl[shapeless.CNil R]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendLeftBy - object Impl - method extendLeftByCoproductImpl - <$anon: shapeless.ops.coproduct.ExtendLeftBy.Impl[H :+: T R]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait ExtendRightBy,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendRightBy,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendRightBy - method extendRightByCNil - <$anon: shapeless.ops.coproduct.ExtendRightBy[L shapeless.CNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendRightBy - method extendRightByCoproduct - <$anon: shapeless.ops.coproduct.ExtendRightBy[L H :+: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait RotateLeft,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object RotateLeft,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object RotateLeft - method cnilRotateLeft - <$anon: shapeless.ops.coproduct.RotateLeft[shapeless.CNil N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait LowPriorityRotateLeft,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait LowPriorityRotateLeft - method coproductRotateLeft - <$anon: shapeless.ops.coproduct.RotateLeft[C N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait RotateRight,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object RotateRight,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object RotateRight - method cnilRotateRight - <$anon: shapeless.ops.coproduct.RotateRight[shapeless.CNil N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait LowPriorityRotateRight,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait LowPriorityRotateRight - method coproductRotateRight - <$anon: shapeless.ops.coproduct.RotateRight[C N]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait IsCCons,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object IsCCons,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object IsCCons - method coproductCCons - <$anon: shapeless.ops.coproduct.IsCCons[H0 :+: T0]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object coproduct - trait Split,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object coproduct - object Split,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Split - method splitZero - <$anon: shapeless.ops.coproduct.Split[C shapeless.Nat._0]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Split - method splitSucc - <$anon: shapeless.ops.coproduct.Split[H :+: T shapeless.Succ[N]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait Take,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Take,1.0,1.0,0.05263157894736842,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Take - method takeZero - <$anon: shapeless.ops.coproduct.Take[C shapeless.Nat._0]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Take - method takeSucc - <$anon: shapeless.ops.coproduct.Take[H :+: T shapeless.Succ[N]]>,1.0,1.0,0.14285714285714285,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait Drop,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Drop,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Drop - method dropZero - <$anon: shapeless.ops.coproduct.Drop[C shapeless.Nat._0]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Drop - method dropSucc - <$anon: shapeless.ops.coproduct.Drop[H :+: T shapeless.Succ[N]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait Reverse,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object coproduct - object Reverse,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Reverse - method reverse - <$anon: shapeless.ops.coproduct.Reverse[C]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Reverse - trait Reverse0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Reverse - object Reverse0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Reverse - object Reverse0 - method cnilReverse - <$anon: shapeless.ops.coproduct.Reverse.Reverse0[Out shapeless.CNil Out]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Reverse - object Reverse0 - method cconsReverse - <$anon: shapeless.ops.coproduct.Reverse.Reverse0[Acc InH :+: InT Out]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait Align,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Align,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Align - <$anon: shapeless.CNil => shapeless.CNil>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Align - method coproductAlign - <$anon: A => BH :+: BT>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait Prepend,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait LowestPriorityPrepend,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait LowestPriorityPrepend - method cconsPrepend - <$anon: shapeless.ops.coproduct.Prepend[PH :+: PT S]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait LowPriorityPrepend,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait LowPriorityPrepend - method cnilPrepend0 - <$anon: shapeless.ops.coproduct.Prepend[P shapeless.CNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Prepend,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Prepend - method cnilPrepend1 - <$anon: shapeless.ops.coproduct.Prepend[shapeless.CNil S]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait InitLast,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object InitLast,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object InitLast - method initLastCoproduct - <$anon: shapeless.ops.coproduct.InitLast[C]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object cnilOrdering,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - method coproductPartialOrdering - <$anon: PartialOrdering[H :+: T]>,1.0,1.0,0.08333333333333333,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait ToHList,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ToHList,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ToHList - <$anon: shapeless.ops.coproduct.ToHList[shapeless.CNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ToHList - method cconsToHList - <$anon: shapeless.ops.coproduct.ToHList[H :+: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object coproduct - trait Basis,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object coproduct - object Basis,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Basis - method cnilBasis - <$anon: shapeless.ops.coproduct.Basis[Super shapeless.CNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Basis - method cconsBasis - <$anon: shapeless.ops.coproduct.Basis[Super H :+: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait Reify,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Reify,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Reify - method cnilReify - <$anon: shapeless.ops.coproduct.Reify[L]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Reify - method coproductReify - <$anon: shapeless.ops.coproduct.Reify[H :+: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait LiftAll,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object LiftAll,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object LiftAll - class Curried,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object LiftAll - method liftAllCnil - <$anon: shapeless.ops.coproduct.LiftAll[F shapeless.CNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object LiftAll - method liftAllCcons - <$anon: shapeless.ops.coproduct.LiftAll[F H :+: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait CoproductToEither,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object CoproductToEither,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object CoproductToEither - method baseToEither - <$anon: shapeless.ops.coproduct.CoproductToEither[L :+: R :+: shapeless.CNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object CoproductToEither - method cconsToEither - <$anon: shapeless.ops.coproduct.CoproductToEither[L :+: R]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait EitherToCoproduct,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object EitherToCoproduct,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object EitherToCoproduct - method econsEitherToCoproduct - <$anon: shapeless.ops.coproduct.EitherToCoproduct[L Either[RL RR]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait EitherToCoproductLowPrio,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait EitherToCoproductLowPrio - method baseEitherToCoproduct - <$anon: shapeless.ops.coproduct.EitherToCoproduct[L R]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait RuntimeInject,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object RuntimeInject,1.0,1.0,0.125,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object RuntimeInject - method baseCaseRuntimeInject - <$anon: shapeless.ops.coproduct.RuntimeInject[H :+: shapeless.CNil]>,1.0,1.0,0.25,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait RuntimeInjectLowPrio,1.0,1.0,0.08333333333333333,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait RuntimeInjectLowPrio - method inductiveCaseRuntimeInject - <$anon: shapeless.ops.coproduct.RuntimeInject[H :+: T]>,1.0,1.0,0.16666666666666666,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns,16.0,19.0,0.13970588235294118,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - class Case,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - object Case,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - object Case - method apply - <$anon: shapeless.PolyDefns.Case[P L]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - object Case0,1.0,1.0,0.125,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - object Case0 - method apply - <$anon: shapeless.PolyDefns.Case[P shapeless.HNil]>,1.0,1.0,0.25,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - class Compose,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - object Compose,1.0,1.0,0.125,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - object Compose - method composeCase - <$anon: shapeless.PolyDefns.Case[C T :: shapeless.HNil]>,1.0,1.0,0.25,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - class RotateLeft,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - object RotateLeft,1.0,1.0,0.1111111111111111,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - object RotateLeft - method rotateLeftCase - <$anon: shapeless.PolyDefns.Case[C RL]>,1.0,1.0,0.25,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - class RotateRight,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - object RotateRight,1.0,1.0,0.1111111111111111,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - object RotateRight - method rotateLeftCase - <$anon: shapeless.PolyDefns.Case[C RL]>,1.0,1.0,0.25,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - class BindFirst,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - object BindFirst,1.0,2.0,0.16666666666666666,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - object BindFirst - method bindFirstCase - <$anon: shapeless.PolyDefns.Case[BF Tail]>,1.0,2.0,0.4,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - class Curried,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - trait LowPriorityCurried,1.0,2.0,0.09523809523809523,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - object Curried,1.0,2.0,0.18181818181818182,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - class ->,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - trait LowPriorityLiftFunction1,1.0,1.0,0.3333333333333333,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - class >->,1.0,1.0,0.3333333333333333,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - trait LowPriorityLiftU,1.0,1.0,0.16666666666666666,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - trait LowPriorityLiftU - method default - <$anon: LowPriorityLiftU.this.ProductCase[L]>,1.0,1.0,0.25,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - class LiftU,1.0,1.0,0.16666666666666666,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - class LiftU - method defined - <$anon: LiftU.this.ProductCase[L]>,1.0,1.0,0.25,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - trait ~>,1.0,1.0,0.25,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - object ~>,4.0,4.0,0.5714285714285714,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - object identity,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Poly,2.0,2.0,0.05405405405405406,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Poly - object ProductCase,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Poly - object ProductCase - method apply - <$anon: Poly.this.ProductCase[L]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Poly - trait CaseBuilder,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Poly - trait LowPriorityCaseBuilder,1.0,1.0,0.14285714285714285,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Poly - trait LowPriorityCaseBuilder - method valueCaseBuilder - <$anon: Poly.this.CaseBuilder[T shapeless.HNil T]>,1.0,1.0,0.3333333333333333,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Poly - object CaseBuilder,1.0,1.0,0.125,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Poly - object CaseBuilder - method fnCaseBuilder - <$anon: Poly.this.CaseBuilder[F H :: T Result]>,1.0,1.0,0.3333333333333333,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Poly,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Poly0,1.0,1.0,0.14285714285714285,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Poly0 - method at - <$anon: Poly0.this.ProductCase[shapeless.HNil]>,1.0,1.0,0.25,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - class PolyMacros,1.0,1.0,0.0625,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ScalaVersionSpecifics,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacrosVersionSpecifics,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object compose,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ZipApplyExamples,8.0,2.0,0.04,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FibonacciExamples,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FibonacciExamples - class Fibonacci,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FibonacciExamples - object Fibonacci,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FibonacciExamples - trait Fibs,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FibonacciExamples - object Fibs,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FibonacciExamples - object Fibs - method fibs0 - <$anon: shapeless.examples.FibonacciExamples.Fibs[shapeless.nat._0 shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FibonacciExamples - object Fibs - method fibsN - <$anon: shapeless.examples.FibonacciExamples.Fibs[shapeless.Succ[N] H :: T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object BooleanInduction,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object BooleanInduction - trait If,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object BooleanInduction - object If,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object BooleanInduction - object If - method ifTrue - <$anon: shapeless.examples.BooleanInduction.If[shapeless.examples.BooleanInduction.True A B]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object BooleanInduction - object If - method ifFalse - <$anon: shapeless.examples.BooleanInduction.If[shapeless.examples.BooleanInduction.False A B]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object BooleanInduction - object si,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object BooleanInduction - object si - trait Case,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object BooleanInduction - object si - <$anon: shapeless.examples.BooleanInduction.si.Case[shapeless.examples.BooleanInduction.True]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object BooleanInduction - object si - <$anon: shapeless.examples.BooleanInduction.si.Case[shapeless.examples.BooleanInduction.False]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ScalaEnumDemo,1.0,1.0,0.07142857142857142,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ScalaEnumDemo - object WeekDay,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ShapelessEnumDemo,1.0,1.0,0.06666666666666667,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ShapelessEnumDemo - trait WeekDay,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ShapelessEnumDemo - object WeekDay,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ShapelessEnumDemo - object WeekDay - <$anon: shapeless.examples.ShapelessEnumDemo.WeekDay>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ShapelessEnumDemo - object WeekDay - <$anon: shapeless.examples.ShapelessEnumDemo.WeekDay>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ShapelessEnumDemo - object WeekDay - <$anon: shapeless.examples.ShapelessEnumDemo.WeekDay>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ShapelessEnumDemo - object WeekDay - <$anon: shapeless.examples.ShapelessEnumDemo.WeekDay>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ShapelessEnumDemo - object WeekDay - <$anon: shapeless.examples.ShapelessEnumDemo.WeekDay>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ShapelessEnumDemo - object WeekDay - <$anon: shapeless.examples.ShapelessEnumDemo.WeekDay>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ShapelessEnumDemo - object WeekDay - <$anon: shapeless.examples.ShapelessEnumDemo.WeekDay>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Values,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Values - trait MkValues,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Values - object MkValues,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Values - object MkValues - method values - <$anon: shapeless.examples.Values.MkValues[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Values - object MkValues - trait Aux,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Values - object MkValues - object Aux,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Values - object MkValues - object Aux - method cnilAux - <$anon: shapeless.examples.Values.MkValues.Aux[A shapeless.CNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Values - object MkValues - object Aux - method cconsAux - <$anon: shapeless.examples.Values.MkValues.Aux[T L :+: R]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - class Fix,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - class ConstF,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - trait Functor,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - trait Applicative,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Applicative,2.0,1.0,0.05555555555555555,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Applicative - <$anon: shapeless.examples.recursionschemes.Applicative[shapeless.Id]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Applicative - <$anon: shapeless.examples.recursionschemes.Applicative[Option]>,2.0,1.0,0.2,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Applicative - method constApp - <$anon: shapeless.examples.recursionschemes.Applicative[[x]shapeless.examples.recursionschemes.ConstF[T x]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - trait Traverse,2.0,2.0,0.2857142857142857,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Traverse,2.0,1.0,0.09090909090909091,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Traverse - <$anon: shapeless.examples.recursionschemes.Traverse[Seq]>,2.0,1.0,0.14285714285714285,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - trait Monoid,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Monoid,2.0,1.0,0.05,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Monoid - <$anon: shapeless.examples.recursionschemes.Monoid[Int]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Monoid - method optMonoid - <$anon: shapeless.examples.recursionschemes.Monoid[Option[A]]>,2.0,1.0,0.2,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Monoid - method unionMonoid - <$anon: shapeless.examples.recursionschemes.Monoid[Set[A]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Monoid - method overwriteMonoid - <$anon: shapeless.examples.recursionschemes.Monoid[Map[K V]]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package examples - package recursionschemes - trait Morph,18.0,17.0,0.288135593220339,0.0,0.0,0.0,0.0
HEAD,1,package examples - package recursionschemes - trait Morph - object F,3.0,3.0,0.13043478260869565,0.0,0.0,0.0,0.0
HEAD,1,package examples - package recursionschemes - trait Morph - object F - trait Extractor,3.0,3.0,0.16666666666666666,0.0,0.0,0.0,0.0
HEAD,1,package examples - package recursionschemes - trait Morph - object F - trait Extractor - object as,1.0,1.0,0.16666666666666666,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - trait Morph - object F - trait Extractor - object tupled,1.0,1.0,0.16666666666666666,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - trait Morph - object F - trait Extractor - object seq,1.0,1.0,0.16666666666666666,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - trait Morph - object F - <$anon: shapeless.examples.recursionschemes.Morph.F.Extractor[String]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package examples - package recursionschemes - object Morph,7.0,7.0,0.05785123966942149,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Morph - trait Rec,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Morph - trait RecHList,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Morph - trait RecCoproduct,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package examples - package recursionschemes - object Morph - object Rec,3.0,3.0,0.15789473684210525,0.0,0.0,0.0,0.0
HEAD,1,package examples - package recursionschemes - object Morph - object Rec - method reflexive - <$anon: shapeless.examples.recursionschemes.Morph.Rec[T T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package examples - package recursionschemes - object Morph - object Rec - method traverse - <$anon: shapeless.examples.recursionschemes.Morph.Rec[T H[U]]>,3.0,3.0,0.42857142857142855,0.0,0.0,0.0,0.0
HEAD,1,package examples - package recursionschemes - object Morph - trait Rec1,4.0,4.0,0.057971014492753624,0.0,0.0,0.0,0.0
HEAD,1,package examples - package recursionschemes - object Morph - trait Rec1 - method fieldType - <$anon: shapeless.examples.recursionschemes.Morph.Rec[T shapeless.labelled.FieldType[K V]]>,1.0,1.0,0.125,0.0,0.0,0.0,0.0
HEAD,1,package examples - package recursionschemes - object Morph - trait Rec1 - method hnil - <$anon: shapeless.examples.recursionschemes.Morph.RecHList[T shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package examples - package recursionschemes - object Morph - trait Rec1 - method cnil - <$anon: shapeless.examples.recursionschemes.Morph.RecCoproduct[T shapeless.CNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package examples - package recursionschemes - object Morph - trait Rec1 - method hcons - <$anon: shapeless.examples.recursionschemes.Morph.RecHList[U H :: T]>,1.0,1.0,0.14285714285714285,0.0,0.0,0.0,0.0
HEAD,1,package examples - package recursionschemes - object Morph - trait Rec1 - method ccons - <$anon: shapeless.examples.recursionschemes.Morph.RecCoproduct[T L :+: R]>,2.0,2.0,0.11764705882352941,0.0,0.0,0.0,0.0
HEAD,1,package examples - package recursionschemes - object Morph - trait Rec1 - method generic - <$anon: shapeless.examples.recursionschemes.Morph.Rec[T U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package examples - package recursionschemes - object Morph - trait Rec2,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package examples - package recursionschemes - object Morph - trait Rec2 - method const - <$anon: shapeless.examples.recursionschemes.Morph.Rec[T U]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package examples - package recursionschemes - object Morph - method morph - <$anon: shapeless.examples.recursionschemes.Morph[T]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package examples - trait Expr,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package examples - class Num,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package examples - class Var,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package examples - class Add,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package examples - class Mul,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package examples - class Ifn,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package examples - class Sum,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package examples - object Expr,9.0,24.0,0.43636363636363634,0.0,0.0,0.0,0.0
HEAD,0,package examples - object RecursionSchemesExamples,1.0,1.0,0.05263157894736842,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriority,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object LowPriority,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object LowPriority - trait Ignoring,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object LowPriority - object Ignoring,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object LowPriority - trait For,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object LowPriority - trait ForIgnoring,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class LowPriorityMacros,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityTypes,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityTypes - object LowPriorityFor,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object LensExamples,1.0,1.0,0.029411764705882353,0.0,0.0,0.0,0.0
HEAD,0,package examples - object LensExamples - class Address,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object LensExamples - class Person,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class UnionOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package syntax - class DynamicUnionOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class RecordOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package syntax - class DynamicRecordOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait HList,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class ::,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait HNil,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object HNil,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,4,package shapeless - object HList,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object HList - class FillWithOps,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object HList - object ListCompat,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait NatProductArgs,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ProductArgs,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait FromProductArgs,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait SingletonProductArgs,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class ProductMacros,9.0,26.0,0.3561643835616438,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ImpredicativeExamples,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ImpredicativeExamples - object head,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UnfoldExamples,8.0,8.0,0.11594202898550725,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UnfoldExamples - trait Unfold,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UnfoldExamples - object Unfold,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UnfoldExamples - object Unfold - method unfold1 - <$anon: shapeless.examples.UnfoldExamples.Unfold[F E S]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UnfoldExamples - object Unfold - trait ApplyUnfold,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UnfoldExamples - object Unfold - method unfold - <$anon: shapeless.examples.UnfoldExamples.Unfold.ApplyUnfold[E]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UnfoldExamples - object Unfold - method unfold - <$anon: shapeless.examples.UnfoldExamples.Unfold.ApplyUnfold[E]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UnfoldExamples - trait UnfoldAux,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UnfoldExamples - object UnfoldAux,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UnfoldExamples - object UnfoldAux - method unfold1 - <$anon: shapeless.examples.UnfoldExamples.UnfoldAux[F S S CoS shapeless.HNil]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UnfoldExamples - object UnfoldAux - method unfold2 - <$anon: shapeless.examples.UnfoldExamples.UnfoldAux[F E S CoS OutH :: OutT]>,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UnfoldExamples - object unfoldMisc,4.0,4.0,0.6666666666666666,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UnfoldExamples - object unfoldFibs,3.0,3.0,0.3,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UnfoldExamples - object toInt,1.0,1.0,0.3333333333333333,0.0,0.0,0.0,0.0