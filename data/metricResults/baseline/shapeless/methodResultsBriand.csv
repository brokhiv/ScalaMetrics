commit,faults,path,CyclomaticComplexity,DepthOfNesting,LinesOfCode,SourceLinesOfCode,CommentLinesOfCode,CommentDensity,OutDegree,OutDegreeDistinct,PatternSize,NumberOfPatternVariables,ParadigmScoreFraction
HEAD,0,package shapeless - object Refute - object Impl - method amb1,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Refute - object Impl - method amb2,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Refute - method refute,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package <empty> - object Boilerplate - class BlockHelper - method block,1.0,0.0,6.0,6.0,0.0,0.0,12.0,10.0,0.0,0.0,1.0
HEAD,0,package <empty> - object Boilerplate - method gen,1.0,0.0,5.0,5.0,0.0,0.0,4.0,2.0,0.0,0.0,1.0
HEAD,0,package <empty> - object Boilerplate - trait Template - method filename,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - object Boilerplate - trait Template - method content,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - object Boilerplate - trait Template - method range,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package <empty> - object Boilerplate - trait Template - method body,1.0,0.0,8.0,8.0,0.0,0.0,47.0,18.0,0.0,0.0,1.0
HEAD,0,package <empty> - object Boilerplate - object GenTuplerInstances - method content,1.0,0.0,23.0,12.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package <empty> - object Boilerplate - object GenFnToProductInstances - method content,2.0,0.0,28.0,17.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,0,package <empty> - object Boilerplate - object GenFnFromProductInstances - method content,1.0,0.0,28.0,16.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package <empty> - object Boilerplate - object GenCaseInst - method content,1.0,0.0,17.0,11.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package <empty> - object Boilerplate - object GenPolyApply - method content,1.0,0.0,17.0,9.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package <empty> - object Boilerplate - object GenPolyInst - method content,1.0,0.0,16.0,11.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package <empty> - object Boilerplate - object GenCases - method content,1.0,0.0,31.0,17.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package <empty> - object Boilerplate - object GenPolyNTraits - method content,2.0,0.0,34.0,18.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,0,package <empty> - object Boilerplate - object GenPolyNBuilders - method content,1.0,0.0,51.0,22.0,6.0,0.21428571428571427,3.0,3.0,0.0,0.0,0.0
HEAD,0,package <empty> - object Boilerplate - object GenNats - method content,1.0,0.0,11.0,7.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,1,package <empty> - object Boilerplate - object GenTupleTypeableInstances - method content,2.0,6.0,28.0,18.0,0.0,0.0,10.0,6.0,6.0,2.0,1.0
HEAD,1,package <empty> - object Boilerplate - object GenSizedBuilder - method content,1.0,0.0,17.0,8.0,0.0,0.0,6.0,6.0,0.0,0.0,1.0
HEAD,0,package <empty> - object Boilerplate - object GenHMapBuilder - method content,1.0,0.0,18.0,13.0,0.0,0.0,20.0,8.0,0.0,0.0,1.0
HEAD,0,package <empty> - object Boilerplate - object GenUnpackInstances - method content,1.0,0.0,21.0,12.0,5.0,0.29411764705882354,9.0,4.0,0.0,0.0,0.0
HEAD,0,package examples - object OpticExamples - method update,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,4,package shapeless - package ops - package record - object Selector - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Selector - macro method materialize,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - package record - class UnsafeSelector - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - class SelectorMacros - method materialize,4.0,9.0,12.0,12.0,0.0,0.0,8.0,5.0,9.0,2.0,0.5000000000000001
HEAD,0,package shapeless - package ops - package record - object SelectAll - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object SelectAll - method hnilSelectAll,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - object SelectAll - method hnilSelectAll - <$anon: shapeless.ops.record.SelectAll[L shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object SelectAll - method hconsSelectAll,1.0,0.0,9.0,8.0,0.0,0.0,5.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - object SelectAll - method hconsSelectAll - <$anon: shapeless.ops.record.SelectAll[L KH :: KT]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,4.0,3.0,0.0,0.0,0.0
HEAD,4,package shapeless - package ops - package record - object Updater - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Updater - macro method meterialize,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - package record - class UnsafeUpdater - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - class UpdaterMacros - method materialize,4.0,5.0,13.0,12.0,0.0,0.0,14.0,11.0,6.0,2.0,0.6000000000000001
HEAD,0,package shapeless - package ops - package record - trait LowPriorityMerger - method hlistMerger1,1.0,0.0,6.0,6.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - trait LowPriorityMerger - method hlistMerger1 - <$anon: shapeless.ops.record.Merger[H :: T M]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Merger - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Merger - method hnilMerger,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - object Merger - method hnilMerger - <$anon: shapeless.ops.record.Merger[shapeless.HNil M]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Merger - method hlistMerger2,2.0,5.0,13.0,12.0,0.0,0.0,8.0,8.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - package record - object Merger - method hlistMerger2 - <$anon: shapeless.ops.record.Merger[shapeless.labelled.FieldType[K V] :: T M]> - method apply,2.0,5.0,5.0,5.0,0.0,0.0,7.0,7.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - package record - trait LowPriorityDeepMerger - method hlistMerger1,1.0,0.0,6.0,6.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - trait LowPriorityDeepMerger - method hlistMerger1 - <$anon: shapeless.ops.record.DeepMerger[H :: T M]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait LowPriorityDeepMerger0 - method hlistMerger2,2.0,5.0,13.0,12.0,0.0,0.0,8.0,8.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - package record - trait LowPriorityDeepMerger0 - method hlistMerger2 - <$anon: shapeless.ops.record.DeepMerger[shapeless.labelled.FieldType[K V] :: T M]> - method apply,2.0,5.0,5.0,5.0,0.0,0.0,7.0,7.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - package record - object DeepMerger - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object DeepMerger - method hnilMerger,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - object DeepMerger - method hnilMerger - <$anon: shapeless.ops.record.DeepMerger[shapeless.HNil M]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object DeepMerger - method hlistMerger3,2.0,5.0,13.0,12.0,0.0,0.0,9.0,8.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - package record - object DeepMerger - method hlistMerger3 - <$anon: shapeless.ops.record.DeepMerger[shapeless.labelled.FieldType[K V] :: T M]> - method apply,2.0,5.0,4.0,4.0,0.0,0.0,8.0,7.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - package record - trait LowPriorityExtractor - method extract,2.0,5.0,13.0,12.0,0.0,0.0,9.0,9.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - package record - trait LowPriorityExtractor - method extract - <$anon: L => shapeless.labelled.FieldType[K V] :: ET> - method apply,2.0,5.0,4.0,4.0,0.0,0.0,8.0,8.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - package record - object Extractor - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - object Extractor - method hnil,1.0,0.0,3.0,3.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - object Extractor - method hnil - <$anon: L => E> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Extractor - <$anon: shapeless.HList => shapeless.HList> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Extractor - method identical,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - object Extractor - method descend,2.0,5.0,13.0,12.0,0.0,0.0,9.0,8.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - package record - object Extractor - method descend - <$anon: L => shapeless.labelled.FieldType[K V] :: ET> - method apply,2.0,5.0,4.0,4.0,0.0,0.0,8.0,7.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - package record - trait LowPriorityMergeWith - method hlistMergeWith1,1.0,0.0,9.0,8.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - trait LowPriorityMergeWith - method hlistMergeWith1 - <$anon: shapeless.ops.record.MergeWith[shapeless.labelled.FieldType[K V] :: T M F]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object MergeWith - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object MergeWith - method hnilMergeWith,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - object MergeWith - method hnilMergeWith - <$anon: shapeless.ops.record.MergeWith[shapeless.HNil M F]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object MergeWith - method hlistMergeWith2,2.0,5.0,15.0,14.0,0.0,0.0,9.0,9.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - package record - object MergeWith - method hlistMergeWith2 - <$anon: shapeless.ops.record.MergeWith[shapeless.labelled.FieldType[K V0] :: T M F]> - method apply,2.0,5.0,5.0,5.0,0.0,0.0,8.0,8.0,6.0,2.0,1.0
HEAD,1,package shapeless - package ops - package record - object Modifier - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Modifier - macro method materialize,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - package record - class UnsafeModifier - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - class ModifierMacros - method materialize,4.0,10.0,16.0,16.0,0.0,0.0,15.0,9.0,9.0,2.0,0.5555555555555556
HEAD,1,package shapeless - package ops - package record - object Remover - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Remover - macro method materialize,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - package record - class UnsafeRemover - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - class RemoverMacros - method materialize,5.0,10.0,15.0,15.0,0.0,0.0,14.0,10.0,15.0,4.0,0.6000000000000001
HEAD,0,package shapeless - package ops - package record - trait Remove - method reinsert,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait LowPriorityRemove - method hconsRemove,2.0,5.0,10.0,10.0,0.0,0.0,11.0,7.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - package record - trait LowPriorityRemove - method hconsRemove - <$anon: shapeless.ops.record.Remove[H :: T E]> - method apply,2.0,5.0,4.0,4.0,0.0,0.0,6.0,5.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - package record - trait LowPriorityRemove - method hconsRemove - <$anon: shapeless.ops.record.Remove[H :: T E]> - method reinsert,1.0,0.0,1.0,1.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Remove - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Remove - method removeHead,1.0,0.0,6.0,6.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - object Remove - method removeHead - <$anon: shapeless.ops.record.Remove[shapeless.labelled.FieldType[K V] :: T shapeless.labelled.FieldType[K V]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Remove - method removeHead - <$anon: shapeless.ops.record.Remove[shapeless.labelled.FieldType[K V] :: T shapeless.labelled.FieldType[K V]]> - method reinsert,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Remove - method removeUnlabelledHead,1.0,0.0,6.0,6.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - object Remove - method removeUnlabelledHead - <$anon: shapeless.ops.record.Remove[shapeless.labelled.FieldType[K V] :: T V]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Remove - method removeUnlabelledHead - <$anon: shapeless.ops.record.Remove[shapeless.labelled.FieldType[K V] :: T V]> - method reinsert,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,2,package shapeless - package ops - package record - trait RemoveAll - method reinsert,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object RemoveAll - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object RemoveAll - method hnilRemoveAll,1.0,0.0,6.0,6.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - object RemoveAll - method hnilRemoveAll - <$anon: shapeless.ops.record.RemoveAll[L shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object RemoveAll - method hnilRemoveAll - <$anon: shapeless.ops.record.RemoveAll[L shapeless.HNil]> - method reinsert,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object RemoveAll - method hconsRemoveAll,3.0,5.0,14.0,13.0,0.0,0.0,14.0,8.0,12.0,4.0,1.0
HEAD,0,package shapeless - package ops - package record - object RemoveAll - method hconsRemoveAll - <$anon: shapeless.ops.record.RemoveAll[L H :: T]> - method apply,3.0,5.0,5.0,5.0,0.0,0.0,9.0,5.0,12.0,4.0,1.0
HEAD,0,package shapeless - package ops - package record - object RemoveAll - method hconsRemoveAll - <$anon: shapeless.ops.record.RemoveAll[L H :: T]> - method reinsert,1.0,0.0,1.0,1.0,0.0,0.0,4.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Renamer - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Renamer - method hlistRenamer1,1.0,0.0,5.0,5.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - object Renamer - method hlistRenamer1 - <$anon: shapeless.ops.record.Renamer[shapeless.labelled.FieldType[K1 V] :: T K1 K2]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Renamer - method hlistRenamer,1.0,0.0,6.0,6.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - object Renamer - method hlistRenamer - <$anon: shapeless.ops.record.Renamer[H :: T K1 K2]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object LacksKey - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object LacksKey - macro method materialize,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - class LacksKeyMacros - method materialize,4.0,9.0,10.0,10.0,0.0,0.0,6.0,4.0,3.0,0.0,0.3333333333333333
HEAD,0,package shapeless - package ops - package record - object Keys - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Keys - <$anon: shapeless.ops.record.Keys[shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - package record - object Keys - method hlistKeys,1.0,0.0,7.0,7.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - object Keys - method hlistKeys - <$anon: shapeless.ops.record.Keys[shapeless.labelled.FieldType[K V] :: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Values - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Values - method hnilValues,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - object Values - method hnilValues - <$anon: shapeless.ops.record.Values[L]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Values - method hlistValues,1.0,0.0,5.0,5.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - object Values - method hlistValues - <$anon: shapeless.ops.record.Values[shapeless.labelled.FieldType[K V] :: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object SwapRecord - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object SwapRecord - method hnilSwapRecord,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - object SwapRecord - method hnilSwapRecord - <$anon: shapeless.ops.record.SwapRecord[L]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object SwapRecord - method hlistSwapRecord,1.0,0.0,5.0,5.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - object SwapRecord - method hlistSwapRecord - <$anon: shapeless.ops.record.SwapRecord[shapeless.labelled.FieldType[K V] :: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Fields - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Fields - method hnilFields,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - object Fields - method hnilFields - <$anon: shapeless.ops.record.Fields[L]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object Fields - method hconsFields,1.0,0.0,8.0,8.0,0.0,0.0,6.0,6.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - object Fields - method hconsFields - <$anon: shapeless.ops.record.Fields[shapeless.labelled.FieldType[K V] :: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,5.0,5.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait UnzipFields - method keys,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - trait UnzipFields - method values,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object UnzipFields - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object UnzipFields - method hnilUnzipFields,1.0,0.0,7.0,7.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - object UnzipFields - method hnilUnzipFields - <$anon: shapeless.ops.record.UnzipFields[L]> - method keys,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object UnzipFields - method hnilUnzipFields - <$anon: shapeless.ops.record.UnzipFields[L]> - method values,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object UnzipFields - method hconsUnzipFields,1.0,0.0,10.0,10.0,0.0,0.0,6.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - object UnzipFields - method hconsUnzipFields - <$anon: shapeless.ops.record.UnzipFields[shapeless.labelled.FieldType[K V] :: T]> - method keys,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object UnzipFields - method hconsUnzipFields - <$anon: shapeless.ops.record.UnzipFields[shapeless.labelled.FieldType[K V] :: T]> - method values,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object ToMap - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object ToMap - method hnilToMap,1.0,0.0,6.0,6.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - object ToMap - method hnilToMap - <$anon: shapeless.ops.record.ToMap[L]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object ToMap - method hnilToMapAnyNothing,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object ToMap - method hsingleToMap,1.0,0.0,8.0,8.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - object ToMap - method hsingleToMap - <$anon: shapeless.ops.record.ToMap[shapeless.labelled.FieldType[K V] :: shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object ToMap - method hlistToMap,2.0,8.0,13.0,13.0,0.0,0.0,13.0,9.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - package record - object ToMap - method hlistToMap - <$anon: shapeless.ops.record.ToMap[shapeless.labelled.FieldType[HK HV] :: TH :: TT]> - method apply,2.0,8.0,3.0,3.0,0.0,0.0,12.0,8.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - package record - object MapValues - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object MapValues - method hnilMapValues,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - object MapValues - method hnilMapValues - <$anon: shapeless.ops.record.MapValues[HF L]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object MapValues - method hconsMapValues,1.0,0.0,8.0,8.0,0.0,0.0,6.0,6.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - package record - object MapValues - method hconsMapValues - <$anon: shapeless.ops.record.MapValues[HF shapeless.labelled.FieldType[K V] :: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,5.0,5.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object AlignByKeys - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object AlignByKeys - <$anon: shapeless.ops.record.AlignByKeys[shapeless.HNil shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - package record - object AlignByKeys - method hlistAlign,2.0,5.0,10.0,10.0,0.0,0.0,8.0,7.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - package record - object AlignByKeys - method hlistAlign - <$anon: shapeless.ops.record.AlignByKeys[T KH :: KT]> - method apply,2.0,5.0,4.0,4.0,0.0,0.0,7.0,6.0,6.0,2.0,1.0
HEAD,0,package examples - trait Monoid - method zero,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait Monoid - method append,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Monoid - method mzero,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Monoid - method booleanMonoid,1.0,0.0,4.0,4.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - object Monoid - method booleanMonoid - <$anon: shapeless.examples.Monoid[Boolean]> - method zero,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Monoid - method booleanMonoid - <$anon: shapeless.examples.Monoid[Boolean]> - method append,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object Monoid - method intMonoid,1.0,0.0,4.0,4.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - object Monoid - method intMonoid - <$anon: shapeless.examples.Monoid[Int]> - method zero,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Monoid - method intMonoid - <$anon: shapeless.examples.Monoid[Int]> - method append,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object Monoid - method doubleMonoid,1.0,0.0,4.0,4.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - object Monoid - method doubleMonoid - <$anon: shapeless.examples.Monoid[Double]> - method zero,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Monoid - method doubleMonoid - <$anon: shapeless.examples.Monoid[Double]> - method append,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object Monoid - method stringMonoid,1.0,0.0,4.0,4.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - object Monoid - method stringMonoid - <$anon: shapeless.examples.Monoid[String]> - method zero,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Monoid - method stringMonoid - <$anon: shapeless.examples.Monoid[String]> - method append,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object Monoid - object typeClass - method emptyProduct,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object Monoid - object typeClass - method emptyProduct - <$anon: shapeless.examples.Monoid[shapeless.HNil]> - method zero,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Monoid - object typeClass - method emptyProduct - <$anon: shapeless.examples.Monoid[shapeless.HNil]> - method append,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Monoid - object typeClass - method product,1.0,0.0,4.0,4.0,0.0,0.0,7.0,4.0,0.0,0.0,1.0
HEAD,0,package examples - object Monoid - object typeClass - method product - <$anon: shapeless.examples.Monoid[F :: T]> - method zero,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object Monoid - object typeClass - method product - <$anon: shapeless.examples.Monoid[F :: T]> - method append,1.0,0.0,1.0,1.0,0.0,0.0,4.0,3.0,0.0,0.0,0.0
HEAD,0,package examples - object Monoid - object typeClass - method project,1.0,0.0,4.0,4.0,0.0,0.0,6.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - object Monoid - object typeClass - method project - <$anon: shapeless.examples.Monoid[F]> - method zero,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object Monoid - object typeClass - method project - <$anon: shapeless.examples.Monoid[F]> - method append,1.0,0.0,1.0,1.0,0.0,0.0,4.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - trait MonoidSyntax - method |+|,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object MonoidSyntax - method monoidSyntax,1.0,0.0,3.0,3.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - object MonoidSyntax - method monoidSyntax - <$anon: shapeless.examples.MonoidSyntax[T]> - method |+|,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method head,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method tail,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method at,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method at,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method indexOf,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method last,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method init,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method select,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method filter,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method filterNot,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method partition,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method partitionC,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method removeElem,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method removeElemC,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method split,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method splitC,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method split,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method splitC,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method take,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method take,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method drop,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method drop,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method align,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method align,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method reverse,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method map,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method flatMap,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method fold,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method foldLeft,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method unify,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method length,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method zipConst,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method zipWithKeys,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method zipWithKeys,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method zipWithIndex,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method zipWith,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method rotateLeft,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method rotateLeft,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method rotateRight,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method rotateRight,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method extendLeft,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method extendRight,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method extendLeftBy,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method extendRightBy,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,1,package shapeless - package syntax - class CoproductOps - method embed,1.0,0.0,2.0,2.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method deembed,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method adjoined,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class CoproductOps - method toEither,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object CombinatorTesting - trait Flatten - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CombinatorTesting - method flattenString,1.0,0.0,3.0,3.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - object CombinatorTesting - method flattenString - <$anon: String => List[String]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object CombinatorTesting - method flattenPattern,2.0,7.0,3.0,3.0,0.0,0.0,5.0,4.0,6.0,2.0,1.0
HEAD,0,package examples - object CombinatorTesting - method flattenPattern - <$anon: <error> => List[String]> - method apply,2.0,7.0,1.0,1.0,0.0,0.0,4.0,3.0,6.0,2.0,1.0
HEAD,0,package examples - object CombinatorTesting - method flattenParseResult,1.0,0.0,3.0,3.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - object CombinatorTesting - method flattenParseResult - <$anon: <error> => List[String]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object CombinatorTesting - method flatten,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - trait IsHCons - method head,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait IsHCons - method tail,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait IsHCons - method cons,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object IsHCons - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object IsHCons - method hlistIsHCons,1.0,0.0,8.0,8.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object IsHCons - method hlistIsHCons - <$anon: shapeless.ops.hlist.IsHCons[H0 :: T0]> - method head,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object IsHCons - method hlistIsHCons - <$anon: shapeless.ops.hlist.IsHCons[H0 :: T0]> - method tail,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object IsHCons - method hlistIsHCons - <$anon: shapeless.ops.hlist.IsHCons[H0 :: T0]> - method cons,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityMapped - method hlistIdMapped,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityMapped - method hlistMapped2,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Mapped - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Mapped - method hnilMapped,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Mapped - method hnilConstMapped,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Mapped - method hlistMapped1,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityComapped - method hlistIdComapped,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Comapped - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Comapped - method hnilComapped,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Comapped - method hlistComapped,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait NatTRel - method map,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object NatTRel - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object NatTRel - method hnilNatTRel1,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object NatTRel - method hnilNatTRel1 - <$anon: shapeless.ops.hlist.NatTRel[shapeless.HNil F1 shapeless.HNil F2]> - method map,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object NatTRel - method hnilNatTRel2,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object NatTRel - method hnilNatTRel2 - <$anon: shapeless.ops.hlist.NatTRel[shapeless.HNil F1 shapeless.HNil [T]H2]> - method map,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object NatTRel - method hlistNatTRel1,1.0,0.0,4.0,4.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object NatTRel - method hlistNatTRel1 - <$anon: shapeless.ops.hlist.NatTRel[F1[H] :: T1 F1 F2[H] :: T2 F2]> - method map,1.0,0.0,1.0,1.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object NatTRel - method hlistNatTRel2,1.0,0.0,4.0,4.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object NatTRel - method hlistNatTRel2 - <$anon: shapeless.ops.hlist.NatTRel[H :: T1 shapeless.Id F2[H] :: T2 F2]> - method map,1.0,0.0,1.0,1.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object NatTRel - method hlistNatTRel3,1.0,0.0,4.0,4.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object NatTRel - method hlistNatTRel3 - <$anon: shapeless.ops.hlist.NatTRel[F1[H] :: T1 F1 H :: T2 shapeless.Id]> - method map,1.0,0.0,1.0,1.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object NatTRel - method hlistNatTRel4,1.0,0.0,4.0,4.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object NatTRel - method hlistNatTRel4 - <$anon: shapeless.ops.hlist.NatTRel[F1[H1] :: T1 F1 H2 :: T2 [T]H2]> - method map,1.0,0.0,1.0,1.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object NatTRel - method hlistNatTRel5,1.0,0.0,4.0,4.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object NatTRel - method hlistNatTRel5 - <$anon: shapeless.ops.hlist.NatTRel[H1 :: T1 shapeless.Id H2 :: T2 [T]H2]> - method map,1.0,0.0,1.0,1.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait HKernel - method map,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait HKernel - method tabulate,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - trait HKernel - method toList,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait HKernel - method length,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait HNilHKernel - method map,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait HNilHKernel - method tabulate,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - trait HNilHKernel - method toList,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait HNilHKernel - method length,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - class HConsHKernel - method map,1.0,0.0,1.0,1.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - class HConsHKernel - method tabulate,1.0,0.0,1.0,1.0,0.0,0.0,6.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - class HConsHKernel - method toList,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - class HConsHKernel - method length,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object HKernel - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object HKernel - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object HKernelAux - method mkHNilHKernel,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object HKernelAux - method mkHNilHKernel - <$anon: shapeless.ops.hlist.HKernelAux[shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object HKernelAux - method mkHListHKernel,1.0,0.0,4.0,4.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object HKernelAux - method mkHListHKernel - <$anon: shapeless.ops.hlist.HKernelAux[H :: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ToCoproduct - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ToCoproduct - method hlistToCoproduct,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait lowPriorityToSum - method hlistToSum,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ToSum - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ToSum - method hlistToSum,1.0,0.0,6.0,6.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Length - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Length - method hnilLength,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Length - method hnilLength - <$anon: shapeless.ops.hlist.Length[L]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Length - method hlistLength,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Length - method hlistLength - <$anon: shapeless.ops.hlist.Length[H :: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Mapper - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Mapper - method hnilMapper1,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Mapper - method hnilMapper1 - <$anon: shapeless.ops.hlist.Mapper[HF shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Mapper - method hlistMapper1,1.0,0.0,6.0,6.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Mapper - method hlistMapper1 - <$anon: shapeless.ops.hlist.Mapper[HF InH :: InT]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object FlatMapper - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object FlatMapper - method hnilFlatMapper1,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object FlatMapper - method hnilFlatMapper1 - <$anon: shapeless.ops.hlist.FlatMapper[HF shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object FlatMapper - method hlistFlatMapper1,1.0,0.0,10.0,9.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object FlatMapper - method hlistFlatMapper1 - <$anon: shapeless.ops.hlist.FlatMapper[HF InH :: InT]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ConstMapper - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ConstMapper - method hnilConstMapper,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ConstMapper - method hnilConstMapper - <$anon: shapeless.ops.hlist.ConstMapper[C shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ConstMapper - method hlistConstMapper,1.0,0.0,6.0,6.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ConstMapper - method hlistConstMapper - <$anon: shapeless.ops.hlist.ConstMapper[C H :: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait MapFolder - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object MapFolder - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object MapFolder - method hnilMapFolder,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object MapFolder - method hnilMapFolder - <$anon: shapeless.ops.hlist.MapFolder[shapeless.HNil R HF]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object MapFolder - method hlistMapFolder,1.0,0.0,5.0,5.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object MapFolder - method hlistMapFolder - <$anon: shapeless.ops.hlist.MapFolder[H :: T R HF]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object LeftFolder - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object LeftFolder - method hnilLeftFolder,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object LeftFolder - method hnilLeftFolder - <$anon: shapeless.ops.hlist.LeftFolder[shapeless.HNil In HF]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object LeftFolder - method hlistLeftFolder,1.0,0.0,6.0,6.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object LeftFolder - method hlistLeftFolder - <$anon: shapeless.ops.hlist.LeftFolder[H :: T In HF]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RightFolder - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RightFolder - method hnilRightFolder,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object RightFolder - method hnilRightFolder - <$anon: shapeless.ops.hlist.RightFolder[shapeless.HNil In HF]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RightFolder - method hlistRightFolder,1.0,0.0,6.0,6.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object RightFolder - method hlistRightFolder - <$anon: shapeless.ops.hlist.RightFolder[H :: T In HF]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object LeftReducer - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object LeftReducer - method leftReducer,1.0,0.0,5.0,5.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object LeftReducer - method leftReducer - <$anon: shapeless.ops.hlist.LeftReducer[H :: T HF]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RightReducer - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RightReducer - method hsingleRightReducer,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object RightReducer - method hsingleRightReducer - <$anon: shapeless.ops.hlist.RightReducer[H :: shapeless.HNil HF]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RightReducer - method hlistRightReducer,1.0,0.0,6.0,6.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object RightReducer - method hlistRightReducer - <$anon: shapeless.ops.hlist.RightReducer[H :: T HF]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Unifier - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Unifier - <$anon: shapeless.ops.hlist.Unifier[shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Unifier - method hsingleUnifier,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Unifier - method hsingleUnifier - <$anon: shapeless.ops.hlist.Unifier[T :: shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Unifier - method hlistUnifier,1.0,0.0,6.0,6.0,0.0,0.0,8.0,6.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Unifier - method hlistUnifier - <$anon: shapeless.ops.hlist.Unifier[H1 :: H2 :: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,7.0,5.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SubtypeUnifier - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SubtypeUnifier - method hnilSubtypeUnifier,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object SubtypeUnifier - method hnilSubtypeUnifier - <$anon: shapeless.ops.hlist.SubtypeUnifier[shapeless.HNil B]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SubtypeUnifier - method hlistSubtypeUnifier1,1.0,0.0,6.0,6.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object SubtypeUnifier - method hlistSubtypeUnifier1 - <$anon: shapeless.ops.hlist.SubtypeUnifier[H :: T B]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object SubtypeUnifier - method hlistSubtypeUnifier2,1.0,0.0,6.0,6.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object SubtypeUnifier - method hlistSubtypeUnifier2 - <$anon: shapeless.ops.hlist.SubtypeUnifier[H :: T B]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait ToTraversable - method builder,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait ToTraversable - method append,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait ToTraversable - method apply,1.0,0.0,5.0,5.0,0.0,0.0,4.0,4.0,0.0,0.0,0.20000000000000007
HEAD,0,package shapeless - package ops - object hlist - object ToTraversable - method apply,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ToTraversable - method hnilToTraversable,1.0,0.0,7.0,7.0,0.0,0.0,1.0,1.0,0.0,0.0,0.5
HEAD,0,package shapeless - package ops - object hlist - object ToTraversable - method hnilToTraversable - <$anon: shapeless.ops.hlist.ToTraversable[L M]> - method builder,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ToTraversable - method hnilToTraversable - <$anon: shapeless.ops.hlist.ToTraversable[L M]> - method append,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ToTraversable - method hnilToTraversableNothing,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ToTraversable - method hsingleToTraversable,1.0,0.0,9.0,9.0,0.0,0.0,4.0,4.0,0.0,0.0,0.7
HEAD,0,package shapeless - package ops - object hlist - object ToTraversable - method hsingleToTraversable - <$anon: shapeless.ops.hlist.ToTraversable[T :: shapeless.HNil M]> - method builder,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ToTraversable - method hsingleToTraversable - <$anon: shapeless.ops.hlist.ToTraversable[T :: shapeless.HNil M]> - method append,1.0,0.0,3.0,3.0,0.0,0.0,3.0,3.0,0.0,0.0,-5.551115123125783E-17
HEAD,0,package shapeless - package ops - object hlist - object ToTraversable - method hlistToTraversable,1.0,0.0,12.0,11.0,0.0,0.0,7.0,7.0,0.0,0.0,0.38461538461538464
HEAD,0,package shapeless - package ops - object hlist - object ToTraversable - method hlistToTraversable - <$anon: shapeless.ops.hlist.ToTraversable[H1 :: H2 :: T M]> - method builder,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ToTraversable - method hlistToTraversable - <$anon: shapeless.ops.hlist.ToTraversable[H1 :: H2 :: T M]> - method append,1.0,0.0,3.0,3.0,0.0,0.0,6.0,6.0,0.0,0.0,0.0666666666666667
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityToCoproductTraversable - object NotIn - method notInCNil,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityToCoproductTraversable - object NotIn - method notInCCons,1.0,0.0,4.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityToCoproductTraversable - method hconsToCoproductTraversable1,1.0,0.0,15.0,14.0,0.0,0.0,8.0,7.0,0.0,0.0,0.8461538461538463
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityToCoproductTraversable - method hconsToCoproductTraversable1 - <$anon: shapeless.ops.hlist.ToCoproductTraversable[LH :: LT M]> - method apply,1.0,0.0,6.0,6.0,0.0,0.0,7.0,6.0,0.0,0.0,0.20000000000000004
HEAD,0,package shapeless - package ops - object hlist - object ToCoproductTraversable - method hnilToCoproductTraversable,1.0,0.0,6.0,6.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ToCoproductTraversable - method hnilToCoproductTraversable - <$anon: shapeless.ops.hlist.ToCoproductTraversable[L M]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ToCoproductTraversable - method hconsToCoproductTraversable0,1.0,0.0,18.0,17.0,0.0,0.0,10.0,9.0,0.0,0.0,0.8666666666666666
HEAD,0,package shapeless - package ops - object hlist - object ToCoproductTraversable - method hconsToCoproductTraversable0 - <$anon: shapeless.ops.hlist.ToCoproductTraversable[LH :: LT M]> - method apply,1.0,0.0,7.0,7.0,0.0,0.0,9.0,8.0,0.0,0.0,0.2
HEAD,0,package shapeless - package ops - object hlist - method ToArray,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - method ToList,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait ToSized - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ToSized - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object hlist - object ToSized - method hnilToSized,1.0,0.0,8.0,7.0,1.0,0.125,4.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ToSized - method hnilToSized - <$anon: shapeless.ops.hlist.ToSized[L M]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ToSized - method hnilToSizedNothing,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object hlist - object ToSized - method hsingleToSized,1.0,0.0,7.0,7.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ToSized - method hsingleToSized - <$anon: shapeless.ops.hlist.ToSized[T :: shapeless.HNil M]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object hlist - object ToSized - method hlistToSized,1.0,0.0,16.0,15.0,2.0,0.11764705882352941,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ToSized - method hlistToSized - <$anon: shapeless.ops.hlist.ToSized[H1 :: H2 :: T M]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Tupler - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Tupler - <$anon: shapeless.ops.hlist.Tupler[shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0
HEAD,0,package shapeless - package ops - object hlist - object Last - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Last - method hsingleLast,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Last - method hsingleLast - <$anon: shapeless.ops.hlist.Last[H :: shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Last - method hlistLast,1.0,0.0,6.0,6.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Last - method hlistLast - <$anon: shapeless.ops.hlist.Last[H :: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Init - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Init - method hsingleInit,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Init - method hsingleInit - <$anon: shapeless.ops.hlist.Init[H :: shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Init - method hlistInit,1.0,0.0,6.0,6.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Init - method hlistInit - <$anon: shapeless.ops.hlist.Init[H :: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Selector - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Selector - method select,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Selector - method select - <$anon: shapeless.ops.hlist.Selector[H :: T H]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Selector - method recurse,1.0,0.0,5.0,5.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Selector - method recurse - <$anon: shapeless.ops.hlist.Selector[H :: T U]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SelectAll - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SelectAll - method hnilSelectAll,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object SelectAll - method hnilSelectAll - <$anon: shapeless.ops.hlist.SelectAll[L shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SelectAll - method hconsSelectAll,1.0,0.0,5.0,5.0,0.0,0.0,5.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object SelectAll - method hconsSelectAll - <$anon: shapeless.ops.hlist.SelectAll[L H :: S]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,4.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SelectMany - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SelectMany - method SelectManyHNil,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object SelectMany - method SelectManyHNil - <$anon: shapeless.ops.hlist.SelectMany[L shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SelectMany - method SelectManyHList,1.0,0.0,6.0,6.0,0.0,0.0,5.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object SelectMany - method SelectManyHList - <$anon: shapeless.ops.hlist.SelectMany[L H :: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,4.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SelectRange - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SelectRange - method take,1.0,0.0,7.0,7.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object SelectRange - method take - <$anon: shapeless.ops.hlist.SelectRange[L shapeless._0 T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SelectRange - method drop,1.0,0.0,7.0,7.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object SelectRange - method drop - <$anon: shapeless.ops.hlist.SelectRange[H :: L shapeless.Succ[A] shapeless.Succ[B]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SelectFirst - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SelectFirst - method selectAny,1.0,0.0,7.0,7.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object SelectFirst - method selectAny - <$anon: shapeless.ops.hlist.SelectFirst[L H :: S]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SelectFirst - method recurse,1.0,0.0,7.0,7.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object SelectFirst - method recurse - <$anon: shapeless.ops.hlist.SelectFirst[L H :: S]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Partition - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Partition - method product,1.0,0.0,1.0,1.0,0.0,0.0,5.0,5.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Partition - method filter,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Partition - method filterNot,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Partition - method apply,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Partition - method hlistPartitionNil,1.0,0.0,6.0,6.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Partition - method hlistPartitionNil - <$anon: shapeless.ops.hlist.Partition[shapeless.HNil U]> - method filter,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Partition - method hlistPartitionNil - <$anon: shapeless.ops.hlist.Partition[shapeless.HNil U]> - method filterNot,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Partition - method hlistPartition1,1.0,0.0,8.0,8.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Partition - method hlistPartition1 - <$anon: shapeless.ops.hlist.Partition[H :: L H]> - method filter,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Partition - method hlistPartition1 - <$anon: shapeless.ops.hlist.Partition[H :: L H]> - method filterNot,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Partition - method hlistPartition2,1.0,0.0,8.0,8.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Partition - method hlistPartition2 - <$anon: shapeless.ops.hlist.Partition[H :: L U]> - method filter,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Partition - method hlistPartition2 - <$anon: shapeless.ops.hlist.Partition[H :: L U]> - method filterNot,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityGrouper - method hlistGrouper,1.0,0.0,12.0,11.0,0.0,0.0,7.0,6.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityGrouper - method hlistGrouper - <$anon: shapeless.ops.hlist.Grouper[L N Step]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,6.0,5.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Grouper - method apply,1.0,0.0,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Grouper - method hnilGrouper,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Grouper - method hnilGrouper - <$anon: shapeless.ops.hlist.Grouper[shapeless.HNil N Step]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Grouper - method hlistGrouper1,1.0,0.0,7.0,7.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Grouper - method hlistGrouper1 - <$anon: shapeless.ops.hlist.Grouper[L N Step]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityPaddedGrouper - method incompletePaddedGrouper,1.0,0.0,26.0,25.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityPaddedGrouper - method incompletePaddedGrouper - <$anon: shapeless.ops.hlist.PaddedGrouper[L N Step Pad]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object PaddedGrouper - method apply,1.0,0.0,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object PaddedGrouper - method defaultPaddedGrouper,1.0,0.0,10.0,9.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object PaddedGrouper - method defaultPaddedGrouper - <$anon: shapeless.ops.hlist.PaddedGrouper[L N Step Pad]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Filter - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Filter - method hlistFilter,1.0,0.0,6.0,6.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Filter - method hlistFilter - <$anon: shapeless.ops.hlist.Filter[L U]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object FilterNot - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object FilterNot - method hlistFilterNot,1.0,0.0,6.0,6.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object FilterNot - method hlistFilterNot - <$anon: shapeless.ops.hlist.FilterNot[L U]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Remove - method reinsert,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityRemove - method recurse,2.0,5.0,9.0,9.0,0.0,0.0,11.0,7.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityRemove - method recurse - <$anon: shapeless.ops.hlist.Remove[H :: T E]> - method apply,2.0,5.0,4.0,4.0,0.0,0.0,6.0,5.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityRemove - method recurse - <$anon: shapeless.ops.hlist.Remove[H :: T E]> - method reinsert,1.0,0.0,1.0,1.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Remove - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Remove - method remove,1.0,0.0,6.0,6.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Remove - method remove - <$anon: shapeless.ops.hlist.Remove[H :: T H]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Remove - method remove - <$anon: shapeless.ops.hlist.Remove[H :: T H]> - method reinsert,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait RemoveAll - method reinsert,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RemoveAll - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RemoveAll - method hlistRemoveAllNil,1.0,0.0,6.0,6.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object RemoveAll - method hlistRemoveAllNil - <$anon: shapeless.ops.hlist.RemoveAll[L shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RemoveAll - method hlistRemoveAllNil - <$anon: shapeless.ops.hlist.RemoveAll[L shapeless.HNil]> - method reinsert,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RemoveAll - method hlistRemoveAll,3.0,5.0,12.0,12.0,0.0,0.0,14.0,8.0,12.0,4.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object RemoveAll - method hlistRemoveAll - <$anon: shapeless.ops.hlist.RemoveAll[L E :: SLT]> - method apply,3.0,5.0,5.0,5.0,0.0,0.0,9.0,5.0,12.0,4.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object RemoveAll - method hlistRemoveAll - <$anon: shapeless.ops.hlist.RemoveAll[L E :: SLT]> - method reinsert,1.0,0.0,2.0,2.0,0.0,0.0,4.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Union - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Union - method hlistUnion,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Union - method hlistUnion - <$anon: shapeless.ops.hlist.Union[shapeless.HNil M]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Union - method hlistUnion1,1.0,0.0,9.0,8.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Union - method hlistUnion1 - <$anon: shapeless.ops.hlist.Union[H :: T M]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Union - method hlistUnion2,1.0,0.0,9.0,8.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Union - method hlistUnion2 - <$anon: shapeless.ops.hlist.Union[H :: T M]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Intersection - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Intersection - method hnilIntersection,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Intersection - method hnilIntersection - <$anon: shapeless.ops.hlist.Intersection[shapeless.HNil M]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Intersection - method hlistIntersection1,1.0,0.0,9.0,8.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Intersection - method hlistIntersection1 - <$anon: shapeless.ops.hlist.Intersection[H :: T M]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Intersection - method hlistIntersection2,1.0,0.0,9.0,8.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Intersection - method hlistIntersection2 - <$anon: shapeless.ops.hlist.Intersection[H :: T M]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityDiff - method hconsDiff1,1.0,0.0,6.0,6.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityDiff - method hconsDiff1 - <$anon: shapeless.ops.hlist.Diff[L H :: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Diff - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Diff - method hnilDiff,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Diff - method hnilDiff - <$anon: shapeless.ops.hlist.Diff[L shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Diff - method hconsDiff2,1.0,0.0,9.0,8.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Diff - method hconsDiff2 - <$anon: shapeless.ops.hlist.Diff[L H :: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Replacer - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Replacer - method hlistReplacer1,1.0,0.0,5.0,5.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Replacer - method hlistReplacer1 - <$anon: shapeless.ops.hlist.Replacer[U :: T U V]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Replacer - method hlistReplacer2,2.0,5.0,9.0,9.0,0.0,0.0,7.0,6.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Replacer - method hlistReplacer2 - <$anon: shapeless.ops.hlist.Replacer[H :: T U V]> - method apply,2.0,5.0,4.0,4.0,0.0,0.0,6.0,5.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Modifier - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Modifier - method hlistModify1,1.0,0.0,5.0,5.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Modifier - method hlistModify1 - <$anon: shapeless.ops.hlist.Modifier[U :: T U V]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Modifier - method hlistModify2,2.0,5.0,9.0,9.0,0.0,0.0,7.0,6.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Modifier - method hlistModify2 - <$anon: shapeless.ops.hlist.Modifier[H :: T U V]> - method apply,2.0,5.0,4.0,4.0,0.0,0.0,6.0,5.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ModifierAt - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ModifierAt - method hlistModifierAt,2.0,5.0,12.0,11.0,0.0,0.0,7.0,6.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ModifierAt - method hlistModifierAt - <$anon: shapeless.ops.hlist.ModifierAt[L N U V]> - method apply,2.0,5.0,4.0,4.0,0.0,0.0,6.0,5.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ReplaceAt - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReplaceAt - method hlistReplaceAt1,1.0,0.0,5.0,5.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ReplaceAt - method hlistReplaceAt1 - <$anon: shapeless.ops.hlist.ReplaceAt[H :: T shapeless._0 V]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReplaceAt - method hlistReplaceAt2,2.0,5.0,9.0,9.0,0.0,0.0,7.0,6.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ReplaceAt - method hlistReplaceAt2 - <$anon: shapeless.ops.hlist.ReplaceAt[H :: T shapeless.Succ[N] V]> - method apply,2.0,5.0,4.0,4.0,0.0,0.0,6.0,5.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object At - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object At - method hlistAtZero,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object At - method hlistAtZero - <$anon: shapeless.ops.hlist.At[H :: T shapeless._0]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object At - method hlistAtN,1.0,0.0,6.0,6.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object At - method hlistAtN - <$anon: shapeless.ops.hlist.At[H :: T shapeless.Succ[N]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Drop - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Drop - method hlistDrop1,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Drop - method hlistDrop1 - <$anon: shapeless.ops.hlist.Drop[L shapeless._0]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Drop - method hlistDrop2,1.0,0.0,6.0,6.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Drop - method hlistDrop2 - <$anon: shapeless.ops.hlist.Drop[H :: T shapeless.Succ[N]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Take - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Take - method hlistTake1,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Take - method hlistTake1 - <$anon: shapeless.ops.hlist.Take[L shapeless._0]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Take - method hlistTake2,1.0,0.0,6.0,6.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Take - method hlistTake2 - <$anon: shapeless.ops.hlist.Take[H :: T shapeless.Succ[N]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Split - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Split - method product,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Split - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Split - method split,1.0,0.0,7.0,7.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Split - method split - <$anon: shapeless.ops.hlist.Split[L N]> - method product,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Split - trait Split0 - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Split - object Split0 - method hlistSplit1,1.0,0.0,4.0,4.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Split - object Split0 - method hlistSplit1 - <$anon: shapeless.ops.hlist.Split.Split0[P S shapeless._0 P S]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Split - object Split0 - method hlistSplit2,2.0,11.0,8.0,8.0,0.0,0.0,9.0,6.0,9.0,2.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Split - object Split0 - method hlistSplit2 - <$anon: shapeless.ops.hlist.Split.Split0[AccP AccSH :: AccST shapeless.Succ[N] AccSH :: P S]> - method apply,2.0,11.0,4.0,4.0,0.0,0.0,8.0,5.0,9.0,2.0,1.0
HEAD,0,package shapeless - package ops - object hlist - trait ReverseSplit - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait ReverseSplit - method product,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplit - method apply,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplit - method reverseSplit,1.0,0.0,7.0,7.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplit - method reverseSplit - <$anon: shapeless.ops.hlist.ReverseSplit[L N]> - method product,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplit - trait ReverseSplit0 - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplit - object ReverseSplit0 - method hlistReverseSplit1,1.0,0.0,4.0,4.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplit - object ReverseSplit0 - method hlistReverseSplit1 - <$anon: shapeless.ops.hlist.ReverseSplit.ReverseSplit0[P S shapeless._0 P S]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplit - object ReverseSplit0 - method hlistReverseSplit2,1.0,0.0,5.0,5.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplit - object ReverseSplit0 - method hlistReverseSplit2 - <$anon: shapeless.ops.hlist.ReverseSplit.ReverseSplit0[AccP AccSH :: AccST shapeless.Succ[N] P S]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait SplitLeft - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait SplitLeft - method product,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SplitLeft - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SplitLeft - method splitLeft,1.0,0.0,7.0,7.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object SplitLeft - method splitLeft - <$anon: shapeless.ops.hlist.SplitLeft[L U]> - method product,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SplitLeft - trait SplitLeft0 - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SplitLeft - trait LowPrioritySplitLeft0 - method hlistSplitLeft1,2.0,11.0,8.0,8.0,0.0,0.0,9.0,6.0,9.0,2.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object SplitLeft - trait LowPrioritySplitLeft0 - method hlistSplitLeft1 - <$anon: shapeless.ops.hlist.SplitLeft.SplitLeft0[AccP AccSH :: AccST U AccSH :: P S]> - method apply,2.0,11.0,4.0,4.0,0.0,0.0,8.0,5.0,9.0,2.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object SplitLeft - object SplitLeft0 - method hlistSplitLeft2,1.0,0.0,4.0,4.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object SplitLeft - object SplitLeft0 - method hlistSplitLeft2 - <$anon: shapeless.ops.hlist.SplitLeft.SplitLeft0[P SH :: ST SH P SH :: ST]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait ReverseSplitLeft - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait ReverseSplitLeft - method product,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitLeft - method apply,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitLeft - method reverseSplitLeft,1.0,0.0,7.0,7.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitLeft - method reverseSplitLeft - <$anon: shapeless.ops.hlist.ReverseSplitLeft[L U]> - method product,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitLeft - trait ReverseSplitLeft0 - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitLeft - trait LowPriorityReverseSplitLeft0 - method hlistReverseSplitLeft1,1.0,0.0,5.0,5.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitLeft - trait LowPriorityReverseSplitLeft0 - method hlistReverseSplitLeft1 - <$anon: shapeless.ops.hlist.ReverseSplitLeft.ReverseSplitLeft0[AccP AccSH :: AccST U P S]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitLeft - object ReverseSplitLeft0 - method hlistReverseSplitLeft2,1.0,0.0,4.0,4.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitLeft - object ReverseSplitLeft0 - method hlistReverseSplitLeft2 - <$anon: shapeless.ops.hlist.ReverseSplitLeft.ReverseSplitLeft0[P SH :: ST SH P SH :: ST]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait SplitRight - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait SplitRight - method product,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SplitRight - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SplitRight - method splitRight,1.0,0.0,7.0,7.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object SplitRight - method splitRight - <$anon: shapeless.ops.hlist.SplitRight[L U]> - method product,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SplitRight - trait SplitRight0 - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SplitRight - trait LowPrioritySplitRight0 - method hlistSplitRight1,1.0,0.0,5.0,5.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object SplitRight - trait LowPrioritySplitRight0 - method hlistSplitRight1 - <$anon: shapeless.ops.hlist.SplitRight.SplitRight0[RevH :: RevT AccP shapeless.HNil U P S]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SplitRight - trait LowPrioritySplitRight0 - method hlistSplitRight2,1.0,0.0,5.0,5.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object SplitRight - trait LowPrioritySplitRight0 - method hlistSplitRight2 - <$anon: shapeless.ops.hlist.SplitRight.SplitRight0[shapeless.HNil AccPH :: AccPT AccS U P S]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object SplitRight - object SplitRight0 - method hlistSplitRight3,1.0,0.0,5.0,5.0,0.0,0.0,6.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object SplitRight - object SplitRight0 - method hlistSplitRight3 - <$anon: shapeless.ops.hlist.SplitRight.SplitRight0[shapeless.HNil PH :: PT S PH Out0 S]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,5.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait ReverseSplitRight - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait ReverseSplitRight - method product,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitRight - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitRight - method reverseSplitRight,1.0,0.0,7.0,7.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitRight - method reverseSplitRight - <$anon: shapeless.ops.hlist.ReverseSplitRight[L U]> - method product,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitRight - trait ReverseSplitRight0 - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitRight - trait LowPriorityReverseSplitRight0 - method hlistReverseSplitRight1,1.0,0.0,5.0,5.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitRight - trait LowPriorityReverseSplitRight0 - method hlistReverseSplitRight1 - <$anon: shapeless.ops.hlist.ReverseSplitRight.ReverseSplitRight0[RevH :: RevT AccP shapeless.HNil U P S]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitRight - trait LowPriorityReverseSplitRight0 - method hlistReverseSplitRight2,1.0,0.0,5.0,5.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitRight - trait LowPriorityReverseSplitRight0 - method hlistReverseSplitRight2 - <$anon: shapeless.ops.hlist.ReverseSplitRight.ReverseSplitRight0[shapeless.HNil AccPH :: AccPT AccS U P S]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitRight - object ReverseSplitRight0 - method hlistReverseSplitRight3,1.0,0.0,4.0,4.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ReverseSplitRight - object ReverseSplitRight0 - method hlistReverseSplitRight3 - <$anon: shapeless.ops.hlist.ReverseSplitRight.ReverseSplitRight0[shapeless.HNil PH :: PT S PH PH :: PT S]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Reverse - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Reverse - method reverse,1.0,0.0,5.0,5.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Reverse - method reverse - <$anon: shapeless.ops.hlist.Reverse[L]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Reverse - trait Reverse0 - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Reverse - object Reverse0 - method hnilReverse,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Reverse - object Reverse0 - method hnilReverse - <$anon: shapeless.ops.hlist.Reverse.Reverse0[Out shapeless.HNil Out]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Reverse - object Reverse0 - method hlistReverse,1.0,0.0,5.0,5.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Reverse - object Reverse0 - method hlistReverse - <$anon: shapeless.ops.hlist.Reverse.Reverse0[Acc InH :: InT Out]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait Align - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Align - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Align - <$anon: shapeless.HNil => shapeless.HNil> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Align - method hlistAlign,2.0,5.0,7.0,7.0,0.0,0.0,8.0,7.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Align - method hlistAlign - <$anon: L => MH :: MT> - method apply,2.0,5.0,4.0,4.0,0.0,0.0,7.0,6.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - object hlist - trait Prepend - method inverse,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowestPriorityPrepend - method hlistPrepend,1.0,0.0,10.0,10.0,0.0,0.0,8.0,6.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - trait LowestPriorityPrepend - method hlistPrepend - <$anon: shapeless.ops.hlist.Prepend[PH :: PT S]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowestPriorityPrepend - method hlistPrepend - <$anon: shapeless.ops.hlist.Prepend[PH :: PT S]> - method inverse,1.0,0.0,4.0,4.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityPrepend - method hnilPrepend0,1.0,0.0,6.0,6.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityPrepend - method hnilPrepend0 - <$anon: shapeless.ops.hlist.Prepend[P S]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityPrepend - method hnilPrepend0 - <$anon: shapeless.ops.hlist.Prepend[P S]> - method inverse,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Prepend - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Prepend - method hnilPrepend1,1.0,0.0,6.0,6.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Prepend - method hnilPrepend1 - <$anon: shapeless.ops.hlist.Prepend[P S]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Prepend - method hnilPrepend1 - <$anon: shapeless.ops.hlist.Prepend[P S]> - method inverse,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityReversePrepend - method hnilReversePrepend0,1.0,0.0,6.0,6.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityReversePrepend - method hnilReversePrepend0 - <$anon: shapeless.ops.hlist.ReversePrepend[P S]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReversePrepend - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReversePrepend - method hnilReversePrepend1,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ReversePrepend - method hnilReversePrepend1 - <$anon: shapeless.ops.hlist.ReversePrepend[P S]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ReversePrepend - method hlistReversePrepend,1.0,0.0,6.0,6.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ReversePrepend - method hlistReversePrepend - <$anon: shapeless.ops.hlist.ReversePrepend[PH :: PT S]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Repeat - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Repeat - method base,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Repeat - method base - <$anon: shapeless.ops.hlist.Repeat[L <error>]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Repeat - method succ,1.0,0.0,7.0,7.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Repeat - method succ - <$anon: shapeless.ops.hlist.Repeat[L shapeless.Succ[Prev]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipOne - method zipOne0,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ZipOne - method zipOne0 - <$anon: shapeless.ops.hlist.ZipOne[shapeless.HNil shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipOne - method zipOne3,1.0,0.0,5.0,5.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ZipOne - method zipOne3 - <$anon: shapeless.ops.hlist.ZipOne[H :: shapeless.HNil T :: shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityZipOne - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityZipOne - method zipOne1,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityZipOne - method zipOne1 - <$anon: shapeless.ops.hlist.ZipOne[H shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityZipOne - method zipOne2,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityZipOne - method zipOne2 - <$anon: shapeless.ops.hlist.ZipOne[shapeless.HNil T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityZipOne - method zipOne4,1.0,0.0,6.0,6.0,0.0,0.0,6.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityZipOne - method zipOne4 - <$anon: shapeless.ops.hlist.ZipOne[HH :: HT TH :: TT]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,5.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Transposer - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Transposer - method hnilTransposer,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Transposer - method hnilTransposer - <$anon: shapeless.ops.hlist.Transposer[shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Transposer - method hlistTransposer1,1.0,0.0,6.0,6.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Transposer - method hlistTransposer1 - <$anon: shapeless.ops.hlist.Transposer[H :: shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Transposer - method hlistTransposer2,1.0,0.0,6.0,6.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Transposer - method hlistTransposer2 - <$anon: shapeless.ops.hlist.Transposer[H :: TH :: TT]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Zip - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Zip - method zipper,1.0,0.0,8.0,7.0,0.0,0.0,5.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Zip - method zipper - <$anon: shapeless.ops.hlist.Zip[L]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,4.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Unzip - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Unzip - method unzipper,1.0,0.0,9.0,8.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Unzip - method unzipper - <$anon: shapeless.ops.hlist.Unzip[L]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipApply - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipApply - method hnilZipApply,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ZipApply - method hnilZipApply - <$anon: shapeless.ops.hlist.ZipApply[shapeless.HNil shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipApply - method hconsZipApply,1.0,0.0,6.0,6.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ZipApply - method hconsZipApply - <$anon: shapeless.ops.hlist.ZipApply[T => R :: FLT T :: ALT]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ZipConst - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipConst - method hnilZipConst,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ZipConst - method hnilZipConst - <$anon: shapeless.ops.hlist.ZipConst[C L]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipConst - method constZipper,1.0,0.0,8.0,7.0,0.0,0.0,6.0,6.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ZipConst - method constZipper - <$anon: shapeless.ops.hlist.ZipConst[C L]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,5.0,5.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipWith - method apply,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipWith - method hnilZipWithHNil,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipWith - method hnilZipWithHList,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipWith - method hlistZipWithHNil,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipWith - method hlistZipWithHList,1.0,0.0,8.0,8.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ZipWith - method hlistZipWithHList - <$anon: shapeless.ops.hlist.ZipWith[LH :: LT RH :: RT P]> - method apply,1.0,0.0,2.0,2.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipWith - method constZipWith,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ZipWith - method constZipWith - <$anon: shapeless.ops.hlist.ZipWith[L R P]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipWithKeys - <$anon: shapeless.ops.hlist.ZipWithKeys[shapeless.HList shapeless.HList]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object hlist - object ZipWithKeys - method apply,1.0,0.0,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipWithKeys - method hnilZipWithKeys,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object hlist - object ZipWithKeys - method hconsZipWithKeys,1.0,0.0,4.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipWithIndex - method apply,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipWithIndex - object Helper - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipWithIndex - object Helper - method hnil,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ZipWithIndex - object Helper - method hnil - <$anon: shapeless.ops.hlist.ZipWithIndex.Helper[shapeless.HNil N]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipWithIndex - object Helper - method hcons,1.0,0.0,8.0,7.0,0.0,0.0,7.0,7.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ZipWithIndex - object Helper - method hcons - <$anon: shapeless.ops.hlist.ZipWithIndex.Helper[H :: T N]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,6.0,6.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ZipWithIndex - method default,1.0,0.0,6.0,6.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ZipWithIndex - method default - <$anon: shapeless.ops.hlist.ZipWithIndex[L]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Collect - method apply,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Collect - method hnilCollect,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Collect - method hnilCollect - <$anon: shapeless.ops.hlist.Collect[shapeless.HNil P]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Collect - method hlistCollect,1.0,0.0,7.0,7.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Collect - method hlistCollect - <$anon: shapeless.ops.hlist.Collect[LH :: LT P]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityCollect - method hlistNoPolyCase,1.0,0.0,6.0,6.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityCollect - method hlistNoPolyCase - <$anon: shapeless.ops.hlist.Collect[LH :: LT P]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object hnilOrdering - method compare,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - method hlistOrdering,2.0,0.0,8.0,8.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - method hlistOrdering - <$anon: Ordering[H :: T]> - method compare,2.0,0.0,4.0,4.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object MapCons - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object MapCons - method hnilMapCons,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object MapCons - method hnilMapCons - <$anon: shapeless.ops.hlist.MapCons[A shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object MapCons - method hlistMapCons,1.0,0.0,6.0,6.0,0.0,0.0,6.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object MapCons - method hlistMapCons - <$anon: shapeless.ops.hlist.MapCons[A H :: TM]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,5.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Interleave - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Interleave - method hnilInterleave,1.0,0.0,5.0,5.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Interleave - method hnilInterleave - <$anon: shapeless.ops.hlist.Interleave[A L]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Interleave - method hlistInterleave,1.0,0.0,6.0,6.0,0.0,0.0,7.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Interleave - method hlistInterleave - <$anon: shapeless.ops.hlist.Interleave[A H :: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,6.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object FlatMapInterleave - method apply,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object FlatMapInterleave - method hnilFlatMapInterleave,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object FlatMapInterleave - method hnilFlatMapInterleave - <$anon: shapeless.ops.hlist.FlatMapInterleave[A M]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object FlatMapInterleave - method hlistFlatMapInterleave,1.0,0.0,10.0,10.0,0.0,0.0,4.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object FlatMapInterleave - method hlistFlatMapInterleave - <$anon: shapeless.ops.hlist.FlatMapInterleave[A H :: TM]> - method apply,1.0,0.0,2.0,2.0,0.0,0.0,3.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Permutations - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Permutations - method hnilPermutations,1.0,0.0,4.0,4.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Permutations - method hnilPermutations - <$anon: shapeless.ops.hlist.Permutations[L]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Permutations - method hlistPermutations,1.0,0.0,7.0,7.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Permutations - method hlistPermutations - <$anon: shapeless.ops.hlist.Permutations[H :: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RotateLeft - method apply,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RotateLeft - method hnilRotateLeft,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object RotateLeft - method hnilRotateLeft - <$anon: shapeless.ops.hlist.RotateLeft[L N]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityRotateLeft - method hlistRotateLeft,2.0,5.0,14.0,13.0,0.0,0.0,5.0,5.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityRotateLeft - method hlistRotateLeft - <$anon: shapeless.ops.hlist.RotateLeft[L N]> - method apply,2.0,5.0,4.0,4.0,0.0,0.0,4.0,4.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object RotateRight - method apply,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RotateRight - method hnilRotateRight,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object RotateRight - method hnilRotateRight - <$anon: shapeless.ops.hlist.RotateRight[L N]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityRotateRight - method hlistRotateRight,1.0,0.0,11.0,10.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityRotateRight - method hlistRotateRight - <$anon: shapeless.ops.hlist.RotateRight[L N]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityRotateRight - method noopRotateRight,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityRotateRight - method noopRotateRight - <$anon: shapeless.ops.hlist.RotateRight[L N]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object LeftScanner - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object LeftScanner - method hnilLeftScanner,1.0,0.0,5.0,5.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object LeftScanner - method hnilLeftScanner - <$anon: shapeless.ops.hlist.LeftScanner[shapeless.HNil In P]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object LeftScanner - method hlistLeftScanner,1.0,0.0,6.0,6.0,1.0,0.14285714285714285,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object LeftScanner - method hlistLeftScanner - <$anon: shapeless.ops.hlist.LeftScanner[H :: T In P]> - method apply,1.0,0.0,1.0,1.0,1.0,0.5,4.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RightScanner - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RightScanner - method hlistRightScanner0,1.0,0.0,5.0,5.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object RightScanner - method hlistRightScanner0 - <$anon: shapeless.ops.hlist.RightScanner.RightScanner0[H :: T H0 P]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RightScanner - method hnilRightScanner,1.0,0.0,5.0,5.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object RightScanner - method hnilRightScanner - <$anon: shapeless.ops.hlist.RightScanner[shapeless.HNil In P]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object RightScanner - method hlistRightScanner,1.0,0.0,6.0,6.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object RightScanner - method hlistRightScanner - <$anon: shapeless.ops.hlist.RightScanner[H :: T In P]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Fill - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Fill - method fill1Zero,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Fill - method fill1Zero - <$anon: shapeless.ops.hlist.Fill[shapeless.Nat._0 A]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Fill - method fill1Succ,1.0,0.0,6.0,6.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Fill - method fill1Succ - <$anon: shapeless.ops.hlist.Fill[shapeless.Succ[N] A]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Fill - method fill2,1.0,0.0,6.0,6.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Fill - method fill2 - <$anon: shapeless.ops.hlist.Fill[(N1  N2) A]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object FillWith - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object FillWith - method hnilFill,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object FillWith - method hnilFill - <$anon: shapeless.ops.hlist.FillWith[F shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object FillWith - method hconsFill,1.0,0.0,5.0,5.0,0.0,0.0,6.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object FillWith - method hconsFill - <$anon: shapeless.ops.hlist.FillWith[F Head :: Tail]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,5.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Patcher - method apply,1.0,0.0,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Patcher - method hlistPatch1,1.0,0.0,6.0,6.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Patcher - method hlistPatch1 - <$anon: shapeless.ops.hlist.Patcher[shapeless.Succ[N] M H :: T In]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Patcher - method hlistPatch2,1.0,0.0,6.0,6.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Patcher - method hlistPatch2 - <$anon: shapeless.ops.hlist.Patcher[shapeless._0 M L In]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object CollectFirst - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object CollectFirst - method hlistEval,1.0,0.0,5.0,5.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object CollectFirst - method hlistEval - <$anon: shapeless.ops.hlist.CollectFirst[H :: T P]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityCollectFirst - method hlistIterate,1.0,0.0,5.0,5.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityCollectFirst - method hlistIterate - <$anon: shapeless.ops.hlist.CollectFirst[H :: T P]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - method toTuple2,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LiftAll - method instances,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object LiftAll - class Curried - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object LiftAll - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object LiftAll - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object LiftAll - method hnil,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object LiftAll - method hnil - <$anon: shapeless.ops.hlist.LiftAll[F shapeless.HNil]> - method instances,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object LiftAll - method hcons,1.0,0.0,6.0,6.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object LiftAll - method hcons - <$anon: shapeless.ops.hlist.LiftAll[F H :: T]> - method instances,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object PadTo - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object PadTo - method padToHNil0,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object PadTo - method padToHNil0 - <$anon: shapeless.ops.hlist.PadTo[shapeless._0 A shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object PadTo - method padToHNil,1.0,0.0,5.0,5.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object PadTo - method padToHNil - <$anon: shapeless.ops.hlist.PadTo[shapeless.Succ[N] A shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object PadTo - method padTo1,1.0,0.0,5.0,5.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object PadTo - method padTo1 - <$anon: shapeless.ops.hlist.PadTo[shapeless.Succ[N] A H :: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Slice - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Slice - method slice0,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Slice - method slice0 - <$anon: shapeless.ops.hlist.Slice[shapeless._0 shapeless._0 L]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Slice - method slice1,1.0,0.0,6.0,6.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Slice - method slice1 - <$anon: shapeless.ops.hlist.Slice[shapeless.Succ[N] shapeless.Succ[U] H :: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Slice - method slice2,1.0,0.0,6.0,6.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Slice - method slice2 - <$anon: shapeless.ops.hlist.Slice[shapeless._0 shapeless.Succ[U] H :: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Reify - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Reify - method hnilReify,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Reify - method hnilReify - <$anon: shapeless.ops.hlist.Reify[L]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Reify - method hlistReify,1.0,0.0,8.0,8.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Reify - method hlistReify - <$anon: shapeless.ops.hlist.Reify[H :: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Combinations - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Combinations - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Combinations - method combination0,1.0,0.0,5.0,5.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Combinations - method combination0 - <$anon: shapeless.ops.hlist.Combinations[shapeless._0 L]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object Combinations - method combination1,1.0,0.0,10.0,9.0,0.0,0.0,5.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object Combinations - method combination1 - <$anon: shapeless.ops.hlist.Combinations[shapeless.Succ[N] H :: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,4.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityCombinations - method combinationHNil,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - trait LowPriorityCombinations - method combinationHNil - <$anon: shapeless.ops.hlist.Combinations[N shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - trait ProductToHList - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ProductToHList - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ProductToHList - method pairToHCons,1.0,0.0,6.0,6.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object ProductToHList - method pairToHCons - <$anon: shapeless.ops.hlist.ProductToHList[Product2[H T]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object ProductToHList - <$anon: shapeless.ops.hlist.ProductToHList[Unit]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0
HEAD,0,package shapeless - package ops - object hlist - object HListToProduct - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object hlist - object HListToProduct - <$anon: shapeless.ops.hlist.HListToProduct[shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0
HEAD,0,package shapeless - package ops - object hlist - object HListToProduct - method hconsToPair,1.0,0.0,6.0,6.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object hlist - object HListToProduct - method hconsToPair - <$anon: shapeless.ops.hlist.HListToProduct[H :: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ProductISOFacet - trait ProductISOOps - method toProduct,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ProductISOFacet - trait ProductISOOps - method fromProduct,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ApplyUnapplyFacet - trait ApplyUnapplyOps - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ApplyUnapplyFacet - trait ApplyUnapplyOps - method unapply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ApplyUnapplyFacet - trait ApplyUnapplyCompanion - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ApplyUnapplyFacet - trait ApplyUnapplyCompanion - method unapply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ProductFacet - trait ProductOps - method productElement,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ProductFacet - trait ProductOps - method productIterator,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ProductFacet - trait ProductOps - method productPrefix,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ProductFacet - trait ProductOps - method productArity,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ProductFacet - trait ProductMethods - method productElement,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ProductFacet - trait ProductMethods - method productIterator,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ProductFacet - trait ProductMethods - method productPrefix,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ProductFacet - trait ProductMethods - method productArity,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait PolymorphicEqualityFacet - trait PolymorphicEqualityOps - method canEqual,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait PolymorphicEqualityFacet - trait PolymorphicEqualityOps - method equals,1.0,0.0,5.0,5.0,0.0,0.0,9.0,8.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait PolymorphicEqualityFacet - trait PolymorphicEqualityOps - method hashCode,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait PolymorphicEqualityFacet - trait PolymorphicEqualityMethods - method equals,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait PolymorphicEqualityFacet - trait PolymorphicEqualityMethods - method hashCode,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CopyFacet - trait CopyOps - method copy,1.0,0.0,2.0,2.0,0.0,0.0,5.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait CopyFacet - trait CopyMethods - method copyRecord,1.0,0.0,1.0,1.0,0.0,0.0,2.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait ToStringFacet - trait ToStringOps - method toString,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ToStringFacet - trait ToStringMethods - method toString,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait DefaultCaseClassDefns - method Ops,1.0,0.0,23.0,21.0,0.0,0.0,5.0,5.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - object tuple - method hlistOps,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - object tuple - method productTupleOps,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method productElements,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method head,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method tail,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method +:,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method :+,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method ++,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method ++:,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method :::,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method reverse_:::,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method at,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method at,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method last,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method init,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method select,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method filter,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method filterNot,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method removeElem,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method removeAll,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method replace,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - class ReplaceTypeAux - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method replaceType,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method updatedElem,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - class UpdatedTypeAux - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method updatedType,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - class UpdateWithAux - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method updateWith,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method updateAtWith,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - class UpdatedAtAux - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method updatedAt,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method updatedAt,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method take,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method take,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method drop,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method drop,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method split,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method split,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method reverse_split,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method reverse_split,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method splitLeft,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method reverse_splitLeft,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method splitRight,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method reverse_splitRight,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method reverse,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method map,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method flatMap,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method mapConst,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method collect,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method foldMap,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method foldLeft,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method foldRight,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method reduceLeft,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method reduceRight,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method zip,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method zipApply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method zip,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method unzip,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method zipOne,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method zipConst,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method zipWithIndex,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method transpose,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method unify,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method unifySubtypes,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method length,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method to,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method toList,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method toArray,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method toSized,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method permutations,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method mkString,1.0,0.0,3.0,3.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,2,package shapeless - package syntax - package std - class TupleOps - method rotateLeft,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,2,package shapeless - package syntax - package std - class TupleOps - method rotateRight,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method scanLeft,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method scanRight,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method patch,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method patch,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - class PatchAux - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method group,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method group,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method align,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method align,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TupleOps - method toHList,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object function - trait FnToProduct - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object function - object FnToProduct - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object function - object FnFromProduct - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - object inject - class InjectSyntax - method inject,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - object inject - class InjectSyntax - method runtimeInject,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityUnaryTCConstraint - method instance,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityUnaryTCConstraint - method hnilUnaryTC,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityUnaryTCConstraint - method cnilUnaryTC,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityUnaryTCConstraint - method hlistUnaryTC,1.0,0.0,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityUnaryTCConstraint - method coproductUnaryTC,1.0,0.0,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityUnaryTCConstraint - method genericUnaryTC,1.0,0.0,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityUnaryTCConstraint - method hnilConstUnaryTC,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityUnaryTCConstraint - method cnilConstUnaryTC,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityUnaryTCConstraint - method hlistConstUnaryTC,1.0,0.0,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityUnaryTCConstraint - method coproductConstUnaryTC,1.0,0.0,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityUnaryTCConstraint - method genericConstUnaryTC,1.0,0.0,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object UnaryTCConstraint - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object UnaryTCConstraint - method hlistIdUnaryTC,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object UnaryTCConstraint - method coproductIdUnaryTC,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object BasisConstraint - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object BasisConstraint - method instance,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object BasisConstraint - method hnilBasis,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object BasisConstraint - method cnilBasis,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object BasisConstraint - method hlistBasis,1.0,0.0,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object BasisConstraint - method coproductBasis,1.0,0.0,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object BasisConstraint - method genericBasis,1.0,0.0,6.0,5.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object LUBConstraint - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object LUBConstraint - method instance,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object LUBConstraint - method genericLUB,1.0,0.0,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object LUBConstraint - method hnilLUB,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object LUBConstraint - method cnilLUB,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object LUBConstraint - method hlistLUB,1.0,0.0,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - object LUBConstraint - method coproductLUB,1.0,0.0,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - object KeyConstraint - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object KeyConstraint - method instance,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object KeyConstraint - method genericKey,1.0,0.0,6.0,5.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object KeyConstraint - method hnilKeys,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object KeyConstraint - method cnilKeys,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object KeyConstraint - method hlistKeys,1.0,0.0,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object KeyConstraint - method coproductKeys,1.0,0.0,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object ValueConstraint - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object ValueConstraint - method instance,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object ValueConstraint - method genericValue,1.0,0.0,6.0,5.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object ValueConstraint - method hnilValues,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object ValueConstraint - method cnilValues,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object ValueConstraint - method hlistValues,1.0,0.0,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object ValueConstraint - method coproductValues,1.0,0.0,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object NotContainsConstraint - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object NotContainsConstraint - method instance,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object NotContainsConstraint - method genericNotContains,1.0,0.0,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object NotContainsConstraint - method hnilNotContains,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object NotContainsConstraint - method cnilNotContains,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object NotContainsConstraint - method hlistNotContains,1.0,0.0,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object NotContainsConstraint - method coproductNotContains,1.0,0.0,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object IsDistinctConstraint - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object IsDistinctConstraint - method instance,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object IsDistinctConstraint - method genericIsDistinct,1.0,0.0,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object IsDistinctConstraint - method hnilIsDistinct,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object IsDistinctConstraint - method cnilIsDistinct,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object IsDistinctConstraint - method hlistIsDistinct,1.0,0.0,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object IsDistinctConstraint - method coproductIsDistinct,1.0,0.0,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - object function - method fnHListOps,1.0,0.0,3.0,3.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - object function - method fnHListOps - <$anon: shapeless.syntax.std.FnHListOps[T => R]> - method toProduct,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - object function - method fnUnHListOps,1.0,0.0,3.0,3.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - object function - method fnUnHListOps - <$anon: shapeless.syntax.std.FnUnHListOps[fnUnHLister.Out]> - method fromProduct,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - trait FnHListOps - method toProduct,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - trait FnUnHListOps - method fromProduct,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait ShowSyntax - method show,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ShowSyntax - method showSyntax,1.0,0.0,3.0,3.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - object ShowSyntax - method showSyntax - <$anon: shapeless.examples.ShowSyntax> - method show,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - trait Show - method show,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Show - method stringShow,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object Show - method stringShow - <$anon: shapeless.examples.Show[String]> - method show,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Show - method intShow,1.0,0.0,3.0,3.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - object Show - method intShow - <$anon: shapeless.examples.Show[Int]> - method show,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object Show - object typeClass - method emptyProduct,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object Show - object typeClass - method emptyProduct - <$anon: shapeless.examples.Show[shapeless.HNil]> - method show,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Show - object typeClass - method product,2.0,0.0,10.0,8.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - object Show - object typeClass - method product - <$anon: shapeless.examples.Show[F :: T]> - method show,2.0,0.0,8.0,6.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object Show - object typeClass - method emptyCoproduct,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object Show - object typeClass - method emptyCoproduct - <$anon: shapeless.examples.Show[shapeless.CNil]> - method show,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Show - object typeClass - method coproduct,3.0,6.0,6.0,6.0,0.0,0.0,3.0,2.0,8.0,2.0,1.0
HEAD,0,package examples - object Show - object typeClass - method coproduct - <$anon: shapeless.examples.Show[L :+: R]> - method show,3.0,6.0,4.0,4.0,0.0,0.0,2.0,1.0,8.0,2.0,1.0
HEAD,0,package examples - object Show - object typeClass - method project,1.0,0.0,3.0,3.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - object Show - object typeClass - method project - <$anon: shapeless.examples.Show[F]> - method show,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - object unwrapped - class UnwrappedSyntax - method unwrap,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - object unwrapped - class UnwrappedSyntax - method wrap,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Unwrapped - method unwrap,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Unwrapped - method wrap,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Unwrapped - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait UnwrappedInstances - method unwrapAnyVal,1.0,0.0,9.0,9.0,0.0,0.0,7.0,7.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait UnwrappedInstances - method unwrapAnyVal - <$anon: shapeless.Unwrapped[W]> - method unwrap,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait UnwrappedInstances - method unwrapAnyVal - <$anon: shapeless.Unwrapped[W]> - method wrap,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait UnwrappedInstances - trait AnyValHelper - method unwrap,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait UnwrappedInstances - trait AnyValHelper - method wrap,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait UnwrappedInstances - object AnyValHelper - method sizeOneHListHelper,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait UnwrappedInstances - object AnyValHelper - <$anon: UnwrappedInstances.this.AnyValHelper[Any :: shapeless.HNil]> - method unwrap,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait UnwrappedInstances - object AnyValHelper - <$anon: UnwrappedInstances.this.AnyValHelper[Any :: shapeless.HNil]> - method wrap,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait UnwrappedInstances - method newtypeUnwrapped,1.0,0.0,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait UnwrappedInstances - method tagUnwrapped,1.0,0.0,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityUnwrappedInstances - <$anon: shapeless.Unwrapped[Any]> - method unwrap,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityUnwrappedInstances - <$anon: shapeless.Unwrapped[Any]> - method wrap,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityUnwrappedInstances - method selfUnwrapped,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Tuple - method fill,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Tuple - method fill,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - class HMap - method get,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - class HMap - method +,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - class HMap - method -,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - class HMap - method caseRel,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - object HMap - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object HMap - method empty,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object HMap - method empty,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object ~?> - method rel,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object ~?> - method idKeyWitness,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object ~?> - method idValueWitness,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait NatTRel0 - method witness,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,1,package examples - object UnwrappedExamples - trait Encode - method toJson,2.0,6.0,1.0,1.0,0.0,0.0,4.0,4.0,6.0,2.0,1.0
HEAD,1,package examples - object UnwrappedExamples - trait Encode - method fields,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UnwrappedExamples - object Encode - method instance,1.0,0.0,3.0,3.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - object UnwrappedExamples - object Encode - method instance - <$anon: shapeless.examples.UnwrappedExamples.Encode[T]> - method fields,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,1,package examples - object UnwrappedExamples - object Encode - method encodeHCons,2.0,9.0,5.0,5.0,0.0,0.0,7.0,7.0,6.0,2.0,1.0
HEAD,1,package examples - object UnwrappedExamples - object Encode - method encodeGeneric,1.0,0.0,5.0,5.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - object UnwrappedExamples - trait EncodeValue - method toJsonFragment,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UnwrappedExamples - object EncodeValue - method instance,1.0,0.0,3.0,3.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - object UnwrappedExamples - object EncodeValue - method instance - <$anon: shapeless.examples.UnwrappedExamples.EncodeValue[T]> - method toJsonFragment,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,1,package examples - object UnwrappedExamples - object EncodeValue - method encodeRoot,1.0,0.0,2.0,2.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,1,package examples - object UnwrappedExamples - trait Encode2 - method toJson,2.0,6.0,1.0,1.0,0.0,0.0,4.0,4.0,6.0,2.0,1.0
HEAD,1,package examples - object UnwrappedExamples - trait Encode2 - method fields,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UnwrappedExamples - object Encode2 - method instance,1.0,0.0,3.0,3.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - object UnwrappedExamples - object Encode2 - method instance - <$anon: shapeless.examples.UnwrappedExamples.Encode2[T]> - method fields,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,1,package examples - object UnwrappedExamples - object Encode2 - method encodeHCons,2.0,9.0,9.0,8.0,0.0,0.0,8.0,8.0,6.0,2.0,1.0
HEAD,1,package examples - object UnwrappedExamples - object Encode2 - method encodeGeneric,1.0,0.0,5.0,5.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - object SizedExamples - method sequence,2.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - object SizedExamples - method row,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object SizedExamples - method csv,1.0,0.0,2.0,2.0,0.0,0.0,6.0,4.0,0.0,0.0,1.0
HEAD,0,package examples - object SizedExamples - method fullyStatic,1.0,0.0,18.0,14.0,10.0,0.4166666666666667,12.0,5.0,0.0,0.0,-1.0
HEAD,0,package examples - object SizedExamples - method mixedDynamicStatic,1.0,0.0,37.0,31.0,7.0,0.18421052631578946,32.0,6.0,0.0,0.0,-0.21153846153846148
HEAD,0,package examples - object ADTPartitionExample - object Partitioner - method cnilPartitioner,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object ADTPartitionExample - object Partitioner - method cnilPartitioner - <$anon: shapeless.examples.ADTPartitionExample.Partitioner[shapeless.CNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ADTPartitionExample - object Partitioner - method cpPartitioner,1.0,0.0,7.0,7.0,0.0,0.0,9.0,8.0,0.0,0.0,1.0
HEAD,0,package examples - object ADTPartitionExample - object Partitioner - method cpPartitioner - <$anon: shapeless.examples.ADTPartitionExample.Partitioner[shapeless.labelled.FieldType[K H] :+: T]> - method apply,1.0,0.0,2.0,2.0,0.0,0.0,8.0,7.0,0.0,0.0,1.0
HEAD,0,package examples - object ADTPartitionExample - method partitionTuple,1.0,0.0,6.0,5.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - object ADTPartitionExample - method partitionRecord,1.0,0.0,3.0,3.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Orphan - macro method materializeOrphan,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object WrappedOrphan - macro method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait OrphanDeriver - macro method materialize,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class OrphanMacros - method materializeImpl,1.0,0.0,3.0,3.0,0.0,0.0,2.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class OrphanMacros - method materializeOrphanImpl,1.0,0.0,10.0,7.0,0.0,0.0,2.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class OrphanMacros - method materializeAux,14.0,7.0,59.0,54.0,0.0,0.0,34.0,22.0,31.0,4.0,0.8780487804878049
HEAD,0,package shapeless - class OrphanMacros - method materializeWrapped,2.0,0.0,16.0,10.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - object singleton - macro method mkSingletonOps,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - trait SingletonOps - method narrow,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - trait SingletonOps - method ->>,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - object SingletonOps - method instance,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object mergeSyntax - class MergeSyntax - method merge,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - trait CaseClassMerge - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CaseClassMerge - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CaseClassMerge - method mkCCMerge,1.0,0.0,10.0,9.0,0.0,0.0,5.0,4.0,0.0,0.0,1.0
HEAD,0,package examples - object CaseClassMerge - method mkCCMerge - <$anon: shapeless.examples.CaseClassMerge[T U]> - method apply,1.0,0.0,2.0,2.0,0.0,0.0,4.0,3.0,0.0,0.0,0.0
HEAD,0,package examples - object FactorialExamples - object Factorial - method factorial,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package examples - object FactorialExamples - object Factorial - method fact0,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object FactorialExamples - object Factorial - method factN,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object Sorting - method hnilNonDecreasing,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object Sorting - method hlistNonDecreasing1,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object Sorting - method hlistNonDecreasing2,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object Sorting - method acceptNonDecreasing,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package examples - object Sorting - trait SelectLeast - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Sorting - trait LowPrioritySelectLeast - method hlistSelectLeast1,1.0,0.0,3.0,3.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - object Sorting - trait LowPrioritySelectLeast - method hlistSelectLeast1 - <$anon: shapeless.examples.Sorting.SelectLeast[H :: T H T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object Sorting - object SelectLeast - method hlistSelectLeast3,2.0,5.0,7.0,7.0,0.0,0.0,7.0,6.0,6.0,2.0,1.0
HEAD,0,package examples - object Sorting - object SelectLeast - method hlistSelectLeast3 - <$anon: shapeless.examples.Sorting.SelectLeast[H :: T TM H :: TRem]> - method apply,2.0,5.0,4.0,4.0,0.0,0.0,6.0,5.0,6.0,2.0,1.0
HEAD,0,package examples - object Sorting - method selectLeast,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object Sorting - trait SelectionSort - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Sorting - trait LowPrioritySelectionSort - method hlistSelectionSort1,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object Sorting - trait LowPrioritySelectionSort - method hlistSelectionSort1 - <$anon: shapeless.examples.Sorting.SelectionSort[S S]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Sorting - object SelectionSort - method hlistSelectionSort2,2.0,5.0,7.0,7.0,0.0,0.0,7.0,7.0,6.0,2.0,1.0
HEAD,0,package examples - object Sorting - object SelectionSort - method hlistSelectionSort2 - <$anon: shapeless.examples.Sorting.SelectionSort[L M :: ST]> - method apply,2.0,5.0,4.0,4.0,0.0,0.0,6.0,6.0,6.0,2.0,1.0
HEAD,0,package examples - object Sorting - method selectionSort,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - object product - method productOps,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class ProductOps - method productElements,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class ProductOps - method length,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class ProductOps - method toTuple,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class ProductOps - method toHList,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class ProductOps - method toRecord,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class ProductOps - method to,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class ProductOps - method toMap,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class ProductOps - method toSized,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object Field - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,1,package shapeless - object record - method recordOps,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object record - object Record - macro method applyDynamic,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - object record - object Record - macro method applyDynamicNamed,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,1,package shapeless - object record - object Record - macro method selectDynamic,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait RecordArgs - macro method applyDynamic,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait RecordArgs - macro method applyDynamicNamed,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait FromRecordArgs - macro method applyDynamic,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,1,package shapeless - class RecordMacros - method mkRecordEmptyImpl,2.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,0.6
HEAD,1,package shapeless - class RecordMacros - method mkRecordNamedImpl,3.0,1.0,5.0,5.0,0.0,0.0,3.0,3.0,5.0,1.0,0.7142857142857143
HEAD,1,package shapeless - class RecordMacros - method forwardImpl,1.0,0.0,2.0,2.0,0.0,0.0,2.0,1.0,0.0,0.0,1.0
HEAD,1,package shapeless - class RecordMacros - method forwardNamedImpl,3.0,1.0,10.0,9.0,0.0,0.0,6.0,6.0,5.0,1.0,0.6666666666666666
HEAD,1,package shapeless - class RecordMacros - method forwardFromRecordImpl,4.0,1.0,12.0,11.0,0.0,0.0,8.0,6.0,5.0,1.0,0.49999999999999994
HEAD,1,package shapeless - class RecordMacros - method mkRecordImpl,3.0,7.0,11.0,11.0,0.0,0.0,7.0,6.0,23.0,2.0,1.0
HEAD,1,package shapeless - class RecordMacros - method mkRecordImpl - method mkElem,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,1,package shapeless - class RecordMacros - method mkRecordImpl - method promoteElem,3.0,7.0,4.0,4.0,0.0,0.0,5.0,5.0,23.0,2.0,1.0
HEAD,1,package shapeless - class RecordMacros - method mkParamsImpl,1.0,0.0,8.0,8.0,0.0,0.0,7.0,6.0,0.0,0.0,1.0
HEAD,1,package shapeless - class RecordMacros - method mkParamsImpl - method mkElem,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Witness - macro method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Witness - macro method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Witness - method mkWitness,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Witness - method witnessN,1.0,0.0,5.0,5.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Witness - macro method selectDynamic,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityWitnessWith - macro method apply2,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object WitnessWith - macro method apply1,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object WitnessWith - method depInstance,1.0,0.0,6.0,6.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object WitnessWith - method instance,1.0,0.0,6.0,6.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object NatWith - macro method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object NatWith - macro method apply2,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object NatWith - method depInstance,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object NatWith - method instance,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Widen - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Widen - method instance,1.0,0.0,5.0,5.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Widen - method instance - <$anon: shapeless.Widen[T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Widen - macro method apply1,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Widen - macro method materialize,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait SingletonTypeUtils - method singletonOpsTpe,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,2,package shapeless - trait SingletonTypeUtils - object SingletonType - method unapply,5.0,9.0,7.0,7.0,0.0,0.0,18.0,12.0,61.0,4.0,1.0
HEAD,0,package shapeless - trait SingletonTypeUtils - method narrowValue,3.0,11.0,7.0,7.0,0.0,0.0,5.0,4.0,19.0,1.0,1.0
HEAD,0,package shapeless - trait SingletonTypeUtils - method parseLiteralType,1.0,0.0,6.0,6.0,0.0,0.0,9.0,9.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait SingletonTypeUtils - method parseStandardType,1.0,0.0,5.0,5.0,0.0,0.0,7.0,7.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait SingletonTypeUtils - method parseType,1.0,0.0,2.0,2.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait SingletonTypeUtils - method typeCarrier,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait SingletonTypeUtils - method fieldTypeCarrier,1.0,0.0,6.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait SingletonTypeUtils - method mkTypeCarrier,1.0,0.0,6.0,4.0,2.0,0.3333333333333333,5.0,5.0,0.0,0.0,-1.0
HEAD,0,package shapeless - trait SingletonTypeUtils - method isValueClass,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,3,package shapeless - class SingletonTypeMacros - method mkWitness,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class SingletonTypeMacros - method mkWitnessWith,2.0,0.0,5.0,5.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - class SingletonTypeMacros - method mkWitnessNat,2.0,0.0,5.0,5.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - class SingletonTypeMacros - method mkOps,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class SingletonTypeMacros - method mkAttributedQualifier,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class SingletonTypeMacros - method unrefine,3.0,3.0,4.0,4.0,0.0,0.0,4.0,4.0,32.0,3.0,1.0
HEAD,2,package shapeless - class SingletonTypeMacros - method extractSingletonValue,6.0,7.0,7.0,7.0,0.0,0.0,13.0,9.0,70.0,5.0,1.0
HEAD,0,package shapeless - class SingletonTypeMacros - method materializeImpl,1.0,0.0,4.0,4.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,2,package shapeless - class SingletonTypeMacros - method extractResult,7.0,11.0,16.0,16.0,0.0,0.0,21.0,11.0,59.0,6.0,1.0
HEAD,0,package shapeless - class SingletonTypeMacros - method convertImpl,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - class SingletonTypeMacros - method inferInstance,2.0,0.0,6.0,6.0,0.0,0.0,3.0,3.0,0.0,0.0,-1.0
HEAD,0,package shapeless - class SingletonTypeMacros - method convertInstanceImplNat,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - class SingletonTypeMacros - method convertInstanceImplNat1,1.0,0.0,9.0,9.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - class SingletonTypeMacros - method convertInstanceImplNatAux,3.0,7.0,9.0,9.0,0.0,0.0,7.0,7.0,17.0,1.0,1.0
HEAD,1,package shapeless - class SingletonTypeMacros - method convertInstanceImpl1,1.0,0.0,8.0,8.0,0.0,0.0,5.0,4.0,0.0,0.0,1.0
HEAD,1,package shapeless - class SingletonTypeMacros - method convertInstanceImpl2,1.0,0.0,10.0,10.0,0.0,0.0,8.0,6.0,0.0,0.0,1.0
HEAD,0,package shapeless - class SingletonTypeMacros - method mkSingletonOps,1.0,0.0,2.0,2.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,1,package shapeless - class SingletonTypeMacros - method witnessTypeImpl,2.0,1.0,6.0,6.0,0.0,0.0,4.0,4.0,5.0,1.0,1.0
HEAD,0,package shapeless - class SingletonTypeMacros - method materializeWiden,2.0,0.0,6.0,6.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Generic - method to,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Generic - method from,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Generic - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Generic - method instance,1.0,0.0,5.0,5.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Generic - method instance - <$anon: shapeless.Generic[T]> - method to,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Generic - method instance - <$anon: shapeless.Generic[T]> - method from,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Generic - macro method materialize,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LabelledGeneric - method to,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LabelledGeneric - method from,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object LabelledGeneric - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object LabelledGeneric - method unsafeInstance,1.0,0.0,5.0,5.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - object LabelledGeneric - method unsafeInstance - <$anon: shapeless.LabelledGeneric[T]> - method to,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object LabelledGeneric - method unsafeInstance - <$anon: shapeless.LabelledGeneric[T]> - method from,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,1,package shapeless - object LabelledGeneric - macro method materialize,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object IsTuple - macro method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object HasProductGeneric - macro method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object HasCoproductGeneric - macro method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ReprTypes - method hlistTpe,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ReprTypes - method hnilTpe,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ReprTypes - method hconsTpe,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ReprTypes - method coproductTpe,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ReprTypes - method cnilTpe,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ReprTypes - method cconsTpe,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ReprTypes - method atatTpe,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ReprTypes - method fieldTypeTpe,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ReprTypes - method keyTagTpe,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ReprTypes - method symbolTpe,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ReprTypes - method objectRef,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait CaseClassMacros - method abort,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - method isReprType,1.0,0.0,2.0,2.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - method isReprType1,1.0,0.0,2.0,2.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - method lowerKind,1.0,0.0,2.0,2.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,2,package shapeless - trait CaseClassMacros - method isProductAux,1.0,0.0,5.0,5.0,0.0,0.0,9.0,7.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - method isProduct,1.0,0.0,2.0,2.0,0.0,0.0,5.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - method isProduct1,1.0,0.0,2.0,2.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - method isCoproduct,1.0,0.0,5.0,5.0,0.0,0.0,4.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - method ownerChain,2.0,0.0,7.0,6.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - method ownerChain - method loop,2.0,0.0,3.0,3.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - method isAnonOrRefinement,1.0,0.0,4.0,4.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,8,package shapeless - trait CaseClassMacros - method fieldsOf,2.0,0.0,9.0,7.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - method productCtorsOf,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - method accessiblePrimaryCtorOf,1.0,0.0,6.0,6.0,0.0,0.0,9.0,8.0,0.0,0.0,1.0
HEAD,2,package shapeless - trait CaseClassMacros - method ctorsOf,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,2,package shapeless - trait CaseClassMacros - method ctorsOf1,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - method distinctCtorsOfAux,2.0,0.0,7.0,7.0,0.0,0.0,9.0,7.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - method distinctCtorsOfAux - method distinct,2.0,0.0,4.0,4.0,0.0,0.0,5.0,4.0,0.0,0.0,1.0
HEAD,8,package shapeless - trait CaseClassMacros - method ctorsOfAux,21.0,8.0,90.0,83.0,4.0,0.04597701149425287,87.0,51.0,28.0,9.0,0.9398496240601505
HEAD,3,package shapeless - trait CaseClassMacros - method ctorsOfAux - method collectCtors,3.0,0.0,12.0,10.0,1.0,0.09090909090909091,7.0,7.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - method ctorsOfAux - method isLess,1.0,0.0,6.0,6.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - method ctorsOfAux - method orderSyms,1.0,0.0,5.0,5.0,0.0,0.0,6.0,6.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - method ctorsOfAux - method ownerIsSubType,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait CaseClassMacros - method nameAsString,1.0,0.0,2.0,2.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,2,package shapeless - trait CaseClassMacros - method nameAsValue,1.0,0.0,2.0,2.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait CaseClassMacros - method nameOf,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - method mkHListValue,2.0,9.0,4.0,4.0,0.0,0.0,4.0,3.0,6.0,2.0,1.0
HEAD,1,package shapeless - trait CaseClassMacros - method mkCompoundTpe,1.0,0.0,4.0,4.0,0.0,0.0,5.0,4.0,0.0,0.0,1.0
HEAD,1,package shapeless - trait CaseClassMacros - method mkHListTpe,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,2,package shapeless - trait CaseClassMacros - method mkCoproductTpe,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - method unpackHList,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - method unpackCoproduct,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - method unpackReprType,4.0,7.0,9.0,9.0,0.0,0.0,9.0,8.0,33.0,2.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - method unpackReprType - method unpack,4.0,7.0,5.0,5.0,0.0,0.0,8.0,8.0,33.0,2.0,1.0
HEAD,1,package shapeless - trait CaseClassMacros - object FieldType - method apply,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,3,package shapeless - trait CaseClassMacros - object FieldType - method unapply,4.0,9.0,8.0,8.0,0.0,0.0,20.0,10.0,127.0,7.0,1.0
HEAD,1,package shapeless - trait CaseClassMacros - method findField,1.0,0.0,2.0,2.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - method findField,1.0,0.0,4.0,3.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,3,package shapeless - trait CaseClassMacros - method appliedTypTree1,6.0,9.0,15.0,15.0,0.0,0.0,15.0,9.0,70.0,9.0,1.0
HEAD,3,package shapeless - trait CaseClassMacros - method mkCompoundTypTree1,2.0,8.0,4.0,4.0,0.0,0.0,9.0,7.0,6.0,2.0,1.0
HEAD,3,package shapeless - trait CaseClassMacros - method mkHListTypTree1,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,3,package shapeless - trait CaseClassMacros - method mkCoproductTypTree1,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,2,package shapeless - trait CaseClassMacros - method param1,4.0,5.0,6.0,6.0,0.0,0.0,3.0,3.0,33.0,2.0,1.0
HEAD,3,package shapeless - trait CaseClassMacros - method reprTypTree1,2.0,0.0,5.0,5.0,0.0,0.0,7.0,7.0,0.0,0.0,1.0
HEAD,1,package shapeless - trait CaseClassMacros - method isCaseClassLike,5.0,5.0,10.0,10.0,0.0,0.0,19.0,13.0,37.0,3.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - method isCaseClassLike - method isConcrete,1.0,0.0,1.0,1.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - method isCaseClassLike - method isFinalLike,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - method isCaseClassLike - method ctor,5.0,5.0,5.0,5.0,0.0,0.0,11.0,9.0,37.0,3.0,1.0
HEAD,3,package shapeless - trait CaseClassMacros - method isCaseObjectLike,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,2,package shapeless - trait CaseClassMacros - method isCaseAccessorLike,2.0,0.0,6.0,6.0,0.0,0.0,6.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - method classSym,2.0,0.0,8.0,8.0,1.0,0.1111111111111111,1.0,1.0,0.0,0.0,-1.0
HEAD,0,package shapeless - trait CaseClassMacros - method companionRef,2.0,0.0,10.0,9.0,1.0,0.1,4.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - method isAccessible,1.0,0.0,9.0,9.0,0.0,0.0,1.0,1.0,0.0,0.0,-1.0
HEAD,0,package shapeless - trait CaseClassMacros - method isAccessible,1.0,0.0,2.0,2.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,2,package shapeless - trait CaseClassMacros - method patchedCompanionSymbolOf,6.0,7.0,43.0,37.0,5.0,0.11904761904761904,19.0,15.0,17.0,1.0,0.18309859154929575
HEAD,0,package shapeless - trait CaseClassMacros - method patchedCompanionSymbolOf - class PatchedContext - trait PatchedLookupResult - method suchThat,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - method patchedCompanionSymbolOf - class PatchedContext - method patchedLookup,6.0,7.0,24.0,20.0,3.0,0.13043478260869565,12.0,9.0,17.0,1.0,0.052631578947368474
HEAD,0,package shapeless - trait CaseClassMacros - method patchedCompanionSymbolOf - class PatchedContext - method patchedLookup - <$anon: PatchedContext.this.PatchedLookupResult> - method suchThat,6.0,7.0,22.0,18.0,3.0,0.14285714285714285,11.0,8.0,17.0,1.0,0.05263157894736844
HEAD,1,package shapeless - trait CaseClassMacros - method prefix,1.0,0.0,5.0,5.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - method mkAttributedRef,1.0,0.0,7.0,7.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - method mkAttributedRef,1.0,0.0,6.0,6.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - method mkAttributedRef,2.0,5.0,5.0,5.0,0.0,0.0,5.0,5.0,20.0,2.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - method isNonGeneric,1.0,0.0,12.0,10.0,4.0,0.2857142857142857,12.0,8.0,0.0,0.0,0.7142857142857143
HEAD,0,package shapeless - trait CaseClassMacros - method isNonGeneric - method check,1.0,0.0,6.0,5.0,3.0,0.375,4.0,4.0,0.0,0.0,0.6363636363636364
HEAD,0,package shapeless - trait CaseClassMacros - method isTuple,1.0,0.0,2.0,2.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - method isVararg,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - method devarargify,3.0,5.0,6.0,6.0,0.0,0.0,4.0,4.0,21.0,1.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - method unByName,3.0,1.0,5.0,5.0,0.0,0.0,4.0,4.0,33.0,3.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - method equalTypes,2.0,6.0,2.0,2.0,0.0,0.0,12.0,8.0,10.0,3.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - method alignFields,2.0,9.0,7.0,7.0,0.0,0.0,17.0,14.0,14.0,4.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - method numNonCaseParamLists,4.0,0.0,15.0,13.0,0.0,0.0,12.0,10.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - object HasApply - method unapply,7.0,18.0,9.0,9.0,0.0,0.0,26.0,19.0,43.0,8.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - object HasUnapply - method unapply,5.0,14.0,8.0,8.0,0.0,0.0,22.0,19.0,18.0,6.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - object HasUniqueCtor - method unapply,4.0,14.0,7.0,7.0,0.0,0.0,15.0,12.0,25.0,2.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - object HasApplyUnapply - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - object HasApplyUnapply - method unapply,3.0,5.0,5.0,5.0,0.0,0.0,9.0,8.0,35.0,2.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - object HasCtorUnapply - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - object HasCtorUnapply - method unapply,3.0,5.0,5.0,5.0,0.0,0.0,9.0,8.0,35.0,2.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - trait CtorDtor - method construct,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - trait CtorDtor - method binding,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - trait CtorDtor - method reprBinding,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - object CtorDtor - method apply,25.0,17.0,87.0,79.0,7.0,0.08139534883720931,91.0,35.0,224.0,32.0,0.9839999999999999
HEAD,0,package shapeless - trait CaseClassMacros - object CtorDtor - method apply - method narrow,3.0,9.0,7.0,7.0,0.0,0.0,2.0,2.0,19.0,1.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - object CtorDtor - method apply - method narrow1,2.0,0.0,5.0,3.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - object CtorDtor - method apply - method mkCtorDtor0,5.0,10.0,14.0,14.0,0.0,0.0,22.0,11.0,26.0,7.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - object CtorDtor - method apply - method mkCtorDtor0 - <$anon: CaseClassMacros.this.CtorDtor> - method construct,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - object CtorDtor - method apply - method mkCtorDtor0 - <$anon: CaseClassMacros.this.CtorDtor> - method binding,2.0,10.0,1.0,1.0,0.0,0.0,4.0,4.0,6.0,2.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - object CtorDtor - method apply - method mkCtorDtor0 - <$anon: CaseClassMacros.this.CtorDtor> - method reprBinding,2.0,10.0,1.0,1.0,0.0,0.0,4.0,4.0,6.0,2.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - object CtorDtor - method apply - method mkCtorDtor1,3.0,10.0,11.0,11.0,0.0,0.0,11.0,6.0,17.0,4.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - object CtorDtor - method apply - method mkCtorDtor1 - <$anon: CaseClassMacros.this.CtorDtor> - method construct,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - object CtorDtor - method apply - method mkCtorDtor1 - <$anon: CaseClassMacros.this.CtorDtor> - method binding,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - object CtorDtor - method apply - method mkCtorDtor1 - <$anon: CaseClassMacros.this.CtorDtor> - method reprBinding,2.0,10.0,1.0,1.0,0.0,0.0,4.0,4.0,7.0,2.0,1.0
HEAD,0,package shapeless - trait CaseClassMacros - object CtorDtor - method apply - <$anon: CaseClassMacros.this.CtorDtor> - method construct,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - object CtorDtor - method apply - <$anon: CaseClassMacros.this.CtorDtor> - method binding,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - object CtorDtor - method apply - <$anon: CaseClassMacros.this.CtorDtor> - method reprBinding,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - object CtorDtor - method apply - <$anon: CaseClassMacros.this.CtorDtor> - method construct,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - object CtorDtor - method apply - <$anon: CaseClassMacros.this.CtorDtor> - method binding,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait CaseClassMacros - object CtorDtor - method apply - <$anon: CaseClassMacros.this.CtorDtor> - method reprBinding,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,2,package shapeless - class GenericMacros - method materialize,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class GenericMacros - method mkGeneric,3.0,0.0,7.0,7.0,0.0,0.0,6.0,6.0,0.0,0.0,-1.0
HEAD,6,package shapeless - class GenericMacros - method mkProductGeneric,3.0,5.0,9.0,8.0,0.0,0.0,8.0,6.0,12.0,4.0,1.0
HEAD,5,package shapeless - class GenericMacros - method mkCoproductGeneric,4.0,9.0,16.0,15.0,0.0,0.0,8.0,7.0,37.0,3.0,1.0
HEAD,5,package shapeless - class GenericMacros - method mkCoproductGeneric - method mkCoproductCases,4.0,9.0,8.0,8.0,0.0,0.0,3.0,2.0,37.0,3.0,1.0
HEAD,0,package shapeless - class GenericMacros - method mkIsTuple,2.0,0.0,6.0,5.0,0.0,0.0,3.0,3.0,0.0,0.0,-1.0
HEAD,0,package shapeless - class GenericMacros - method mkHasProductGeneric,2.0,0.0,6.0,5.0,0.0,0.0,5.0,5.0,0.0,0.0,-1.0
HEAD,0,package shapeless - class GenericMacros - method mkHasCoproductGeneric,2.0,0.0,6.0,5.0,0.0,0.0,5.0,5.0,0.0,0.0,-1.0
HEAD,0,package shapeless - object Fin - method apply,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Fin - method apply,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Fin - method toNat,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Data - method gmapQ,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Data0 - method dfltData,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Data0 - method dfltData - <$anon: shapeless.Data[F T R]> - method gmapQ,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Data1 - method deriveInstance,1.0,0.0,4.0,4.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Data1 - method deriveInstance - <$anon: shapeless.Data[P F R]> - method gmapQ,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Data - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Data - method gmapQ,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Data - method genTraversableData,1.0,0.0,8.0,8.0,0.0,0.0,6.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Data - method genTraversableData - <$anon: shapeless.Data[P C[T] R]> - method gmapQ,1.0,0.0,4.0,4.0,0.0,0.0,5.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Data - method genMapData,2.0,4.0,8.0,8.0,0.0,0.0,9.0,8.0,6.0,2.0,1.0
HEAD,0,package shapeless - object Data - method genMapData - <$anon: shapeless.Data[P M[K V] R]> - method gmapQ,2.0,4.0,4.0,4.0,0.0,0.0,8.0,7.0,6.0,2.0,1.0
HEAD,0,package shapeless - object Data - method deriveHNil,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Data - method deriveHNil - <$anon: shapeless.Data[P shapeless.HNil R]> - method gmapQ,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Data - method deriveHCons,1.0,0.0,5.0,5.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Data - method deriveHCons - <$anon: shapeless.Data[P H :: T R]> - method gmapQ,1.0,0.0,1.0,1.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Data - method deriveCNil,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Data - method deriveCNil - <$anon: shapeless.Data[P shapeless.CNil R]> - method gmapQ,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Data - method deriveCCons,3.0,7.0,9.0,9.0,0.0,0.0,7.0,5.0,8.0,2.0,1.0
HEAD,0,package shapeless - object Data - method deriveCCons - <$anon: shapeless.Data[P H :+: T R]> - method gmapQ,3.0,7.0,5.0,5.0,0.0,0.0,6.0,4.0,8.0,2.0,1.0
HEAD,0,package shapeless - trait DataT - method gmapT,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait DataT0 - method dfltDataT,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait DataT0 - method dfltDataT - <$anon: shapeless.DataT[F T]> - method gmapT,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait DataT1 - method deriveInstance,1.0,0.0,6.0,6.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait DataT1 - method deriveInstance - <$anon: shapeless.DataT[P F]> - method gmapT,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - object DataT - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object DataT - method gmapT,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object DataT - method genTraversableDataT,1.0,0.0,9.0,9.0,0.0,0.0,6.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - object DataT - method genTraversableDataT - <$anon: shapeless.DataT[F CC[T]]> - method gmapT,1.0,0.0,4.0,4.0,0.0,0.0,5.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - object DataT - method genMapDataT,2.0,9.0,13.0,12.0,0.0,0.0,12.0,10.0,10.0,3.0,1.0
HEAD,0,package shapeless - object DataT - method genMapDataT - <$anon: shapeless.DataT[F M[K V]]> - method gmapT,2.0,9.0,4.0,4.0,0.0,0.0,11.0,9.0,10.0,3.0,1.0
HEAD,0,package shapeless - object DataT - method deriveHNil,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object DataT - method deriveHNil - <$anon: shapeless.DataT[P shapeless.HNil]> - method gmapT,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object DataT - method deriveHCons,1.0,0.0,6.0,6.0,0.0,0.0,6.0,6.0,0.0,0.0,1.0
HEAD,0,package shapeless - object DataT - method deriveHCons - <$anon: shapeless.DataT[P H :: T]> - method gmapT,1.0,0.0,1.0,1.0,0.0,0.0,5.0,5.0,0.0,0.0,0.0
HEAD,0,package shapeless - object DataT - method deriveCNil,1.0,0.0,5.0,5.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - object DataT - method deriveCNil - <$anon: shapeless.DataT[P shapeless.CNil]> - method gmapT,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object DataT - method deriveCCons,3.0,6.0,9.0,9.0,0.0,0.0,8.0,6.0,8.0,2.0,1.0
HEAD,0,package shapeless - object DataT - method deriveCCons - <$anon: shapeless.DataT[P H :+: T]> - method gmapT,3.0,6.0,4.0,4.0,0.0,0.0,7.0,5.0,8.0,2.0,1.0
HEAD,0,package shapeless - object EverythingAux - method default,1.0,0.0,7.0,6.0,0.0,0.0,5.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - object EverywhereAux - method default,1.0,0.0,6.0,5.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - trait Delta - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait Delta0 - method generic,1.0,0.0,6.0,6.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - trait Delta0 - method generic - <$anon: shapeless.examples.Delta[F]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object Delta - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Delta - <$anon: shapeless.examples.Delta[Boolean]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object Delta - <$anon: shapeless.examples.Delta[Int]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object Delta - method stringDelta,1.0,0.0,4.0,4.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - object Delta - method stringDelta - <$anon: shapeless.examples.Delta[String]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object Delta - method optionDelta,5.0,7.0,11.0,11.0,0.0,0.0,19.0,7.0,32.0,4.0,1.0
HEAD,0,package examples - object Delta - method optionDelta - <$anon: shapeless.examples.Delta[Option[T]]> - method apply,5.0,7.0,6.0,6.0,0.0,0.0,18.0,6.0,32.0,4.0,1.0
HEAD,0,package examples - object Delta - method deriveHNil,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object Delta - method deriveHNil - <$anon: shapeless.examples.Delta[shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Delta - method deriveHCons,1.0,0.0,8.0,8.0,0.0,0.0,5.0,4.0,0.0,0.0,1.0
HEAD,0,package examples - object Delta - method deriveHCons - <$anon: shapeless.examples.Delta[H :: T]> - method apply,1.0,0.0,3.0,3.0,0.0,0.0,4.0,3.0,0.0,0.0,0.0
HEAD,0,package examples - object DeltaSyntax - class DeltaOps - method delta,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object Lift - method liftO,2.0,0.0,12.0,11.0,0.0,0.0,7.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - object Lift - object isDefined - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Lift - object get - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait LowPriorityDeepHLister - method headNotCaseClassDeepHLister,1.0,0.0,6.0,6.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package examples - trait LowPriorityDeepHLister - method headNotCaseClassDeepHLister - <$anon: shapeless.examples.DeepHLister[H :: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package examples - object DeepHLister - object hnilDeepHLister - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object DeepHLister - method headCaseClassDeepHLister,1.0,0.0,8.0,8.0,0.0,0.0,6.0,5.0,0.0,0.0,1.0
HEAD,0,package examples - object DeepHLister - method headCaseClassDeepHLister - <$anon: shapeless.examples.DeepHLister[H :: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,5.0,4.0,0.0,0.0,0.0
HEAD,0,package examples - object DeepHLister - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object OpenBaseCopyDemo - trait Base - method baseFields,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object OpenBaseCopyDemo - trait Base - method baseCopy,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object OpenBaseCopyDemo - class Foo - method baseCopy,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object OpenBaseCopyDemo - class Bar - method baseCopy,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object OpenBaseCopyDemo - class Baz - method baseCopy,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object OpenBaseCopyDemo - class Quux - method baseCopy,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object copySyntax - class CopySyntax - object copy - method applyRecord,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object copySyntax - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object openCopySyntax - class CopySyntax - object copy - method applyRecord,1.0,0.0,2.0,2.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - object openCopySyntax - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - trait OpenFamily - method baseFields,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait OpenFamily - method baseCopy,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait UpdateRepr - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UpdateRepr - method mergeUpdateRepr,1.0,0.0,5.0,5.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - object UpdateRepr - method mergeUpdateRepr - <$anon: shapeless.examples.UpdateRepr[T R]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object UpdateRepr - method cnilUpdateRepr,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object UpdateRepr - method cnilUpdateRepr - <$anon: shapeless.examples.UpdateRepr[shapeless.CNil R]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UpdateRepr - method cconsUpdateRepr,3.0,5.0,11.0,10.0,0.0,0.0,7.0,5.0,8.0,2.0,1.0
HEAD,0,package examples - object UpdateRepr - method cconsUpdateRepr - <$anon: shapeless.examples.UpdateRepr[H :+: T R]> - method apply,3.0,5.0,4.0,4.0,0.0,0.0,6.0,4.0,8.0,2.0,1.0
HEAD,0,package examples - object UpdateRepr - method genProdUpdateRepr,1.0,0.0,9.0,8.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package examples - object UpdateRepr - method genProdUpdateRepr - <$anon: shapeless.examples.UpdateRepr[T R]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package examples - object UpdateRepr - method genCoprodUpdateRepr,1.0,0.0,9.0,8.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package examples - object UpdateRepr - method genCoprodUpdateRepr - <$anon: shapeless.examples.UpdateRepr[T R]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - trait NatToFizzBuzzInstances1 - method other,1.0,0.0,5.0,5.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - object FizzBuzzExample - trait NatToFizzBuzzInstances1 - method other - <$anon: shapeless.examples.FizzBuzzExample.NatToFizzBuzz[N]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - trait NatToFizzBuzInstances0 - method fizz,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object FizzBuzzExample - trait NatToFizzBuzInstances0 - method fizz - <$anon: shapeless.examples.FizzBuzzExample.NatToFizzBuzz[N]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - trait NatToFizzBuzInstances0 - method buzz,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object FizzBuzzExample - trait NatToFizzBuzInstances0 - method buzz - <$anon: shapeless.examples.FizzBuzzExample.NatToFizzBuzz[N]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - object NatToFizzBuzz - method fizzAndBuzz,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object FizzBuzzExample - object NatToFizzBuzz - method fizzAndBuzz - <$anon: shapeless.examples.FizzBuzzExample.NatToFizzBuzz[N]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - object RevFizzBuzz - method revFizzBuzzOne,1.0,0.0,5.0,5.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - object FizzBuzzExample - object RevFizzBuzz - method revFizzBuzzOne - <$anon: shapeless.examples.FizzBuzzExample.RevFizzBuzz[<error>]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - object RevFizzBuzz - method succRevFizzBuzz,1.0,0.0,5.0,5.0,0.0,0.0,5.0,4.0,0.0,0.0,1.0
HEAD,0,package examples - object FizzBuzzExample - object RevFizzBuzz - method succRevFizzBuzz - <$anon: shapeless.examples.FizzBuzzExample.RevFizzBuzz[shapeless.Succ[N]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,4.0,3.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - object FizzBuzzResult - method fizzBuzzResult,1.0,0.0,5.0,5.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - object FizzBuzzExample - object FizzBuzzResult - method fizzBuzzResult - <$anon: shapeless.examples.FizzBuzzExample.FizzBuzzResult[N]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - object FizzBuzzToString - method other,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object FizzBuzzExample - method fizzBuzz,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ScalaVersionSpecifics - method implicitNotFoundMessage,3.0,6.0,10.0,10.0,0.0,0.0,3.0,3.0,10.0,1.0,1.0
HEAD,0,package shapeless - trait ScalaVersionSpecifics - class GenTraversableLikeOps - method iterator,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ScalaVersionSpecifics - method canBuildFrom,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ScalaVersionSpecifics - class NewEither - method flatMap,3.0,4.0,4.0,4.0,0.0,0.0,2.0,2.0,5.0,1.0,1.0
HEAD,0,package shapeless - trait ScalaVersionSpecifics - class NewEither - method toOption,3.0,5.0,4.0,4.0,0.0,0.0,2.0,2.0,5.0,1.0,1.0
HEAD,0,package shapeless - trait ScalaVersionSpecifics - class NewLeft - method value,2.0,1.0,3.0,3.0,0.0,0.0,1.0,1.0,4.0,1.0,1.0
HEAD,0,package shapeless - trait ScalaVersionSpecifics - class NewRight - method value,2.0,1.0,3.0,3.0,0.0,0.0,1.0,1.0,4.0,1.0,1.0
HEAD,0,package shapeless - trait ScalaVersionSpecifics - class NewIsIterable0 - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait LP0 - method canBuildFromNothing,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LP0 - class NewIsIterable1 - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LP1 - method canBuildEmptyFromNothing,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LP1 - class CanBuildFromOps - method newBuilder,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LP1 - class CanBuildFromOps - method newBuilder,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LP1 - class CanBuildFromOps - method fromSpecific,1.0,0.0,5.0,5.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,1,package shapeless - object labelled - method field,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,1,package shapeless - object labelled - class FieldBuilder - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Labelling - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Labelling - macro method mkLabelling,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Labelling - method instance,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Labelling - method instance - <$anon: shapeless.Labelling[T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait FieldPoly - class FieldCaseBuilder - method apply,1.0,0.0,6.0,6.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,1,package shapeless - trait FieldPoly - method atField,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait FieldOf - method ->>,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class LabelledMacros - method commaSeparated,7.0,7.0,20.0,20.0,0.0,0.0,19.0,14.0,8.0,0.0,-0.5454545454545454
HEAD,0,package shapeless - class LabelledMacros - method parseTypeOrFail,1.0,0.0,2.0,2.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - class LabelledMacros - method parseLiteralTypeOrFail,1.0,0.0,2.0,2.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - class LabelledMacros - method labelsOf,4.0,3.0,4.0,4.0,0.0,0.0,11.0,9.0,5.0,1.0,1.0
HEAD,0,package shapeless - class LabelledMacros - method mkLabelledGeneric,4.0,5.0,10.0,9.0,0.0,0.0,15.0,14.0,18.0,2.0,1.0
HEAD,0,package shapeless - class LabelledMacros - method mkLabelling,1.0,0.0,7.0,6.0,0.0,0.0,8.0,7.0,0.0,0.0,1.0
HEAD,0,package shapeless - class LabelledMacros - method recordType,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class LabelledMacros - method unionType,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class LabelledMacros - method labelledType,4.0,7.0,14.0,14.0,0.0,0.0,13.0,11.0,18.0,3.0,1.0
HEAD,0,package shapeless - class LabelledMacros - method hlistType,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class LabelledMacros - method coproductType,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class LabelledMacros - method nonLabelledType,2.0,1.0,7.0,7.0,0.0,0.0,6.0,5.0,5.0,1.0,1.0
HEAD,0,package examples - object StackOverflow2 - class A - method eval,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StackOverflow2 - class A0 - method eval,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StackOverflow2 - class A1 - method eval,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StackOverflow2 - class A2 - method eval,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StackOverflow2 - class ApplyA - method eval,1.0,0.0,1.0,1.0,0.0,0.0,2.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object StackOverflow3 - object value - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StackOverflow3 - class Preprocessor - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - object StackOverflow4 - method fun,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StackOverflow4 - method fun1,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StackOverflow4 - method fun2,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StackOverflow4 - method wrap_fun,1.0,0.0,3.0,3.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - method fact,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - method fact,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - object IsAncestor - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - object IsAncestor - method directFather,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - object IsAncestor - method directMother,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - object IsAncestor - method fatherSideRelation,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - object IsAncestor - method motherSideRelation,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - trait AllAncestorsLowPrio - method none,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - object AllAncestors - method fatherSide,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - object AllAncestors - method motherSide,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - object AllAncestors - method bothSides,1.0,0.0,8.0,7.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - object Relationship - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - object Relationship - method caseP2AncestorOfP1,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeLevelBacktrack - object Relationship - method caseP1AncestorOfP2,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object recordsubtyping - class City - method equals,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object recordsubtyping - trait default - method id,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object recordsubtyping - object toUpper - method toUpStr,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object recordsubtyping - object toUpper - method toUpCity,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object recordsubtyping - object toUpper - method toUpHl,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object recordsubtyping - method transform,1.0,0.0,6.0,5.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - trait CSVConverter - method from,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait CSVConverter - method to,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CSVConverter - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CSVConverter - method fail,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object CSVConverter - method stringCSVConverter,1.0,0.0,4.0,4.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - object CSVConverter - method stringCSVConverter - <$anon: shapeless.examples.CSVConverter[String]> - method from,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object CSVConverter - method stringCSVConverter - <$anon: shapeless.examples.CSVConverter[String]> - method to,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CSVConverter - method intCsvConverter,1.0,0.0,4.0,4.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package examples - object CSVConverter - method intCsvConverter - <$anon: shapeless.examples.CSVConverter[Int]> - method from,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object CSVConverter - method intCsvConverter - <$anon: shapeless.examples.CSVConverter[Int]> - method to,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object CSVConverter - method listCsvLinesConverter,3.0,11.0,8.0,8.0,0.0,0.0,8.0,7.0,10.0,2.0,1.0
HEAD,0,package examples - object CSVConverter - method listCsvConverter,1.0,0.0,5.0,5.0,0.0,0.0,8.0,7.0,0.0,0.0,1.0
HEAD,0,package examples - object CSVConverter - method listCsvConverter - <$anon: shapeless.examples.CSVConverter[List[A]]> - method from,1.0,0.0,1.0,1.0,0.0,0.0,4.0,3.0,0.0,0.0,0.0
HEAD,0,package examples - object CSVConverter - method listCsvConverter - <$anon: shapeless.examples.CSVConverter[List[A]]> - method to,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - object CSVConverter - method deriveHNil,3.0,10.0,8.0,8.0,0.0,0.0,7.0,5.0,3.0,1.0,1.0
HEAD,0,package examples - object CSVConverter - method deriveHNil - <$anon: shapeless.examples.CSVConverter[shapeless.HNil]> - method from,3.0,10.0,4.0,4.0,0.0,0.0,6.0,4.0,3.0,1.0,1.0
HEAD,0,package examples - object CSVConverter - method deriveHNil - <$anon: shapeless.examples.CSVConverter[shapeless.HNil]> - method to,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CSVConverter - method deriveHCons,4.0,13.0,16.0,16.0,0.0,0.0,24.0,14.0,7.0,2.0,1.0
HEAD,0,package examples - object CSVConverter - method deriveHCons - <$anon: shapeless.examples.CSVConverter[V :: T]> - method from,4.0,13.0,8.0,8.0,0.0,0.0,17.0,12.0,7.0,2.0,1.0
HEAD,0,package examples - object CSVConverter - method deriveHCons - <$anon: shapeless.examples.CSVConverter[V :: T]> - method to,1.0,0.0,3.0,3.0,0.0,0.0,6.0,3.0,0.0,0.0,0.0
HEAD,0,package examples - object CSVConverter - method deriveHConsOption,5.0,16.0,18.0,18.0,0.0,0.0,34.0,18.0,7.0,2.0,1.0
HEAD,0,package examples - object CSVConverter - method deriveHConsOption - <$anon: shapeless.examples.CSVConverter[Option[V] :: T]> - method from,5.0,16.0,10.0,10.0,0.0,0.0,25.0,14.0,7.0,2.0,1.0
HEAD,0,package examples - object CSVConverter - method deriveHConsOption - <$anon: shapeless.examples.CSVConverter[Option[V] :: T]> - method to,1.0,0.0,3.0,3.0,0.0,0.0,8.0,5.0,0.0,0.0,1.0
HEAD,0,package examples - object CSVConverter - method deriveClass,1.0,0.0,5.0,5.0,0.0,0.0,6.0,6.0,0.0,0.0,1.0
HEAD,0,package examples - object CSVConverter - method deriveClass - <$anon: shapeless.examples.CSVConverter[A]> - method from,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - object CSVConverter - method deriveClass - <$anon: shapeless.examples.CSVConverter[A]> - method to,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object FoldExamples - object combine - method caseCharString,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - object FoldExamples - object combine - method caseIntBoolean,2.0,0.0,1.0,1.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - object NewtypeExamples - method MyString,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object NewtypeExamples - class MyStringOps - method mySize,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object tag - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object tag - class Tagger - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object newtype - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object newtype - method newtypeOps,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object the - macro method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object the - macro method selectDynamic,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class TheMacros - method applyImpl,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - class TheMacros - method implicitlyImpl,8.0,13.0,24.0,20.0,4.0,0.16666666666666666,26.0,17.0,30.0,9.0,0.8064516129032259
HEAD,0,package shapeless - object TypeOf - macro method selectDynamic,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object TypeOf - class Macros - method selectDynamic,5.0,7.0,18.0,14.0,4.0,0.2222222222222222,12.0,10.0,27.0,4.0,0.4545454545454545
HEAD,0,package shapeless - trait Lub - method left,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Lub - method right,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Lub - method lub,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Lub - method lub - <$anon: shapeless.Lub[T T T]> - method left,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Lub - method lub - <$anon: shapeless.Lub[T T T]> - method right,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - trait LogFacet - trait LogMethods - method log,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - trait CachedFacet - trait CachedOps - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - trait CachedFacet - trait CachedOps - method unapply,3.0,0.0,14.0,13.0,1.0,0.07142857142857142,11.0,8.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - trait CachedFacet - trait CachedOps - method intern,2.0,0.0,8.0,8.0,0.0,0.0,6.0,6.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - trait CachedFacet - trait CachedOps - method alive,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - trait CachedFacet - trait CachedOps - method aliveExtracted,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - trait CachedFacet - trait CachedCompanion - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - trait CachedFacet - trait CachedCompanion - method unapply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - trait CachedFacet - trait CachedCompanion - method alive,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - trait CachedFacet - trait CachedCompanion - method aliveExtracted,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - trait CachedCaseClassDefns - method Ops,1.0,0.0,26.0,25.0,0.0,0.0,6.0,6.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object ALaCacheDemo - object FooDefns - class Foo - method stuff,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,-1.0
HEAD,0,package shapeless - package ops - object zipper - object Right - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Right - method right,1.0,0.0,5.0,5.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object zipper - object Right - method right - <$anon: shapeless.ops.zipper.Right[shapeless.Zipper[C L RH :: RT P]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Left - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Left - method left,1.0,0.0,5.0,5.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object zipper - object Left - method left - <$anon: shapeless.ops.zipper.Left[shapeless.Zipper[C LH :: LT R P]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object First - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object First - method first,1.0,0.0,6.0,6.0,0.0,0.0,5.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object zipper - object First - method first - <$anon: shapeless.ops.zipper.First[shapeless.Zipper[C L R P]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,4.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Last - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Last - method last,1.0,0.0,6.0,6.0,0.0,0.0,5.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object zipper - object Last - method last - <$anon: shapeless.ops.zipper.Last[shapeless.Zipper[C L R P]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,4.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object RightBy - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object RightBy - method rightBy,2.0,5.0,11.0,10.0,0.0,0.0,10.0,7.0,9.0,2.0,1.0
HEAD,0,package shapeless - package ops - object zipper - object RightBy - method rightBy - <$anon: shapeless.ops.zipper.RightBy[shapeless.Zipper[C L R P] N]> - method apply,2.0,5.0,4.0,4.0,0.0,0.0,9.0,6.0,9.0,2.0,1.0
HEAD,0,package shapeless - package ops - object zipper - object LeftBy - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object LeftBy - method leftBy,2.0,5.0,11.0,10.0,0.0,0.0,10.0,7.0,9.0,2.0,1.0
HEAD,0,package shapeless - package ops - object zipper - object LeftBy - method leftBy - <$anon: shapeless.ops.zipper.LeftBy[shapeless.Zipper[C L R P] N]> - method apply,2.0,5.0,4.0,4.0,0.0,0.0,9.0,6.0,9.0,2.0,1.0
HEAD,0,package shapeless - package ops - object zipper - object RightTo - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object RightTo - method rightTo,2.0,5.0,11.0,10.0,0.0,0.0,10.0,7.0,9.0,2.0,1.0
HEAD,0,package shapeless - package ops - object zipper - object RightTo - method rightTo - <$anon: shapeless.ops.zipper.RightTo[shapeless.Zipper[C L R P] T]> - method apply,2.0,5.0,4.0,4.0,0.0,0.0,9.0,6.0,9.0,2.0,1.0
HEAD,0,package shapeless - package ops - object zipper - object LeftTo - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object LeftTo - method leftTo,2.0,5.0,12.0,11.0,0.0,0.0,16.0,10.0,9.0,2.0,1.0
HEAD,0,package shapeless - package ops - object zipper - object LeftTo - method leftTo - <$anon: shapeless.ops.zipper.LeftTo[shapeless.Zipper[C L R P] T]> - method apply,2.0,5.0,4.0,4.0,0.0,0.0,15.0,9.0,9.0,2.0,1.0
HEAD,0,package shapeless - package ops - object zipper - object Up - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Up - method up,1.0,0.0,8.0,7.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object zipper - object Up - method up - <$anon: shapeless.ops.zipper.Up[shapeless.Zipper[C L R Some[P]]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Down - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Down - method hlistDown,1.0,0.0,6.0,6.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object zipper - object Down - method hlistDown - <$anon: shapeless.ops.zipper.Down[shapeless.Zipper[C L RH :: RT P]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Down - method genericDown,1.0,0.0,6.0,6.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object zipper - object Down - method genericDown - <$anon: shapeless.ops.zipper.Down[shapeless.Zipper[C L RH :: RT P]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Root - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Root - method rootRoot,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object zipper - object Root - method rootRoot - <$anon: shapeless.ops.zipper.Root[shapeless.Zipper[C L R None.type]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Root - method nonRootRoot,1.0,0.0,8.0,7.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object zipper - object Root - method nonRootRoot - <$anon: shapeless.ops.zipper.Root[shapeless.Zipper[C L R Some[P]]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Get - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Get - method get,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object zipper - object Get - method get - <$anon: shapeless.ops.zipper.Get[shapeless.Zipper[C L RH :: RT P]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Put - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Put - method genericPut,1.0,0.0,8.0,7.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object zipper - object Put - method genericPut - <$anon: shapeless.ops.zipper.Put[shapeless.Zipper[C L RH :: RT P] E]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Put - method hlistPut,1.0,0.0,6.0,6.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object zipper - object Put - method hlistPut - <$anon: shapeless.ops.zipper.Put[shapeless.Zipper[C L RH :: RT P] E]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Modify - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Modify - method modify,1.0,0.0,9.0,8.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object zipper - object Modify - method modify - <$anon: shapeless.ops.zipper.Modify[shapeless.Zipper[C L RH1 :: RT P] RH1 RH2]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object zipper - object Insert - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Insert - method hlistInsert,1.0,0.0,6.0,6.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object zipper - object Insert - method hlistInsert - <$anon: shapeless.ops.zipper.Insert[shapeless.Zipper[C L R P] E]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Delete - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Delete - method hlistDelete,1.0,0.0,6.0,6.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object zipper - object Delete - method hlistDelete - <$anon: shapeless.ops.zipper.Delete[shapeless.Zipper[C L RH :: RT P]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Reify - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Reify - method hlistReify,1.0,0.0,6.0,6.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object zipper - object Reify - method hlistReify - <$anon: shapeless.ops.zipper.Reify[shapeless.Zipper[LR L R P]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object zipper - object Reify - method genericReify,1.0,0.0,8.0,7.0,0.0,0.0,5.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object zipper - object Reify - method genericReify - <$anon: shapeless.ops.zipper.Reify[shapeless.Zipper[C L R P]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,4.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - object union - method unionOps,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object union - object Union - macro method applyDynamicNamed,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,1,package shapeless - object union - object Union - macro method selectDynamic,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - class UnionMacros - method mkUnionNamedImpl,7.0,7.0,20.0,19.0,0.0,0.0,12.0,10.0,41.0,4.0,0.894736842105263
HEAD,0,package shapeless - class UnionMacros - method mkUnionNamedImpl - method mkFieldTpe,1.0,0.0,2.0,2.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - class UnionMacros - method mkUnionNamedImpl - method mkElem,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,1,package shapeless - class UnionMacros - method mkUnionNamedImpl - method promoteElem,3.0,7.0,4.0,4.0,0.0,0.0,5.0,5.0,23.0,2.0,1.0
HEAD,0,package shapeless - object Cached - macro method materialize,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Cached - method implicitly,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class CachedMacros - method deepCopyTree,1.0,0.0,9.0,7.0,2.0,0.2222222222222222,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - class CachedMacros - method materializeCached,4.0,0.0,43.0,31.0,9.0,0.225,24.0,20.0,0.0,0.0,-0.6190476190476191
HEAD,0,package shapeless - package syntax - package std - object traversable - method traversableOps,1.0,0.0,1.0,1.0,0.0,0.0,2.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - object traversable - method traversableOps2,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class TraversableOps - method toHList,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - package std - class TraversableOps2 - method toSizedHList,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object LinearAlgebraExamples - class VectorOps - method tupled,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object LinearAlgebraExamples - class VectorOps - method +,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object LinearAlgebraExamples - object VectorOps - object sum - method caseDouble,2.0,3.0,1.0,1.0,0.0,0.0,4.0,2.0,9.0,2.0,1.0
HEAD,0,package examples - object LinearAlgebraExamples - object VectorOps - method pointOps1,1.0,0.0,3.0,3.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package examples - object LinearAlgebraExamples - object VectorOps - method pointOps1 - <$anon: shapeless.examples.LinearAlgebraExamples.VectorOps[<error> (Double )]> - method +,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package examples - object LinearAlgebraExamples - object VectorOps - method pointOpsN,1.0,0.0,12.0,11.0,0.0,0.0,11.0,7.0,0.0,0.0,1.0
HEAD,0,package examples - object LinearAlgebraExamples - object VectorOps - method pointOpsN - <$anon: shapeless.examples.LinearAlgebraExamples.VectorOps[N PN]> - method +,1.0,0.0,4.0,4.0,0.0,0.0,10.0,6.0,0.0,0.0,1.0
HEAD,0,package examples - object LinearAlgebraExamples - method Vector,1.0,0.0,1.0,1.0,0.0,0.0,2.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object LinearAlgebraExamples - method Vector,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object FunctorDemo - method transform,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - trait Functor - method map,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package examples - object Functor - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Functor - <$anon: shapeless.examples.Functor[shapeless.Id]> - method map,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object Functor - method hcons,2.0,5.0,7.0,7.0,0.0,0.0,10.0,6.0,6.0,2.0,1.0
HEAD,0,package examples - object Functor - method hcons - <$anon: shapeless.examples.Functor[F]> - method map,2.0,5.0,4.0,4.0,0.0,0.0,9.0,5.0,6.0,2.0,1.0
HEAD,0,package examples - object Functor - method constFunctor,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object Functor - method constFunctor - <$anon: shapeless.examples.Functor[[T]T]> - method map,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package examples - trait Functor0 - method ccons,1.0,0.0,5.0,5.0,0.0,0.0,10.0,7.0,0.0,0.0,1.0
HEAD,0,package examples - trait Functor0 - method ccons - <$anon: shapeless.examples.Functor[F]> - method map,1.0,0.0,2.0,2.0,0.0,0.0,9.0,6.0,0.0,0.0,1.0
HEAD,0,package examples - trait Functor0 - method generic,1.0,0.0,5.0,5.0,0.0,0.0,5.0,4.0,0.0,0.0,1.0
HEAD,0,package examples - trait Functor0 - method generic - <$anon: shapeless.examples.Functor[F]> - method map,1.0,0.0,2.0,2.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - object functorSyntax - method apply,1.0,0.0,2.0,2.0,0.0,0.0,2.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object functorSyntax - class FunctorOps - method map,1.0,0.0,1.0,1.0,0.0,0.0,2.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object StagedTypeClassExample - trait TupleConsumer - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StagedTypeClassExample - object TupleConsumer - <$anon: shapeless.examples.StagedTypeClassExample.TupleConsumer[Int String]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object StagedTypeClassExample - object TupleConsumer - <$anon: shapeless.examples.StagedTypeClassExample.TupleConsumer[Boolean Double]> - method apply,2.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object StagedTypeClassExample - method consumeTuple,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object StagedTypeClassExample - method stagedConsumeTuple,1.0,0.0,11.0,8.0,0.0,0.0,5.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - object ReflectionUtils - method mkTypeTree,11.0,11.0,12.0,12.0,0.0,0.0,0.0,0.0,29.0,1.0,0.8461538461538461
HEAD,0,package examples - object ReflectionUtils - method mkExpr,2.0,0.0,6.0,6.0,0.0,0.0,5.0,4.0,0.0,0.0,1.0
HEAD,0,package examples - object ReflectionUtils - method mkExpr - <$anon: scala.reflect.api.TreeCreator> - method apply,2.0,0.0,3.0,3.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object ReflectionUtils - method evalTree,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object sized - trait ToHList - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object sized - object ToHList - <$anon: shapeless.ops.sized.ToHList[Any shapeless.Nat._0]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object sized - object ToHList - method nonEmptySizedToHList,1.0,0.0,6.0,6.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object sized - object ToHList - method nonEmptySizedToHList - <$anon: shapeless.ops.sized.ToHList[Repr shapeless.Succ[L]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Lens - method get,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Lens - method set,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Lens - method modify,1.0,0.0,1.0,1.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Lens - method compose,1.0,0.0,4.0,4.0,0.0,0.0,7.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Lens - method compose - <$anon: shapeless.Lens[T A]> - method get,1.0,0.0,1.0,1.0,0.0,0.0,2.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Lens - method compose - <$anon: shapeless.Lens[T A]> - method set,1.0,0.0,1.0,1.0,0.0,0.0,4.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Lens - method compose,1.0,0.0,4.0,4.0,0.0,0.0,8.0,6.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Lens - method compose - <$anon: shapeless.Prism[T A]> - method get,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Lens - method compose - <$anon: shapeless.Prism[T A]> - method set,1.0,0.0,1.0,1.0,0.0,0.0,4.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Lens - method >>,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Lens - method >>,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,1,package shapeless - trait Lens - method selectDynamic,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Lens - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Lens - method unapply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Lens - method ~,1.0,0.0,4.0,4.0,0.0,0.0,8.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Lens - method ~ - <$anon: shapeless.ProductLensBuilder[S (A  B)]> - method get,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Lens - method ~ - <$anon: shapeless.ProductLensBuilder[S (A  B)]> - method set,1.0,0.0,1.0,1.0,0.0,0.0,4.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Lens - method ~,1.0,0.0,4.0,4.0,0.0,0.0,9.0,7.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Lens - method ~ - <$anon: shapeless.ProductPrismBuilder[S (A  B)]> - method get,1.0,0.0,1.0,1.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Lens - method ~ - <$anon: shapeless.ProductPrismBuilder[S (A  B)]> - method set,1.0,0.0,1.0,1.0,0.0,0.0,4.0,2.0,0.0,0.0,1.0
HEAD,1,package shapeless - trait LPLens - method selectDynamic,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Prism - method get,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Prism - method set,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Prism - method modify,1.0,0.0,1.0,1.0,0.0,0.0,6.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Prism - method compose,1.0,0.0,4.0,4.0,0.0,0.0,7.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Prism - method compose - <$anon: shapeless.Prism[T A]> - method get,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Prism - method compose - <$anon: shapeless.Prism[T A]> - method set,1.0,0.0,1.0,1.0,0.0,0.0,4.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Prism - method compose,1.0,0.0,4.0,4.0,0.0,0.0,8.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Prism - method compose - <$anon: shapeless.Prism[T A]> - method get,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Prism - method compose - <$anon: shapeless.Prism[T A]> - method set,1.0,0.0,1.0,1.0,0.0,0.0,4.0,2.0,0.0,0.0,1.0
HEAD,1,package shapeless - trait Prism - method selectDynamic,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Prism - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Prism - method unapply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Prism - method ~,1.0,0.0,4.0,4.0,0.0,0.0,9.0,7.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Prism - method ~ - <$anon: shapeless.ProductPrismBuilder[S (A  B)]> - method get,1.0,0.0,1.0,1.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Prism - method ~ - <$anon: shapeless.ProductPrismBuilder[S (A  B)]> - method set,1.0,0.0,1.0,1.0,0.0,0.0,4.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Prism - method ~,1.0,0.0,8.0,8.0,0.0,0.0,10.0,6.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Prism - method ~ - <$anon: shapeless.ProductPrismBuilder[S (A  B)]> - method get,1.0,0.0,5.0,5.0,0.0,0.0,5.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Prism - method ~ - <$anon: shapeless.ProductPrismBuilder[S (A  B)]> - method set,1.0,0.0,1.0,1.0,0.0,0.0,4.0,1.0,0.0,0.0,1.0
HEAD,1,package shapeless - trait LPPrism - method selectDynamic,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait ProductLensBuilder - method ~,1.0,0.0,16.0,15.0,0.0,0.0,13.0,7.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait ProductLensBuilder - method ~ - <$anon: shapeless.ProductLensBuilder[C Q]> - method get,1.0,0.0,1.0,1.0,0.0,0.0,7.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ProductLensBuilder - method ~ - <$anon: shapeless.ProductLensBuilder[C Q]> - method set,1.0,0.0,4.0,4.0,0.0,0.0,5.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait ProductPrismBuilder - method ~,1.0,0.0,20.0,19.0,0.0,0.0,15.0,9.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait ProductPrismBuilder - method ~ - <$anon: shapeless.ProductPrismBuilder[C Q]> - method get,1.0,0.0,5.0,5.0,0.0,0.0,9.0,6.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait ProductPrismBuilder - method ~ - <$anon: shapeless.ProductPrismBuilder[C Q]> - method set,1.0,0.0,4.0,4.0,0.0,0.0,5.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - object OpticDefns - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object OpticDefns - object compose - method default,1.0,0.0,1.0,1.0,0.0,0.0,2.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object OpticDefns - class RootLens - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object OpticDefns - class RootLens - method get,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object OpticDefns - class RootLens - method set,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - object OpticDefns - method id,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object OpticDefns - method setLens,2.0,0.0,5.0,5.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - object OpticDefns - method setLens - <$anon: shapeless.Lens[Set[E] Boolean]> - method get,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object OpticDefns - method setLens - <$anon: shapeless.Lens[Set[E] Boolean]> - method set,2.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - object OpticDefns - method mapLens,3.0,9.0,8.0,8.0,0.0,0.0,7.0,7.0,6.0,1.0,1.0
HEAD,0,package shapeless - object OpticDefns - method mapLens - <$anon: shapeless.Lens[Map[K V] Option[V]]> - method get,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object OpticDefns - method mapLens - <$anon: shapeless.Lens[Map[K V] Option[V]]> - method set,3.0,9.0,4.0,4.0,0.0,0.0,5.0,5.0,6.0,1.0,1.0
HEAD,0,package shapeless - object OpticDefns - method mapPrism,1.0,0.0,5.0,5.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - object OpticDefns - method mapPrism - <$anon: shapeless.Prism[Map[K V] V]> - method get,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object OpticDefns - method mapPrism - <$anon: shapeless.Prism[Map[K V] V]> - method set,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - object OpticDefns - method hlistSelectLens,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object OpticDefns - method coproductSelectPrism,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object OpticDefns - method hlistNthLens,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object OpticDefns - method recordLens,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait OpticComposer - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object OpticComposer - method composeLL,1.0,0.0,5.0,5.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - object OpticComposer - method composeLL - <$anon: shapeless.OpticComposer[shapeless.Lens[S A] shapeless.Lens[T S]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object OpticComposer - method composeLP,1.0,0.0,5.0,5.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - object OpticComposer - method composeLP - <$anon: shapeless.OpticComposer[shapeless.Lens[S A] shapeless.Prism[T S]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object OpticComposer - method composePL,1.0,0.0,5.0,5.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - object OpticComposer - method composePL - <$anon: shapeless.OpticComposer[shapeless.Prism[S A] shapeless.Lens[T S]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object OpticComposer - method composePP,1.0,0.0,5.0,5.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - object OpticComposer - method composePP - <$anon: shapeless.OpticComposer[shapeless.Prism[S A] shapeless.Prism[T S]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait MkFieldLens - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkFieldLens - method mkFieldLens,1.0,0.0,8.0,7.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - object MkFieldLens - method mkFieldLens - <$anon: shapeless.MkFieldLens[A K]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait MkNthFieldLens - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkNthFieldLens - method mkGenPNth,1.0,0.0,8.0,7.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - object MkNthFieldLens - method mkGenPNth - <$anon: shapeless.MkNthFieldLens[A N]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait MkCtorPrism - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkCtorPrism - method mkCtorPrism,1.0,0.0,7.0,6.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - object MkCtorPrism - method mkCtorPrism - <$anon: shapeless.MkCtorPrism[A B]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - object InferProduct - method inferProduct1,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object InferProduct - method inferProduct2,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait MkSelectDynamicOptic - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityMkSelectDynamicOptic - method mkInferCtorSelField,1.0,0.0,12.0,11.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait LowPriorityMkSelectDynamicOptic - method mkInferCtorSelField - <$anon: shapeless.MkSelectDynamicOptic[R A K Nothing]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityMkSelectDynamicOptic - method mkSelFieldCtor,1.0,0.0,10.0,9.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait LowPriorityMkSelectDynamicOptic - method mkSelFieldCtor - <$anon: shapeless.MkSelectDynamicOptic[R A K B]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkSelectDynamicOptic - method mkSelField,1.0,0.0,9.0,8.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - object MkSelectDynamicOptic - method mkSelField - <$anon: shapeless.MkSelectDynamicOptic[R A K Nothing]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkSelectDynamicOptic - method mkSelCtor,1.0,0.0,9.0,8.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - object MkSelectDynamicOptic - method mkSelCtor - <$anon: shapeless.MkSelectDynamicOptic[R A Nothing B]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait MkGenericLens - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkGenericLens - method mkGenericLens,1.0,0.0,9.0,9.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - object MkGenericLens - method mkGenericLens - <$anon: shapeless.MkGenericLens[T]> - method apply,1.0,0.0,5.0,5.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - object MkGenericLens - method mkGenericLens - <$anon: shapeless.MkGenericLens[T]> - method apply - <$anon: shapeless.Lens[T this.Repr]> - method get,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkGenericLens - method mkGenericLens - <$anon: shapeless.MkGenericLens[T]> - method apply - <$anon: shapeless.Lens[T this.Repr]> - method set,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait MkLabelledGenericLens - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkLabelledGenericLens - method mkLabelledGenericLens,1.0,0.0,9.0,9.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - object MkLabelledGenericLens - method mkLabelledGenericLens - <$anon: shapeless.MkLabelledGenericLens[T]> - method apply,1.0,0.0,5.0,5.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - object MkLabelledGenericLens - method mkLabelledGenericLens - <$anon: shapeless.MkLabelledGenericLens[T]> - method apply - <$anon: shapeless.Lens[T this.Repr]> - method get,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkLabelledGenericLens - method mkLabelledGenericLens - <$anon: shapeless.MkLabelledGenericLens[T]> - method apply - <$anon: shapeless.Lens[T this.Repr]> - method set,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait MkHListNthLens - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkHListNthLens - method mkHListNthLens,1.0,0.0,10.0,10.0,0.0,0.0,7.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - object MkHListNthLens - method mkHListNthLens - <$anon: shapeless.MkHListNthLens[L N]> - method apply,1.0,0.0,5.0,5.0,0.0,0.0,6.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - object MkHListNthLens - method mkHListNthLens - <$anon: shapeless.MkHListNthLens[L N]> - method apply - <$anon: shapeless.Lens[L E]> - method get,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkHListNthLens - method mkHListNthLens - <$anon: shapeless.MkHListNthLens[L N]> - method apply - <$anon: shapeless.Lens[L E]> - method set,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait MkHListSelectLens - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkHListSelectLens - method mKHlistSelectLens,1.0,0.0,9.0,9.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - object MkHListSelectLens - method mKHlistSelectLens - <$anon: shapeless.MkHListSelectLens[L U]> - method apply,1.0,0.0,5.0,5.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - object MkHListSelectLens - method mKHlistSelectLens - <$anon: shapeless.MkHListSelectLens[L U]> - method apply - <$anon: shapeless.Lens[L U]> - method get,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkHListSelectLens - method mKHlistSelectLens - <$anon: shapeless.MkHListSelectLens[L U]> - method apply - <$anon: shapeless.Lens[L U]> - method set,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait MkCoproductSelectPrism - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkCoproductSelectPrism - method mKCoproductSelectPrism,1.0,0.0,9.0,9.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - object MkCoproductSelectPrism - method mKCoproductSelectPrism - <$anon: shapeless.MkCoproductSelectPrism[C T]> - method apply,1.0,0.0,5.0,5.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - object MkCoproductSelectPrism - method mKCoproductSelectPrism - <$anon: shapeless.MkCoproductSelectPrism[C T]> - method apply - <$anon: shapeless.Prism[C T]> - method get,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkCoproductSelectPrism - method mKCoproductSelectPrism - <$anon: shapeless.MkCoproductSelectPrism[C T]> - method apply - <$anon: shapeless.Prism[C T]> - method set,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait MkRecordSelectLens - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkRecordSelectLens - method mkRecordSelectLens,1.0,0.0,10.0,10.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - object MkRecordSelectLens - method mkRecordSelectLens - <$anon: shapeless.MkRecordSelectLens[R K]> - method apply,1.0,0.0,5.0,5.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - object MkRecordSelectLens - method mkRecordSelectLens - <$anon: shapeless.MkRecordSelectLens[R K]> - method apply - <$anon: shapeless.Lens[R E]> - method get,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkRecordSelectLens - method mkRecordSelectLens - <$anon: shapeless.MkRecordSelectLens[R K]> - method apply - <$anon: shapeless.Lens[R E]> - method set,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait MkPathOptic - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityMkPathOptic - method mkCoselSelPathOptic,1.0,0.0,14.0,13.0,0.0,0.0,6.0,6.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait LowPriorityMkPathOptic - method mkCoselSelPathOptic - <$anon: shapeless.MkPathOptic[S shapeless.Select[K] :: P]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,5.0,5.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkPathOptic - method mkHNilPathLens,1.0,0.0,6.0,6.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object MkPathOptic - method mkHNilPathLens - <$anon: shapeless.MkPathOptic[S shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkPathOptic - method mkSelPathOptic,1.0,0.0,11.0,10.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - object MkPathOptic - method mkSelPathOptic - <$anon: shapeless.MkPathOptic[S shapeless.Select[K] :: P]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MkPathOptic - method mkCoselPathOptic,1.0,0.0,11.0,10.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - object MkPathOptic - method mkCoselPathOptic - <$anon: shapeless.MkPathOptic[S shapeless.Coselect[B] :: P]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait LowPrioritySegment - method two,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Segment - method one,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Path - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Path - method selectDynamic,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait LPPath - method selectDynamic,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method head,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method tail,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method ::,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method +:,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method :+,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method ++,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method ++:,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method :::,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method reverse_:::,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method at,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method at,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method last,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method init,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method select,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - class SelectManyAux - method applyNatProduct,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method selectManyType,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method selectMany,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method selectRange,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method selectRange,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method selectFirst,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method filter,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method filterNot,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method partition,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method partitionP,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method removeElem,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method removeAll,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method union,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method intersect,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method diff,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method reinsert,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - class ReinsertAux - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method reinsertAll,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - class ReinsertAllAux - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method replace,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - class ReplaceTypeAux - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method replaceType,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method updatedElem,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method updateWith,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method updateAtWith,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - class UpdatedTypeAux - method apply,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method updatedType,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - class UpdatedAtAux - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method updatedAt,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method updatedAt,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method take,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method take,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method drop,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method drop,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method split,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method splitP,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method split,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method splitP,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method reverse_split,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method reverse_splitP,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method reverse_split,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method reverse_splitP,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method splitLeft,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method splitLeftP,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method reverse_splitLeft,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method reverse_splitLeftP,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method splitRight,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method splitRightP,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method reverse_splitRight,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method reverse_splitRightP,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method align,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method align,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method reverse,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method map,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method flatMap,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method mapCons,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method mapConst,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method collect,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method foldMap,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method foldLeft,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method foldRight,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method reduceLeft,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method reduceRight,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method repeat,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method zip,1.0,0.0,1.0,1.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method zipApply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method zip,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method unzip,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method zipOne,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method zipConst,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method zipWith,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method zipWithIndex,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method transpose,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method unify,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method unifySubtypes,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method tupled,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method length,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method runtimeLength,3.0,4.0,7.0,7.0,0.0,0.0,4.0,3.0,7.0,2.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method runtimeLength - method loop,3.0,4.0,4.0,4.0,0.0,0.0,3.0,3.0,7.0,2.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method runtimeList,3.0,4.0,11.0,11.0,0.0,0.0,5.0,4.0,7.0,2.0,0.14285714285714285
HEAD,0,package shapeless - package syntax - class HListOps - method runtimeList - method loop,3.0,4.0,6.0,6.0,0.0,0.0,3.0,3.0,7.0,2.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method to,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method toList,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method toArray,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method toCoproduct,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method toSized,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method mkString,4.0,7.0,11.0,10.0,0.0,0.0,10.0,4.0,16.0,3.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method mkString - method go,4.0,7.0,5.0,5.0,0.0,0.0,8.0,4.0,16.0,3.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method zipWithKeys,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method zipWithKeys,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method permutations,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,2,package shapeless - package syntax - class HListOps - method rotateLeft,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method rotateLeft,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,2,package shapeless - package syntax - class HListOps - method rotateRight,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method rotateRight,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method scanLeft,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method scanRight,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method patch,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method patch,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - class PatchAux - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method adjoined,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListOps - method collectFirst,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method group,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method group,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method padTo,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method slice,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method combinations,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class HListOps - method toProduct,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - object either - method eitherOps,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - package std - class EitherOps - method toCoproduct,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Default - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Default - method mkDefaultByName,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Default - method mkDefaultByName - <$anon: shapeless.Default[T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Default - macro method materialize,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Default - object AsRecord - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Default - object AsRecord - object Helper - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Default - object AsRecord - object Helper - <$anon: shapeless.Default.AsRecord.Helper[shapeless.HNil shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Default - object AsRecord - object Helper - method hconsSomeHelper,1.0,0.0,7.0,7.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,1,package shapeless - object Default - object AsRecord - object Helper - method hconsSomeHelper - <$anon: shapeless.Default.AsRecord.Helper[Some[H] :: T K :: LabT]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Default - object AsRecord - object Helper - method hconsNoneHelper,1.0,0.0,7.0,7.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,1,package shapeless - object Default - object AsRecord - object Helper - method hconsNoneHelper - <$anon: shapeless.Default.AsRecord.Helper[None.type :: T K :: LabT]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Default - object AsRecord - method asRecord,1.0,0.0,9.0,8.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,1,package shapeless - object Default - object AsRecord - method asRecord - <$anon: shapeless.Default.AsRecord[T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Default - object AsOptions - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Default - object AsOptions - object Helper - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Default - object AsOptions - object Helper - method hnilHelper,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Default - object AsOptions - object Helper - method hnilHelper - <$anon: shapeless.Default.AsOptions.Helper[shapeless.HNil shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Default - object AsOptions - object Helper - method hconsSomeHelper,1.0,0.0,8.0,7.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Default - object AsOptions - object Helper - method hconsSomeHelper - <$anon: shapeless.Default.AsOptions.Helper[Some[H] :: T H :: ReprT]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Default - object AsOptions - object Helper - method hconsNoneHelper,1.0,0.0,8.0,7.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Default - object AsOptions - object Helper - method hconsNoneHelper - <$anon: shapeless.Default.AsOptions.Helper[None.type :: T H :: ReprT]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Default - object AsOptions - method asOption,1.0,0.0,10.0,9.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Default - object AsOptions - method asOption - <$anon: shapeless.Default.AsOptions[T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - class DefaultMacros - method someTpe,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class DefaultMacros - method noneTpe,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,2,package shapeless - class DefaultMacros - method materialize,12.0,13.0,60.0,48.0,11.0,0.1864406779661017,63.0,38.0,39.0,10.0,0.9411764705882352
HEAD,0,package shapeless - class DefaultMacros - method materialize - method altCompanion,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - class DefaultMacros - method materialize - method some,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - class DefaultMacros - method materialize - method overloadsOf,3.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - class DefaultMacros - method materialize - method hasDefaultParams,1.0,0.0,2.0,2.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - class DefaultMacros - method materialize - method overloadsWithDefaultParamsIn,1.0,0.0,4.0,4.0,0.0,0.0,6.0,6.0,0.0,0.0,1.0
HEAD,0,package shapeless - class DefaultMacros - method materialize - method defaultsFor,6.0,13.0,9.0,9.0,0.0,0.0,21.0,11.0,33.0,8.0,1.0
HEAD,0,package shapeless - class DefaultMacros - method materialize - method mkDefault,2.0,5.0,6.0,5.0,0.0,0.0,5.0,5.0,6.0,2.0,1.0
HEAD,0,package examples - object DeepSearchExamples - trait Searchable - method find,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package examples - object DeepSearchExamples - trait LowPrioritySearchable - method hlistishSearchable,1.0,0.0,5.0,5.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - object DeepSearchExamples - trait LowPrioritySearchable - method hlistishSearchable - <$anon: shapeless.examples.DeepSearchExamples.Searchable[A Q]> - method find,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - object DeepSearchExamples - object Searchable - method elemSearchable,2.0,0.0,3.0,3.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - object DeepSearchExamples - object Searchable - method elemSearchable - <$anon: shapeless.examples.DeepSearchExamples.Searchable[A A]> - method find,2.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - object DeepSearchExamples - object Searchable - method listSearchable,1.0,0.0,4.0,4.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - object DeepSearchExamples - object Searchable - method listSearchable - <$anon: shapeless.examples.DeepSearchExamples.Searchable[List[A] Q]> - method find,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - object DeepSearchExamples - object Searchable - method hnilSearchable,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object DeepSearchExamples - object Searchable - method hnilSearchable - <$anon: shapeless.examples.DeepSearchExamples.Searchable[shapeless.HNil Q]> - method find,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package examples - object DeepSearchExamples - object Searchable - method hlistSearchable,1.0,0.0,6.0,6.0,0.0,0.0,8.0,5.0,0.0,0.0,1.0
HEAD,0,package examples - object DeepSearchExamples - object Searchable - method hlistSearchable - <$anon: shapeless.examples.DeepSearchExamples.Searchable[H :: T Q]> - method find,1.0,0.0,2.0,2.0,0.0,0.0,7.0,4.0,0.0,0.0,1.0
HEAD,0,package examples - object DeepSearchExamples - class SearchableWrapper - method deepFind,1.0,0.0,2.0,2.0,0.0,0.0,2.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object DeepSearchExamples - method wrapSearchable,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - package sexp - object SexpProp - method apply,1.0,0.0,2.0,2.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - package sexp - object SexpProp - method unapply,4.0,7.0,7.0,7.0,0.0,0.0,13.0,3.0,27.0,5.0,1.0
HEAD,0,package examples - package ast - trait Token - method text,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package ast - object SpecialToken - method text,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package ast - trait Term - method field,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait SexpConvert - method deser,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - trait SexpConvert - method ser,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object SexpUserConvert - method stringSexpConvert,3.0,5.0,7.0,7.0,0.0,0.0,4.0,4.0,5.0,1.0,1.0
HEAD,0,package examples - object SexpUserConvert - method stringSexpConvert - <$anon: shapeless.examples.SexpConvert[String]> - method deser,3.0,5.0,4.0,4.0,0.0,0.0,2.0,2.0,5.0,1.0,1.0
HEAD,0,package examples - object SexpUserConvert - method stringSexpConvert - <$anon: shapeless.examples.SexpConvert[String]> - method ser,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object SexpUserConvert - method intSexpConvert,3.0,7.0,7.0,7.0,0.0,0.0,6.0,6.0,5.0,1.0,1.0
HEAD,0,package examples - object SexpUserConvert - method intSexpConvert - <$anon: shapeless.examples.SexpConvert[Int]> - method deser,3.0,7.0,4.0,4.0,0.0,0.0,3.0,3.0,5.0,1.0,1.0
HEAD,0,package examples - object SexpUserConvert - method intSexpConvert - <$anon: shapeless.examples.SexpConvert[Int]> - method ser,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object SexpUserConvert - method boolSexpConvert,4.0,5.0,7.0,7.0,0.0,0.0,4.0,3.0,4.0,1.0,1.0
HEAD,0,package examples - object SexpUserConvert - method boolSexpConvert - <$anon: shapeless.examples.SexpConvert[Boolean]> - method deser,3.0,5.0,4.0,4.0,0.0,0.0,2.0,1.0,4.0,1.0,1.0
HEAD,0,package examples - object SexpUserConvert - method boolSexpConvert - <$anon: shapeless.examples.SexpConvert[Boolean]> - method ser,2.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object SexpUserConvert - method optSexpConvert,5.0,5.0,10.0,10.0,0.0,0.0,5.0,5.0,10.0,2.0,1.0
HEAD,0,package examples - object SexpUserConvert - method optSexpConvert - <$anon: shapeless.examples.SexpConvert[Option[T]]> - method deser,3.0,5.0,4.0,4.0,0.0,0.0,2.0,2.0,4.0,1.0,1.0
HEAD,0,package examples - object SexpUserConvert - method optSexpConvert - <$anon: shapeless.examples.SexpConvert[Option[T]]> - method ser,3.0,4.0,4.0,4.0,0.0,0.0,2.0,2.0,6.0,1.0,1.0
HEAD,0,package examples - object SexpConvert - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object SexpConvert - <$anon: shapeless.examples.SexpConvert[shapeless.HNil]> - method deser,2.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object SexpConvert - <$anon: shapeless.examples.SexpConvert[shapeless.HNil]> - method ser,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package examples - object SexpConvert - method deriveHCons,5.0,13.0,21.0,21.0,0.0,0.0,17.0,15.0,19.0,4.0,0.8999999999999999
HEAD,1,package examples - object SexpConvert - method deriveHCons - <$anon: shapeless.examples.SexpConvert[shapeless.labelled.FieldType[K V] :: T]> - method deser,3.0,13.0,10.0,10.0,0.0,0.0,12.0,11.0,15.0,3.0,0.7894736842105263
HEAD,1,package examples - object SexpConvert - method deriveHCons - <$anon: shapeless.examples.SexpConvert[shapeless.labelled.FieldType[K V] :: T]> - method ser,3.0,4.0,7.0,7.0,0.0,0.0,4.0,3.0,4.0,1.0,1.0
HEAD,0,package examples - object SexpConvert - <$anon: shapeless.examples.SexpConvert[shapeless.CNil]> - method deser,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object SexpConvert - <$anon: shapeless.examples.SexpConvert[shapeless.CNil]> - method ser,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package examples - object SexpConvert - method deriveCCons,6.0,10.0,17.0,17.0,0.0,0.0,21.0,13.0,25.0,6.0,0.875
HEAD,1,package examples - object SexpConvert - method deriveCCons - <$anon: shapeless.examples.SexpConvert[shapeless.labelled.FieldType[K V] :+: T]> - method deser,4.0,10.0,9.0,9.0,0.0,0.0,14.0,9.0,17.0,4.0,0.7333333333333335
HEAD,1,package examples - object SexpConvert - method deriveCCons - <$anon: shapeless.examples.SexpConvert[shapeless.labelled.FieldType[K V] :+: T]> - method ser,3.0,5.0,4.0,4.0,0.0,0.0,6.0,4.0,8.0,2.0,1.0
HEAD,1,package examples - object SexpConvert - method deriveInstance,1.0,0.0,6.0,6.0,0.0,0.0,6.0,6.0,0.0,0.0,1.0
HEAD,1,package examples - object SexpConvert - method deriveInstance - <$anon: shapeless.examples.SexpConvert[F]> - method deser,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,1,package examples - object SexpConvert - method deriveInstance - <$anon: shapeless.examples.SexpConvert[F]> - method ser,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - trait Pack - method unpack,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - object Pack - method packHNil,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - object Pack - method packHList,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - trait Pack0 - trait Unpack - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - trait Pack0 - object Unpack - method unpack1,1.0,0.0,5.0,5.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - object PackExamples - trait Pack0 - object Unpack - method unpack1 - <$anon: Pack0.this.Unpack[F H :: T H]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - trait Pack0 - trait Unpack0 - method unpack2,1.0,0.0,5.0,5.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - object PackExamples - trait Pack0 - trait Unpack0 - method unpack2 - <$anon: Pack0.this.Unpack[F H :: T E]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - trait Pack0 - trait IsPCons - method split,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - trait Pack0 - object IsPCons - method hlistIsPCons,2.0,5.0,8.0,8.0,0.0,0.0,3.0,3.0,6.0,2.0,1.0
HEAD,0,package examples - object PackExamples - trait Pack0 - object IsPCons - method hlistIsPCons - <$anon: Pack0.this.IsPCons[F H0 :: T0]> - method split,2.0,5.0,3.0,3.0,0.0,0.0,2.0,2.0,6.0,2.0,1.0
HEAD,0,package examples - object PackExamples - trait Show - method show,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - method show,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package examples - object PackExamples - <$anon: shapeless.examples.PackExamples.Show[shapeless.examples.PackExamples.A]> - method show,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - <$anon: shapeless.examples.PackExamples.Show[shapeless.examples.PackExamples.B]> - method show,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - <$anon: shapeless.examples.PackExamples.Show[shapeless.examples.PackExamples.C]> - method show,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object PackExamples - method use3,1.0,0.0,5.0,4.0,1.0,0.2,16.0,5.0,0.0,0.0,1.0
HEAD,0,package examples - object TyApp - method tyApp3,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - trait TyApp0 - method tyApp2,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - trait TyApp1 - method tyApp1,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object KindPolyExamples - method sameTypeArgs,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.3333333333333333
HEAD,0,package examples - object KindPolyExamples - method sameTypeCtor,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.3333333333333333
HEAD,0,package shapeless - package syntax - object zipper - method toZipper,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - object zipper - method toZipper,1.0,0.0,1.0,1.0,0.0,0.0,2.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class GenericZipperOps - method toZipper,1.0,0.0,1.0,1.0,0.0,0.0,2.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class HListZipperOps - method toZipper,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object MacroState - method getOrElseUpdate,3.0,8.0,26.0,15.0,11.0,0.4230769230769231,9.0,8.0,6.0,1.0,1.0
HEAD,0,package shapeless - package syntax - object typeable - method typeableOps,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class TypeableOps - method cast,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class TypeableOps - method narrowTo,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object tupled - method caseHList,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - object productElements - method caseProduct,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package std - object maps - method mapOps,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package std - class MapOps - method toRecord,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object fin - object FromNat - method apply,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object fin - object FromNat - method finZeroFromNat,1.0,0.0,4.0,4.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object fin - object FromNat - method finZeroFromNat - <$anon: shapeless.ops.fin.FromNat[shapeless._0 N]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object fin - object FromNat - method finSuccFromNat,1.0,0.0,6.0,6.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object fin - object FromNat - method finSuccFromNat - <$anon: shapeless.ops.fin.FromNat[shapeless.Succ[M] shapeless.Succ[N]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object fin - object ToNat - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object fin - object ToNat - method finZeroToNat,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object fin - object ToNat - method finZeroToNat - <$anon: shapeless.ops.fin.ToNat[shapeless.FinZero[N]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object fin - object ToNat - method finSuccToNat,1.0,0.0,6.0,6.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object fin - object ToNat - method finSuccToNat - <$anon: shapeless.ops.fin.ToNat[shapeless.FinSucc[N F]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,1,package shapeless - package syntax - object sized - method genTraversableSizedConv,1.0,0.0,3.0,3.0,0.0,0.0,2.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - object sized - method stringSizedConv,1.0,0.0,1.0,1.0,0.0,0.0,2.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class SizedConv - method checkSize,1.0,0.0,2.0,2.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class SizedConv - method sized,2.0,0.0,2.0,2.0,0.0,0.0,4.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class SizedConv - method sized,2.0,0.0,2.0,2.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class SizedConv - method ensureSized,1.0,0.0,4.0,4.0,0.0,0.0,4.0,3.0,0.0,0.0,-1.0
HEAD,0,package examples - object CartesianProductExample - trait ApplyMapper - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CartesianProductExample - object ApplyMapper - method hnil,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object CartesianProductExample - object ApplyMapper - method hnil - <$anon: shapeless.examples.CartesianProductExample.ApplyMapper[HF A shapeless.HNil shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CartesianProductExample - object ApplyMapper - method hlist,1.0,0.0,6.0,6.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package examples - object CartesianProductExample - object ApplyMapper - method hlist - <$anon: shapeless.examples.CartesianProductExample.ApplyMapper[HF A XH :: XT OutH :: OutT]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,0,package examples - object CartesianProductExample - trait LiftA2 - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CartesianProductExample - object LiftA2 - method hnil,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object CartesianProductExample - object LiftA2 - method hnil - <$anon: shapeless.examples.CartesianProductExample.LiftA2[HF shapeless.HNil Y shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object CartesianProductExample - object LiftA2 - method hlist,1.0,0.0,10.0,9.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package examples - object CartesianProductExample - object LiftA2 - method hlist - <$anon: shapeless.examples.CartesianProductExample.LiftA2[HF XH :: XT Y prepend.Out]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package examples - object CartesianProductExample - method liftA2,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object CartesianProductExample - object tuple - method whatever,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - object KList - method acceptOption,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package examples - object SybClassExamples - method paradise,1.0,0.0,39.0,38.0,1.0,0.02564102564102564,41.0,10.0,0.0,0.0,-1.0
HEAD,0,package examples - object SybClassExamples - method recursion,1.0,0.0,40.0,40.0,0.0,0.0,27.0,6.0,0.0,0.0,-1.0
HEAD,0,package examples - object SybClassExamples - method main,1.0,0.0,4.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0
HEAD,0,package examples - object RecordExamples - method printBook,2.0,7.0,9.0,8.0,0.0,0.0,13.0,10.0,6.0,2.0,-0.26666666666666666
HEAD,0,package examples - object FlattenExample - trait LowPriorityFlatten - method default,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object FlattenExample - object flatten - method caseTuple,1.0,0.0,2.0,2.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object FlattenExample - object toDouble - method caseInt,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object FlattenExample - object toDouble - method caseDouble,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class NatOps - method toInt,1.0,0.0,1.0,1.0,0.0,0.0,2.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object UniquenessExample - class Uniqueable - method unique,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object OrderingExamples - trait LowPriorityGenericOrdering - method hlistIsoOrdering,1.0,0.0,3.0,3.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - object OrderingExamples - trait LowPriorityGenericOrdering - method hlistIsoOrdering - <$anon: Ordering[A]> - method compare,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object OrderingExamples - object GenericOrdering - method hnilOrdering,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object OrderingExamples - object GenericOrdering - method hnilOrdering - <$anon: Ordering[shapeless.HNil]> - method compare,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object OrderingExamples - object GenericOrdering - method hlistOrdering,2.0,0.0,7.0,7.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - object OrderingExamples - object GenericOrdering - method hlistOrdering - <$anon: Ordering[H :: T]> - method compare,2.0,0.0,5.0,5.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - object ProductLength - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - object ProductLength - method length,1.0,0.0,6.0,6.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object product - object ProductLength - method length - <$anon: shapeless.ops.product.ProductLength[T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - object ToTuple - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - object ToTuple - method toTuple,1.0,0.0,9.0,9.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object product - object ToTuple - method toTuple - <$anon: shapeless.ops.product.ToTuple[P]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object product - object ToHList - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - object ToHList - method toHList,1.0,0.0,8.0,8.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object product - object ToHList - method toHList - <$anon: shapeless.ops.product.ToHList[P]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object product - object ToRecord - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - object ToRecord - method toRecord,1.0,0.0,8.0,8.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object product - object ToRecord - method toRecord - <$anon: shapeless.ops.product.ToRecord[P]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object product - object ToMap - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - object ToMap - method productToMap,1.0,0.0,9.0,9.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object product - object ToMap - method productToMap - <$anon: shapeless.ops.product.ToMap[P]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - object ToMap - method emptyProductToMapNothing,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - object ToTraversable - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - object ToTraversable - method productToTraversable,1.0,0.0,8.0,8.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object product - object ToTraversable - method productToTraversable - <$anon: shapeless.ops.product.ToTraversable[P M]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - object ToTraversable - method emptyProductToTraversableNothing,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - object ToSized - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - object ToSized - method productToSized,1.0,0.0,9.0,9.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object product - object ToSized - method productToSized - <$anon: shapeless.ops.product.ToSized[P M]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object product - object ToSized - method emptyProductToSizedNothing,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package ops - object maps - trait FromMap - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package ops - object maps - object FromMap - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package ops - object maps - object FromMap - method hnilFromMap,1.0,0.0,4.0,4.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package ops - object maps - object FromMap - method hnilFromMap - <$anon: shapeless.ops.maps.FromMap[shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package ops - object maps - object FromMap - method hlistFromMap,1.0,0.0,11.0,11.0,0.0,0.0,10.0,9.0,0.0,0.0,1.0
HEAD,0,package ops - object maps - object FromMap - method hlistFromMap - <$anon: shapeless.ops.maps.FromMap[shapeless.labelled.FieldType[K0 V0] :: T]> - method apply,1.0,0.0,7.0,7.0,0.0,0.0,9.0,8.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Lazy - method map,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Lazy - method flatMap,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Lazy - method apply,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Lazy - method unapply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Lazy - object Values - method hconsValues,1.0,0.0,2.0,2.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Lazy - method values,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,2,package shapeless - object Lazy - macro method mkLazy,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object lazily - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Strict - method map,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Strict - method flatMap,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Strict - method apply,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Strict - method unapply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,2,package shapeless - object Strict - macro method mkStrict,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait OpenImplicitMacros - method openImplicitTpe,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,2,package shapeless - trait OpenImplicitMacros - method openImplicitTpeParam,3.0,7.0,7.0,7.0,0.0,0.0,5.0,5.0,32.0,2.0,1.0
HEAD,0,package shapeless - trait OpenImplicitMacros - method secondOpenImplicitTpe,3.0,5.0,6.0,6.0,0.0,0.0,2.0,2.0,16.0,1.0,1.0
HEAD,0,package shapeless - class LazyMacros - method mkLazyImpl,1.0,0.0,5.0,4.0,0.0,0.0,2.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - class LazyMacros - method mkStrictImpl,1.0,0.0,5.0,4.0,0.0,0.0,2.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - class LazyMacros - method mkImpl,4.0,6.0,11.0,10.0,0.0,0.0,5.0,2.0,6.0,1.0,1.0
HEAD,0,package shapeless - class LazyMacros - method setAnnotation,3.0,7.0,22.0,21.0,0.0,0.0,14.0,13.0,35.0,1.0,-0.5555555555555556
HEAD,0,package shapeless - class LazyMacros - method setAnnotation - class SubstMessage - method transform,3.0,7.0,8.0,8.0,0.0,0.0,7.0,6.0,35.0,1.0,1.0
HEAD,0,package shapeless - class LazyMacros - method resetAnnotation,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,-1.0
HEAD,0,package shapeless - class LazyMacros - trait LazyDefinitions - class Instance - method ident,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class LazyMacros - trait LazyDefinitions - object Instance - method apply,1.0,0.0,5.0,5.0,0.0,0.0,5.0,5.0,0.0,0.0,0.0
HEAD,0,package shapeless - class LazyMacros - trait LazyDefinitions - class TypeWrapper - method equals,3.0,4.0,5.0,5.0,0.0,0.0,2.0,2.0,9.0,1.0,1.0
HEAD,0,package shapeless - class LazyMacros - trait LazyDefinitions - class TypeWrapper - method toString,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class LazyMacros - trait LazyDefinitions - object TypeWrapper - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class LazyMacros - trait LazyDefinitions - object TypeWrapper - method unapply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class LazyMacros - class DerivationContext - object State - method typeParamsToWildcards,2.0,0.0,4.0,4.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,1,package shapeless - class LazyMacros - class DerivationContext - object State - method resolveInstance,4.0,5.0,18.0,18.0,0.0,0.0,20.0,14.0,6.0,2.0,0.22807017543859642
HEAD,0,package shapeless - class LazyMacros - class DerivationContext - object State - method deriveInstance,9.0,14.0,23.0,19.0,0.0,0.0,24.0,16.0,18.0,5.0,0.2452830188679245
HEAD,0,package shapeless - class LazyMacros - class DerivationContext - class State - method addDependency,4.0,11.0,8.0,8.0,0.0,0.0,9.0,7.0,10.0,2.0,1.0
HEAD,0,package shapeless - class LazyMacros - class DerivationContext - class State - method update,1.0,0.0,2.0,2.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - class LazyMacros - class DerivationContext - class State - method openInst,1.0,0.0,5.0,5.0,0.0,0.0,6.0,6.0,0.0,0.0,0.0
HEAD,0,package shapeless - class LazyMacros - class DerivationContext - class State - method closeInst,1.0,0.0,8.0,8.0,0.0,0.0,9.0,8.0,0.0,0.0,-1.0
HEAD,0,package shapeless - class LazyMacros - class DerivationContext - class State - method lookup,3.0,6.0,5.0,5.0,0.0,0.0,8.0,8.0,6.0,1.0,1.0
HEAD,0,package shapeless - class LazyMacros - class DerivationContext - class State - method dependsOn,5.0,12.0,17.0,17.0,0.0,0.0,17.0,8.0,22.0,4.0,1.0
HEAD,0,package shapeless - class LazyMacros - class DerivationContext - class State - method dependsOn - method helper,5.0,12.0,13.0,13.0,0.0,0.0,14.0,7.0,22.0,4.0,1.0
HEAD,0,package shapeless - class LazyMacros - class DerivationContext - method stripRefinements,3.0,5.0,5.0,5.0,0.0,0.0,3.0,3.0,21.0,2.0,1.0
HEAD,0,package shapeless - class LazyMacros - class DerivationContext - method resolve,3.0,4.0,6.0,6.0,0.0,0.0,8.0,6.0,14.0,4.0,1.0
HEAD,0,package shapeless - class LazyMacros - class DerivationContext - method resolve0,2.0,5.0,10.0,10.0,0.0,0.0,10.0,7.0,6.0,2.0,1.0
HEAD,0,package shapeless - class LazyMacros - class DerivationContext - method deriveLowPriority,13.0,8.0,48.0,45.0,0.0,0.0,40.0,28.0,60.0,9.0,0.9466666666666665
HEAD,0,package shapeless - class LazyMacros - class DerivationContext - method deriveLowPriority - method helper,8.0,8.0,31.0,29.0,0.0,0.0,28.0,22.0,33.0,5.0,0.9428571428571427
HEAD,0,package shapeless - class LazyMacros - class DerivationContext - method deriveLowPriority - method helper - method ignored,3.0,5.0,4.0,4.0,0.0,0.0,4.0,4.0,21.0,2.0,1.0
HEAD,0,package shapeless - class LazyMacros - class DerivationContext - method derive,1.0,0.0,8.0,8.0,0.0,0.0,9.0,8.0,0.0,0.0,1.0
HEAD,0,package shapeless - class LazyMacros - class DerivationContext - class StripUnApplyNodes - method transform,4.0,6.0,11.0,11.0,0.0,0.0,27.0,11.0,201.0,5.0,1.0
HEAD,0,package shapeless - class LazyMacros - class DerivationContext - method mkInstances,8.0,11.0,45.0,40.0,0.0,0.0,24.0,14.0,25.0,5.0,1.0
HEAD,0,package shapeless - class LazyMacros - class DerivationContext - method mkInstances - method clean,1.0,0.0,4.0,4.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - object LazyMacros - method dcRef,1.0,0.0,10.0,5.0,5.0,0.5,8.0,7.0,0.0,0.0,1.0
HEAD,0,package shapeless - object LazyMacros - method deriveInstance,6.0,8.0,22.0,20.0,1.0,0.047619047619047616,13.0,8.0,12.0,3.0,0.7704918032786885
HEAD,0,package shapeless - trait Annotation - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Annotation - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Annotation - method mkAnnotation,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Annotation - method mkAnnotation - <$anon: shapeless.Annotation[A T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Annotation - macro method materialize,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Annotation - macro method materializeOption,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Annotations - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Annotations - method mkAnnotations,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Annotations - method mkAnnotations - <$anon: shapeless.Annotations[A T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Annotations - macro method materialize,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object TypeAnnotations - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object TypeAnnotations - method mkAnnotations,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object TypeAnnotations - method mkAnnotations - <$anon: shapeless.TypeAnnotations[A T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object TypeAnnotations - macro method materialize,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class AnnotationMacros - method optionTpe,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class AnnotationMacros - method someTpe,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class AnnotationMacros - method noneTpe,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class AnnotationMacros - method construct,2.0,0.0,13.0,11.0,1.0,0.08333333333333333,7.0,7.0,0.0,0.0,1.0
HEAD,0,package shapeless - class AnnotationMacros - method construct - method hasNonGenericCompanionMember,1.0,0.0,4.0,4.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - class AnnotationMacros - method materializeAnnotation,2.0,0.0,10.0,9.0,0.0,0.0,7.0,6.0,0.0,0.0,0.5000000000000001
HEAD,0,package shapeless - class AnnotationMacros - method materializeAnnotationRequired,3.0,9.0,10.0,10.0,0.0,0.0,5.0,4.0,6.0,1.0,1.0
HEAD,0,package shapeless - class AnnotationMacros - method materializeAnnotationOptional,3.0,9.0,10.0,10.0,0.0,0.0,5.0,4.0,6.0,1.0,1.0
HEAD,0,package shapeless - class AnnotationMacros - method materializeVariableAnnotations,1.0,0.0,2.0,2.0,0.0,0.0,2.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class AnnotationMacros - method materializeTypeAnnotations,1.0,0.0,2.0,2.0,0.0,0.0,2.0,1.0,0.0,0.0,0.0
HEAD,2,package shapeless - class AnnotationMacros - method materializeAnnotations,10.0,13.0,37.0,34.0,0.0,0.0,43.0,24.0,25.0,5.0,0.9540229885057473
HEAD,0,package shapeless - class AnnotationMacros - method extract,4.0,4.0,10.0,9.0,0.0,0.0,1.0,1.0,13.0,1.0,1.0
HEAD,0,package shapeless - package ops - object adjoin - trait LowPriorityAdjoin - method hlistAdjoin0,1.0,0.0,7.0,7.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object adjoin - trait LowPriorityAdjoin - method hlistAdjoin0 - <$anon: shapeless.ops.adjoin.Adjoin[H :: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object adjoin - trait LowPriorityAdjoin - method coproductAdjoin0,3.0,4.0,10.0,10.0,0.0,0.0,6.0,5.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object adjoin - trait LowPriorityAdjoin - method coproductAdjoin0 - <$anon: shapeless.ops.adjoin.Adjoin[H :+: T]> - method apply,3.0,4.0,4.0,4.0,0.0,0.0,5.0,4.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object adjoin - object Adjoin - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object adjoin - object Adjoin - method hnilAdjoin,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object adjoin - object Adjoin - method hnilAdjoin - <$anon: shapeless.ops.adjoin.Adjoin[shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object adjoin - object Adjoin - method cnilAdjoin,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object adjoin - object Adjoin - method cnilAdjoin - <$anon: shapeless.ops.adjoin.Adjoin[shapeless.CNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object adjoin - object Adjoin - method hlistLAdjoin1,1.0,0.0,8.0,8.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object adjoin - object Adjoin - method hlistLAdjoin1 - <$anon: shapeless.ops.adjoin.Adjoin[H :: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object adjoin - object Adjoin - method coproductAdjoin1,3.0,4.0,11.0,11.0,0.0,0.0,6.0,5.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object adjoin - object Adjoin - method coproductAdjoin1 - <$anon: shapeless.ops.adjoin.Adjoin[H :+: T]> - method apply,3.0,4.0,4.0,4.0,0.0,0.0,5.0,4.0,8.0,2.0,1.0
HEAD,0,package shapeless - object Nat - macro method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Nat - method toInt,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Nat - method toInt,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Nat - method natOps,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class NatMacros - method materializeWidened,3.0,7.0,6.0,6.0,0.0,0.0,4.0,4.0,17.0,1.0,1.0
HEAD,0,package shapeless - trait NatMacroDefns - object NatLiteral - method unapply,3.0,5.0,5.0,5.0,0.0,0.0,6.0,5.0,37.0,1.0,1.0
HEAD,0,package shapeless - trait NatMacroDefns - method mkNatTpt,2.0,0.0,10.0,9.0,0.0,0.0,10.0,7.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait NatMacroDefns - method mkNatTpt - method loop,2.0,0.0,4.0,4.0,0.0,0.0,6.0,6.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait NatMacroDefns - method mkNatTpe,2.0,0.0,10.0,9.0,0.0,0.0,7.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait NatMacroDefns - method mkNatTpe - method loop,2.0,0.0,4.0,4.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait NatMacroDefns - method mkNatValue,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Pred - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Pred - method pred,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Sum - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Sum - method sum1,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Sum - method sum2,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Diff - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Diff - method diff1,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Diff - method diff2,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Prod - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Prod - method prod1,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Prod - method prod2,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Div - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Div - method div1,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Div - method div2,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Div - method div3,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Mod - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Mod - method modAux,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object LT - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object LT - method lt1,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object LT - method lt2,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - trait LT0 - method lt3,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object LTEq - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object LTEq - method ltEq1,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object LTEq - method ltEq2,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - trait LTEq0 - method ltEq3,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - trait LTEq0 - method ltEq4,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object GT - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object GTEq - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Min - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Min - method minAux0,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Min - method minAux1,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Max - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Max - method maxAux0,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Max - method maxAux1,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Pow - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Pow - method pow1,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Pow - method pow2,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Pow - method pow3,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Range - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Range - method range1,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object nat - object Range - method range1 - <$anon: shapeless.ops.nat.Range[A A]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object Range - method range2,1.0,0.0,9.0,9.0,0.0,0.0,5.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object nat - object Range - method range2 - <$anon: shapeless.ops.nat.Range[A shapeless.Succ[B]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,4.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - trait LowPriorityGCD - method defaultCase,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object GCD - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object GCD - method terminationCase,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object LCM - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object LCM - method lcm,1.0,0.0,8.0,7.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method apply,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method nilClosed,1.0,0.0,7.0,7.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method nilClosed - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Inclusive[A] shapeless.ops.nat.BoundedRange.Inclusive[A]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method nilOpen,1.0,0.0,7.0,7.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method nilOpen - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Exclusive[A] shapeless.ops.nat.BoundedRange.Exclusive[A]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method nilLeftOpenRightClosed,1.0,0.0,7.0,7.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method nilLeftOpenRightClosed - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Exclusive[A] shapeless.ops.nat.BoundedRange.Inclusive[A]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method nilLeftClosedRightOpen,1.0,0.0,7.0,7.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method nilLeftClosedRightOpen - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Inclusive[A] shapeless.ops.nat.BoundedRange.Exclusive[A]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method nilLeftOpenRightSoft,1.0,0.0,6.0,6.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method nilLeftOpenRightSoft - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Exclusive[A] shapeless.ops.nat.BoundedRange.SoftInclusive[A]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method nilLeftClosedRightSoft,1.0,0.0,7.0,7.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method nilLeftClosedRightSoft - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Inclusive[A] shapeless.ops.nat.BoundedRange.SoftInclusive[A]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method leftOpenRightSoft,1.0,0.0,9.0,8.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method leftOpenRightSoft - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Exclusive[A] shapeless.ops.nat.BoundedRange.SoftInclusive[shapeless.Succ[B]]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method leftClosedRightSoft,1.0,0.0,9.0,8.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method leftClosedRightSoft - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Inclusive[A] shapeless.ops.nat.BoundedRange.SoftInclusive[shapeless.Succ[B]]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method closed,1.0,0.0,10.0,9.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method closed - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Inclusive[A] shapeless.ops.nat.BoundedRange.Inclusive[shapeless.Succ[B]]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method open,1.0,0.0,9.0,8.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method open - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Exclusive[A] shapeless.ops.nat.BoundedRange.Exclusive[shapeless.Succ[B]]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method leftOpenRightClosed,1.0,0.0,10.0,9.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method leftOpenRightClosed - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Exclusive[A] shapeless.ops.nat.BoundedRange.Inclusive[shapeless.Succ[B]]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method leftClosedRightOpen,1.0,0.0,9.0,8.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method leftClosedRightOpen - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Inclusive[A] shapeless.ops.nat.BoundedRange.Exclusive[shapeless.Succ[B]]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method openReverse,1.0,0.0,7.0,7.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method openReverse - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Exclusive[shapeless.Succ[A]] shapeless.ops.nat.BoundedRange.Exclusive[B]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method leftClosedRightOpenReverse,1.0,0.0,9.0,8.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method leftClosedRightOpenReverse - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Inclusive[shapeless.Succ[A]] shapeless.ops.nat.BoundedRange.Exclusive[B]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method leftOpenRightClosedReverse,1.0,0.0,7.0,7.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method leftOpenRightClosedReverse - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Exclusive[shapeless.Succ[A]] shapeless.ops.nat.BoundedRange.Inclusive[B]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method closedReverse,1.0,0.0,9.0,8.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - method closedReverse - <$anon: shapeless.ops.nat.BoundedRange[shapeless.ops.nat.BoundedRange.Inclusive[shapeless.Succ[A]] shapeless.ops.nat.BoundedRange.Inclusive[B]]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - object Bound - method inclusive,1.0,0.0,7.0,7.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - object Bound - method inclusive - <$anon: shapeless.ops.nat.BoundedRange.Inclusive[A]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - object Bound - method exclusive,1.0,0.0,7.0,7.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object nat - object BoundedRange - object Bound - method exclusive - <$anon: shapeless.ops.nat.BoundedRange.Exclusive[A]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - class ToInt - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object ToInt - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object ToInt - class Inst - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - object ToInt - macro method toIntSuccM,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object nat - class ToIntMacros - method applyImpl,4.0,7.0,15.0,10.0,0.0,0.0,9.0,9.0,32.0,2.0,1.0
HEAD,0,package shapeless - package ops - object nat - class ToIntMacros - method applyImpl - method count,4.0,7.0,7.0,7.0,0.0,0.0,9.0,9.0,32.0,2.0,1.0
HEAD,0,package shapeless - package ops - object traversable - trait FromTraversable - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object traversable - object FromTraversable - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object traversable - object FromTraversable - method hnilFromTraversable,2.0,0.0,4.0,4.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object traversable - object FromTraversable - method hnilFromTraversable - <$anon: shapeless.ops.traversable.FromTraversable[shapeless.HNil]> - method apply,2.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object traversable - object FromTraversable - method hlistFromTraversable,2.0,0.0,6.0,6.0,0.0,0.0,8.0,8.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object traversable - object FromTraversable - method hlistFromTraversable - <$anon: shapeless.ops.traversable.FromTraversable[OutH :: OutT]> - method apply,2.0,0.0,3.0,3.0,0.0,0.0,7.0,7.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object traversable - trait ToSizedHList - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object traversable - object ToSizedHList - method apply,1.0,0.0,4.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object traversable - object ToSizedHList - method instance,1.0,0.0,11.0,11.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object traversable - object ToSizedHList - method instance - <$anon: shapeless.ops.traversable.ToSizedHList[CC A N]> - method apply,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,1,package shapeless - trait Typeable - method cast,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Typeable - method describe,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Typeable - method toString,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityTypeable - macro method dfltTypeable,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Typeable - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Typeable - method unapply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,1,package shapeless - object Typeable - class ValueTypeable - method cast,2.0,0.0,3.0,3.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,3,package shapeless - object Typeable - method isValClass,1.0,0.0,10.0,10.0,0.0,0.0,17.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Typeable - <$anon: shapeless.Typeable[Any]> - method cast,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Typeable - <$anon: shapeless.Typeable[Any]> - method describe,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Typeable - <$anon: shapeless.Typeable[AnyVal]> - method cast,2.0,0.0,3.0,3.0,0.0,0.0,5.0,5.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Typeable - <$anon: shapeless.Typeable[AnyVal]> - method describe,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Typeable - <$anon: shapeless.Typeable[AnyRef]> - method cast,2.0,0.0,3.0,3.0,0.0,0.0,5.0,5.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Typeable - <$anon: shapeless.Typeable[AnyRef]> - method describe,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,2,package shapeless - object Typeable - method simpleTypeable,1.0,0.0,3.0,3.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Typeable - method namedSimpleTypeable,2.0,0.0,7.0,7.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,1,package shapeless - object Typeable - method namedSimpleTypeable - <$anon: shapeless.Typeable[T]> - method cast,2.0,0.0,3.0,3.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Typeable - method namedSimpleTypeable - <$anon: shapeless.Typeable[T]> - method describe,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Typeable - method partialFunctionTypeable,1.0,0.0,6.0,6.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Typeable - method partialFunctionTypeable - <$anon: shapeless.Typeable[T]> - method cast,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Typeable - method partialFunctionTypeable - <$anon: shapeless.Typeable[T]> - method describe,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Typeable - method valueSingletonTypeable,2.0,0.0,6.0,6.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Typeable - method valueSingletonTypeable - <$anon: shapeless.Typeable[T]> - method cast,2.0,0.0,2.0,2.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Typeable - method valueSingletonTypeable - <$anon: shapeless.Typeable[T]> - method describe,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,2,package shapeless - object Typeable - method referenceSingletonTypeable,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Typeable - method referenceSingletonTypeable,3.0,0.0,11.0,10.0,0.0,0.0,5.0,5.0,0.0,0.0,0.16666666666666663
HEAD,2,package shapeless - object Typeable - method referenceSingletonTypeable - <$anon: shapeless.Typeable[T]> - method cast,2.0,0.0,2.0,2.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,2,package shapeless - object Typeable - method referenceSingletonTypeable - <$anon: shapeless.Typeable[T]> - method describe,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Typeable - method referenceSingletonTypeable - <$anon: shapeless.Typeable[T]> - method writeObject,2.0,0.0,4.0,4.0,0.0,0.0,2.0,2.0,0.0,0.0,-1.0
HEAD,0,package shapeless - object Typeable - method intersectionTypeable,2.0,0.0,7.0,7.0,0.0,0.0,12.0,10.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Typeable - method intersectionTypeable - <$anon: shapeless.Typeable[T]> - method cast,2.0,0.0,3.0,3.0,0.0,0.0,6.0,6.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Typeable - method intersectionTypeable - <$anon: shapeless.Typeable[T]> - method describe,1.0,0.0,1.0,1.0,0.0,0.0,5.0,4.0,0.0,0.0,1.0
HEAD,1,package shapeless - object Typeable - method optionTypeable,5.0,3.0,12.0,12.0,0.0,0.0,7.0,7.0,1.0,0.0,1.0
HEAD,1,package shapeless - object Typeable - method optionTypeable - <$anon: shapeless.Typeable[Option[T]]> - method cast,5.0,3.0,8.0,8.0,0.0,0.0,6.0,6.0,1.0,0.0,1.0
HEAD,0,package shapeless - object Typeable - method optionTypeable - <$anon: shapeless.Typeable[Option[T]]> - method describe,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Typeable - method eitherTypeable,1.0,0.0,8.0,8.0,0.0,0.0,8.0,6.0,0.0,0.0,1.0
HEAD,1,package shapeless - object Typeable - method eitherTypeable - <$anon: shapeless.Typeable[Either[A B]]> - method cast,1.0,0.0,3.0,3.0,0.0,0.0,7.0,5.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Typeable - method eitherTypeable - <$anon: shapeless.Typeable[Either[A B]]> - method describe,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Typeable - method leftTypeable,3.0,0.0,11.0,11.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,1,package shapeless - object Typeable - method leftTypeable - <$anon: shapeless.Typeable[Left[A B]]> - method cast,3.0,0.0,7.0,7.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Typeable - method leftTypeable - <$anon: shapeless.Typeable[Left[A B]]> - method describe,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Typeable - method rightTypeable,3.0,0.0,11.0,11.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,1,package shapeless - object Typeable - method rightTypeable - <$anon: shapeless.Typeable[Right[A B]]> - method cast,3.0,0.0,7.0,7.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Typeable - method rightTypeable - <$anon: shapeless.Typeable[Right[A B]]> - method describe,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,2,package shapeless - object Typeable - method genTraversableTypeable,4.0,0.0,14.0,12.0,2.0,0.14285714285714285,7.0,7.0,0.0,0.0,1.0
HEAD,2,package shapeless - object Typeable - method genTraversableTypeable - <$anon: shapeless.Typeable[CC[T]]> - method cast,4.0,0.0,7.0,7.0,0.0,0.0,6.0,6.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Typeable - method genTraversableTypeable - <$anon: shapeless.Typeable[CC[T]]> - method describe,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,2,package shapeless - object Typeable - method genMapTypeable,4.0,0.0,12.0,12.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,1,package shapeless - object Typeable - method genMapTypeable - <$anon: shapeless.Typeable[M[K V]]> - method cast,4.0,0.0,7.0,7.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Typeable - method genMapTypeable - <$anon: shapeless.Typeable[M[K V]]> - method describe,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,2,package shapeless - object Typeable - method caseClassTypeable,1.0,0.0,2.0,2.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Typeable - method namedCaseClassTypeable,4.0,4.0,14.0,13.0,0.0,0.0,15.0,13.0,6.0,2.0,1.0
HEAD,1,package shapeless - object Typeable - method namedCaseClassTypeable - <$anon: shapeless.Typeable[T]> - method cast,4.0,4.0,7.0,7.0,0.0,0.0,9.0,9.0,6.0,2.0,1.0
HEAD,0,package shapeless - object Typeable - method namedCaseClassTypeable - <$anon: shapeless.Typeable[T]> - method describe,1.0,0.0,4.0,3.0,0.0,0.0,5.0,4.0,0.0,0.0,1.0
HEAD,1,package shapeless - object Typeable - <$anon: shapeless.Typeable[shapeless.HNil]> - method cast,2.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Typeable - <$anon: shapeless.Typeable[shapeless.HNil]> - method describe,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Typeable - method hlistTypeable,3.0,0.0,11.0,11.0,0.0,0.0,8.0,6.0,0.0,0.0,1.0
HEAD,1,package shapeless - object Typeable - method hlistTypeable - <$anon: shapeless.Typeable[H :: T]> - method cast,3.0,0.0,7.0,7.0,0.0,0.0,7.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Typeable - method hlistTypeable - <$anon: shapeless.Typeable[H :: T]> - method describe,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Typeable - <$anon: shapeless.Typeable[shapeless.CNil]> - method cast,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Typeable - <$anon: shapeless.Typeable[shapeless.CNil]> - method describe,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Typeable - method coproductTypeable,1.0,0.0,8.0,8.0,0.0,0.0,8.0,6.0,0.0,0.0,1.0
HEAD,1,package shapeless - object Typeable - method coproductTypeable - <$anon: shapeless.Typeable[H :+: T]> - method cast,1.0,0.0,3.0,3.0,0.0,0.0,7.0,5.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Typeable - method coproductTypeable - <$anon: shapeless.Typeable[H :+: T]> - method describe,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Typeable - method inlTypeable,3.0,0.0,11.0,11.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,1,package shapeless - object Typeable - method inlTypeable - <$anon: shapeless.Typeable[shapeless.Inl[H T]]> - method cast,3.0,0.0,7.0,7.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Typeable - method inlTypeable - <$anon: shapeless.Typeable[shapeless.Inl[H T]]> - method describe,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Typeable - method inrTypeable,3.0,0.0,11.0,11.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,1,package shapeless - object Typeable - method inrTypeable - <$anon: shapeless.Typeable[shapeless.Inr[H T]]> - method cast,3.0,0.0,7.0,7.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Typeable - method inrTypeable - <$anon: shapeless.Typeable[shapeless.Inr[H T]]> - method describe,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Typeable - method safeSimpleName,2.0,3.0,7.0,6.0,0.0,0.0,2.0,2.0,3.0,0.0,0.0
HEAD,0,package shapeless - object Typeable - method safeSimpleName,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait TypeCase - method unapply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object TypeCase - method apply,1.0,0.0,4.0,4.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - object TypeCase - method apply - <$anon: shapeless.TypeCase[T]> - method unapply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - object TypeCase - method apply - <$anon: shapeless.TypeCase[T]> - method toString,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,12,package shapeless - class TypeableMacros - method dfltTypeableImpl,16.0,16.0,57.0,47.0,3.0,0.06,41.0,20.0,130.0,9.0,0.7241379310344828
HEAD,4,package shapeless - class TypeableMacros - method mkCaseClassTypeable,7.0,1.0,36.0,29.0,5.0,0.14705882352941177,20.0,15.0,13.0,1.0,0.736842105263158
HEAD,0,package shapeless - class TypeableMacros - method mkCaseClassTypeable - method isUnsafeAccessor,3.0,0.0,15.0,15.0,2.0,0.11764705882352941,8.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - class TypeableMacros - method nameOf,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class TypeableMacros - method nameOf,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class Zipper - method right,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class Zipper - method left,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class Zipper - method first,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class Zipper - method last,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class Zipper - method rightBy,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class Zipper - method rightBy,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - class Zipper - method leftBy,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class Zipper - method leftBy,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - class Zipper - method rightTo,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class Zipper - method leftTo,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class Zipper - method up,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class Zipper - method down,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class Zipper - method root,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class Zipper - method get,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class Zipper - method put,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - class Zipper - method insert,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - class Zipper - method delete,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class Zipper - method reify,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Zipper - method apply,1.0,0.0,2.0,2.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Zipper - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Zipper - class Modifier - method modify,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait :+: - method eliminate,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - class Inl - method eliminate,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - class Inr - method eliminate,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait CNil - method impossible,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Coproduct - class MkCoproduct - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Coproduct - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Coproduct - method cpOps,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Coproduct - method unsafeMkCoproduct,1.0,0.0,2.0,2.0,0.0,0.0,6.0,5.0,0.0,0.0,1.0
HEAD,3,package shapeless - object Coproduct - method unsafeGet,3.0,3.0,4.0,4.0,0.0,0.0,3.0,2.0,8.0,2.0,1.0
HEAD,1,package shapeless - object Coproduct - macro method selectDynamic,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Coproduct - method runtimeInject,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package examples - object TypeClassesDemo - method showExtCtor,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package examples - object TypeClassesDemo - method showExtCtor - <$anon: shapeless.examples.TypeClassesDemoAux.Show[shapeless.examples.TypeClassesDemo.ExtCtor]> - method show,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemo - method showShow2Dep,1.0,0.0,3.0,3.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package examples - object TypeClassesDemo - method showShow2Dep - <$anon: shapeless.examples.TypeClassesDemoAux.Show[shapeless.examples.TypeClassesDemo.Show2Dep]> - method show,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemo - method main,1.0,0.0,52.0,49.0,3.0,0.057692307692307696,48.0,16.0,0.0,0.0,-1.0
HEAD,0,package shapeless - package examples - object TypeClassesDemoAux - object ExtInstances - method showOption,1.0,0.0,3.0,3.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package examples - object TypeClassesDemoAux - object ExtInstances - method showOption - <$anon: shapeless.examples.TypeClassesDemoAux.Show[Option[A]]> - method show,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package examples - object TypeClassesDemoAux - object ShowSyntax - class ShowSyntaxEnrich - method show,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemoAux - trait Show - method show,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package examples - object TypeClassesDemoAux - object Show - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemoAux - object Show - method instance,1.0,0.0,3.0,3.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package examples - object TypeClassesDemoAux - object Show - method instance - <$anon: shapeless.examples.TypeClassesDemoAux.Show[T]> - method show,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,1,package shapeless - package examples - object TypeClassesDemoAux - object Show - method showList,1.0,0.0,3.0,3.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,1,package shapeless - package examples - object TypeClassesDemoAux - object Show - method showList - <$anon: shapeless.examples.TypeClassesDemoAux.Show[List[A]]> - method show,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,1,package shapeless - package examples - object TypeClassesDemoAux - object Show - method deriveHCons,3.0,8.0,7.0,7.0,0.0,0.0,4.0,4.0,6.0,2.0,1.0
HEAD,1,package shapeless - package examples - object TypeClassesDemoAux - object Show - method deriveCCons,3.0,6.0,14.0,12.0,2.0,0.14285714285714285,6.0,4.0,8.0,2.0,1.0
HEAD,1,package shapeless - package examples - object TypeClassesDemoAux - object Show - method deriveInstance,1.0,0.0,5.0,5.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package examples - object TypeClassesDemoAux - trait Show2 - method show2,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemoAux - object Show2 - <$anon: shapeless.examples.TypeClassesDemoAux.Show2[Int]> - method show2,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemoAux - object Show2 - method deriveHNil,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package examples - object TypeClassesDemoAux - object Show2 - method deriveHNil - <$anon: shapeless.examples.TypeClassesDemoAux.Show2[shapeless.HNil]> - method show2,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemoAux - object Show2 - method deriveHCons,2.0,0.0,12.0,11.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package examples - object TypeClassesDemoAux - object Show2 - method deriveHCons - <$anon: shapeless.examples.TypeClassesDemoAux.Show2[H :: T]> - method show2,2.0,0.0,5.0,5.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package examples - object TypeClassesDemoAux - object Show2 - method deriveInstance,1.0,0.0,4.0,4.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package examples - object TypeClassesDemoAux - object Show2 - method deriveInstance - <$anon: shapeless.examples.TypeClassesDemoAux.Show2[F]> - method show2,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - trait Selector - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - trait LowPrioritySelector - method tlSelector,4.0,4.0,9.0,9.0,0.0,0.0,5.0,4.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object union - trait LowPrioritySelector - method tlSelector - <$anon: shapeless.ops.union.Selector[H :+: T K]> - method apply,4.0,4.0,4.0,4.0,0.0,0.0,4.0,3.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object union - object Selector - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object Selector - method hdSelector,3.0,5.0,8.0,8.0,0.0,0.0,4.0,3.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object union - object Selector - method hdSelector - <$anon: shapeless.ops.union.Selector[shapeless.labelled.FieldType[K V0] :+: T K]> - method apply,3.0,5.0,4.0,4.0,0.0,0.0,3.0,2.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object union - object Keys - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object Keys - method cnilKeys,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object union - object Keys - method cnilKeys - <$anon: shapeless.ops.union.Keys[U]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object Keys - method coproductKeys,1.0,0.0,5.0,5.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object union - object Keys - method coproductKeys - <$anon: shapeless.ops.union.Keys[shapeless.labelled.FieldType[K V] :+: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object Values - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object Values - method cnilValues,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object union - object Values - method cnilValues - <$anon: shapeless.ops.union.Values[U]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object Values - method coproductValues,3.0,4.0,8.0,8.0,0.0,0.0,6.0,5.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object union - object Values - method coproductValues - <$anon: shapeless.ops.union.Values[shapeless.labelled.FieldType[K V] :+: T]> - method apply,3.0,4.0,4.0,4.0,0.0,0.0,5.0,4.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object union - object Fields - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object Fields - <$anon: shapeless.ops.union.Fields[shapeless.CNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object Fields - method cconsFields,3.0,9.0,12.0,12.0,0.0,0.0,8.0,7.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object union - object Fields - method cconsFields - <$anon: shapeless.ops.union.Fields[shapeless.labelled.FieldType[K V] :+: T]> - method apply,3.0,9.0,5.0,5.0,0.0,0.0,7.0,6.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object union - trait UnzipFields - method keys,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - trait UnzipFields - method values,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object UnzipFields - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object UnzipFields - method cnilUnzipFields,1.0,0.0,7.0,7.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object union - object UnzipFields - method cnilUnzipFields - <$anon: shapeless.ops.union.UnzipFields[L]> - method keys,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object UnzipFields - method cnilUnzipFields - <$anon: shapeless.ops.union.UnzipFields[L]> - method values,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object UnzipFields - method cconsUnzipFields,3.0,4.0,14.0,14.0,0.0,0.0,8.0,7.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object union - object UnzipFields - method cconsUnzipFields - <$anon: shapeless.ops.union.UnzipFields[shapeless.labelled.FieldType[K V] :+: T]> - method keys,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object UnzipFields - method cconsUnzipFields - <$anon: shapeless.ops.union.UnzipFields[shapeless.labelled.FieldType[K V] :+: T]> - method values,3.0,4.0,5.0,5.0,0.0,0.0,5.0,4.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object union - object ToMap - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object ToMap - method cnilToMap,1.0,0.0,6.0,6.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object union - object ToMap - method cnilToMap - <$anon: shapeless.ops.union.ToMap[shapeless.CNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object ToMap - method csingleToMap,2.0,9.0,10.0,10.0,0.0,0.0,5.0,5.0,4.0,1.0,1.0
HEAD,0,package shapeless - package ops - object union - object ToMap - method csingleToMap - <$anon: shapeless.ops.union.ToMap[shapeless.labelled.FieldType[K V] :+: shapeless.CNil]> - method apply,2.0,9.0,3.0,3.0,0.0,0.0,4.0,4.0,4.0,1.0,1.0
HEAD,0,package shapeless - package ops - object union - object ToMap - method coproductToMap,4.0,12.0,14.0,14.0,0.0,0.0,15.0,9.0,14.0,4.0,1.0
HEAD,0,package shapeless - package ops - object union - object ToMap - method coproductToMap - <$anon: shapeless.ops.union.ToMap[shapeless.labelled.FieldType[HK HV] :+: TH :+: TT]> - method apply,4.0,12.0,4.0,4.0,0.0,0.0,14.0,8.0,14.0,4.0,1.0
HEAD,0,package shapeless - package ops - object union - object MapValues - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object MapValues - method cnilMapValues,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object union - object MapValues - method cnilMapValues - <$anon: shapeless.ops.union.MapValues[HF shapeless.CNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object union - object MapValues - method cconsMapValues,3.0,5.0,11.0,11.0,0.0,0.0,8.0,6.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object union - object MapValues - method cconsMapValues - <$anon: shapeless.ops.union.MapValues[HF shapeless.labelled.FieldType[K V] :+: T]> - method apply,3.0,5.0,4.0,4.0,0.0,0.0,7.0,5.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object tuple - trait IsComposite - method head,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait IsComposite - method tail,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object IsComposite - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object IsComposite - method isComposite,1.0,0.0,8.0,8.0,0.0,0.0,6.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object IsComposite - method isComposite - <$anon: shapeless.ops.tuple.IsComposite[P]> - method head,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object IsComposite - method isComposite - <$anon: shapeless.ops.tuple.IsComposite[P]> - method tail,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Prepend - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Prepend - method prepend,1.0,0.0,6.0,6.0,0.0,0.0,6.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object Prepend - method prepend - <$anon: shapeless.ops.tuple.Prepend[T U]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,5.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ReversePrepend - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ReversePrepend - method prepend,1.0,0.0,6.0,6.0,0.0,0.0,6.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object ReversePrepend - method prepend - <$anon: shapeless.ops.tuple.ReversePrepend[T U]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,5.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object At - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object At - method at,1.0,0.0,6.0,6.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object At - method at - <$anon: shapeless.ops.tuple.At[T N]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Last - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Last - method last,1.0,0.0,6.0,6.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object Last - method last - <$anon: shapeless.ops.tuple.Last[T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Init - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Init - method init,1.0,0.0,6.0,6.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object Init - method init - <$anon: shapeless.ops.tuple.Init[T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Selector - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Selector - method select,1.0,0.0,5.0,5.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object Selector - method select - <$anon: shapeless.ops.tuple.Selector[T U]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Filter - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Filter - method filterTuple,1.0,0.0,5.0,5.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object Filter - method filterTuple - <$anon: shapeless.ops.tuple.Filter[T U]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object FilterNot - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object FilterNot - method filterNotTuple,1.0,0.0,5.0,5.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object FilterNot - method filterNotTuple - <$anon: shapeless.ops.tuple.FilterNot[T U]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Remove - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Remove - method removeTuple,2.0,5.0,5.0,5.0,0.0,0.0,7.0,5.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object Remove - method removeTuple - <$anon: shapeless.ops.tuple.Remove[T U]> - method apply,2.0,5.0,1.0,1.0,0.0,0.0,6.0,4.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object RemoveAll - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object RemoveAll - method removeAllTuple,2.0,5.0,6.0,6.0,0.0,0.0,8.0,6.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object RemoveAll - method removeAllTuple - <$anon: shapeless.ops.tuple.RemoveAll[T ST]> - method apply,2.0,5.0,1.0,1.0,0.0,0.0,7.0,5.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object Replacer - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Replacer - method replaceTuple,2.0,5.0,5.0,5.0,0.0,0.0,7.0,6.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object Replacer - method replaceTuple - <$anon: shapeless.ops.tuple.Replacer[T U V]> - method apply,2.0,5.0,1.0,1.0,0.0,0.0,6.0,5.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object ReplaceAt - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ReplaceAt - method replaceTuple,2.0,5.0,5.0,5.0,0.0,0.0,7.0,6.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object ReplaceAt - method replaceTuple - <$anon: shapeless.ops.tuple.ReplaceAt[T N U]> - method apply,2.0,5.0,1.0,1.0,0.0,0.0,6.0,5.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object Modifier - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Modifier - method modifyTuple,2.0,5.0,5.0,5.0,0.0,0.0,7.0,6.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object Modifier - method modifyTuple - <$anon: shapeless.ops.tuple.Modifier[T U V]> - method apply,2.0,5.0,1.0,1.0,0.0,0.0,6.0,5.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object ModifierAt - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ModifierAt - method modifyTuple,2.0,5.0,12.0,11.0,0.0,0.0,7.0,6.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object ModifierAt - method modifyTuple - <$anon: shapeless.ops.tuple.ModifierAt[T N U V]> - method apply,2.0,5.0,4.0,4.0,0.0,0.0,6.0,5.0,6.0,2.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object Take - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Take - method tupleTake,1.0,0.0,6.0,6.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object Take - method tupleTake - <$anon: shapeless.ops.tuple.Take[T N]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Drop - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Drop - method tupleDrop,1.0,0.0,6.0,6.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object Drop - method tupleDrop - <$anon: shapeless.ops.tuple.Drop[T N]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Split - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Split - method tupleSplit,2.0,5.0,11.0,10.0,0.0,0.0,9.0,6.0,9.0,2.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object Split - method tupleSplit - <$anon: shapeless.ops.tuple.Split[T N]> - method apply,2.0,5.0,1.0,1.0,0.0,0.0,8.0,5.0,9.0,2.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object ReverseSplit - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ReverseSplit - method tupleReverseSplit,2.0,5.0,11.0,10.0,0.0,0.0,9.0,6.0,9.0,2.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object ReverseSplit - method tupleReverseSplit - <$anon: shapeless.ops.tuple.ReverseSplit[T N]> - method apply,2.0,5.0,1.0,1.0,0.0,0.0,8.0,5.0,9.0,2.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object SplitLeft - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object SplitLeft - method tupleSplitLeft,2.0,5.0,11.0,10.0,0.0,0.0,9.0,6.0,9.0,2.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object SplitLeft - method tupleSplitLeft - <$anon: shapeless.ops.tuple.SplitLeft[T U]> - method apply,2.0,5.0,1.0,1.0,0.0,0.0,8.0,5.0,9.0,2.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object ReverseSplitLeft - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ReverseSplitLeft - method tupleReverseSplitLeft,2.0,5.0,11.0,10.0,0.0,0.0,9.0,6.0,9.0,2.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object ReverseSplitLeft - method tupleReverseSplitLeft - <$anon: shapeless.ops.tuple.ReverseSplitLeft[T U]> - method apply,2.0,5.0,1.0,1.0,0.0,0.0,8.0,5.0,9.0,2.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object SplitRight - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object SplitRight - method tupleSplitRight,2.0,5.0,11.0,10.0,0.0,0.0,9.0,6.0,9.0,2.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object SplitRight - method tupleSplitRight - <$anon: shapeless.ops.tuple.SplitRight[T U]> - method apply,2.0,5.0,1.0,1.0,0.0,0.0,8.0,5.0,9.0,2.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object ReverseSplitRight - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ReverseSplitRight - method tupleReverseSplitRight,2.0,5.0,11.0,10.0,0.0,0.0,9.0,6.0,9.0,2.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object ReverseSplitRight - method tupleReverseSplitRight - <$anon: shapeless.ops.tuple.ReverseSplitRight[T U]> - method apply,2.0,5.0,1.0,1.0,0.0,0.0,8.0,5.0,9.0,2.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object Reverse - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Reverse - method tupleReverseAux,1.0,0.0,6.0,6.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object Reverse - method tupleReverseAux - <$anon: shapeless.ops.tuple.Reverse[T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Mapper - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Mapper - method mapper,1.0,0.0,6.0,6.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object Mapper - method mapper - <$anon: shapeless.ops.tuple.Mapper[T P]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object FlatMapper - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object FlatMapper - method mapper,1.0,0.0,6.0,6.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object FlatMapper - method mapper - <$anon: shapeless.ops.tuple.FlatMapper[T P]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ConstMapper - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ConstMapper - method mapper,1.0,0.0,6.0,6.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object ConstMapper - method mapper - <$anon: shapeless.ops.tuple.ConstMapper[T C]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait MapFolder - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object MapFolder - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object MapFolder - method mapper,1.0,0.0,5.0,5.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object MapFolder - method mapper - <$anon: shapeless.ops.tuple.MapFolder[T R P]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object LeftFolder - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object LeftFolder - method folder,1.0,0.0,6.0,6.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object LeftFolder - method folder - <$anon: shapeless.ops.tuple.LeftFolder[T U P]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object RightFolder - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object RightFolder - method folder,1.0,0.0,6.0,6.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object RightFolder - method folder - <$anon: shapeless.ops.tuple.RightFolder[T U P]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object LeftReducer - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object LeftReducer - method folder,1.0,0.0,6.0,6.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object LeftReducer - method folder - <$anon: shapeless.ops.tuple.LeftReducer[T P]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object RightReducer - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object RightReducer - method folder,1.0,0.0,6.0,6.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object RightReducer - method folder - <$anon: shapeless.ops.tuple.RightReducer[T P]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Transposer - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Transposer - method transpose,1.0,0.0,12.0,11.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object Transposer - method transpose - <$anon: shapeless.ops.tuple.Transposer[T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ZipApply - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ZipApply - method zipApply,1.0,0.0,11.0,10.0,0.0,0.0,8.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object ZipApply - method zipApply - <$anon: shapeless.ops.tuple.ZipApply[FT AT]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,7.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ZipOne - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ZipOne - method zipOne,1.0,0.0,13.0,12.0,0.0,0.0,6.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object ZipOne - method zipOne - <$anon: shapeless.ops.tuple.ZipOne[HT TT]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,5.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ZipConst - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ZipConst - method zipConst,1.0,0.0,6.0,6.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object ZipConst - method zipConst - <$anon: shapeless.ops.tuple.ZipConst[T C]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ZipWithIndex - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ZipWithIndex - method zipConst,1.0,0.0,6.0,6.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object ZipWithIndex - method zipConst - <$anon: shapeless.ops.tuple.ZipWithIndex[T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Unifier - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Unifier - method unifier,1.0,0.0,6.0,6.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object Unifier - method unifier - <$anon: shapeless.ops.tuple.Unifier[T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object SubtypeUnifier - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object SubtypeUnifier - method subtypeUnifier,1.0,0.0,6.0,6.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object SubtypeUnifier - method subtypeUnifier - <$anon: shapeless.ops.tuple.SubtypeUnifier[T B]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Length - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Length - method length,1.0,0.0,6.0,6.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object Length - method length - <$anon: shapeless.ops.tuple.Length[T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ToTraversable - method apply,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ToTraversable - method toTraversableNothing,1.0,0.0,5.0,5.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ToTraversable - method toTraversableNothing - <$anon: shapeless.ops.tuple.ToTraversable[Unit M]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,-1.0
HEAD,1,package shapeless - package ops - object tuple - object ToTraversable - method toTraversable,1.0,0.0,6.0,6.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object ToTraversable - method toTraversable - <$anon: shapeless.ops.tuple.ToTraversable[T M]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ToList - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ToList - method toList,1.0,0.0,6.0,6.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object ToList - method toList - <$anon: shapeless.ops.tuple.ToList[T Lub]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ToList - method toListNothing,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ToArray - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ToArray - method toArray,1.0,0.0,6.0,6.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object ToArray - method toArray - <$anon: shapeless.ops.tuple.ToArray[T Lub]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ToArray - method toArrayNothing,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ToSized - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ToSized - method toSized,1.0,0.0,6.0,6.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object ToSized - method toSized - <$anon: shapeless.ops.tuple.ToSized[T M]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ToCoproduct - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ToCoproduct - method hlistToCoproduct,1.0,0.0,7.0,7.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ToSum - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object ToSum - method hlistToSum,1.0,0.0,7.0,7.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Collect - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Collect - method collect,1.0,0.0,6.0,6.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object Collect - method collect - <$anon: shapeless.ops.tuple.Collect[T P]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Permutations - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Permutations - method permutations,1.0,0.0,7.0,7.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object Permutations - method permutations - <$anon: shapeless.ops.tuple.Permutations[T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,4.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object RotateLeft - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object RotateLeft - method tupleRotateLeft,1.0,0.0,6.0,6.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object RotateLeft - method tupleRotateLeft - <$anon: shapeless.ops.tuple.RotateLeft[T N]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object RotateRight - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object RotateRight - method tupleRotateRight,1.0,0.0,6.0,6.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object RotateRight - method tupleRotateRight - <$anon: shapeless.ops.tuple.RotateRight[T N]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object LeftScanner - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object LeftScanner - method scanner,1.0,0.0,9.0,9.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object LeftScanner - method scanner - <$anon: shapeless.ops.tuple.LeftScanner[T In P]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object RightScanner - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object RightScanner - method scanner,1.0,0.0,9.0,9.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object RightScanner - method scanner - <$anon: shapeless.ops.tuple.RightScanner[T In P]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Fill - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Fill - method fill1,1.0,0.0,6.0,6.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object Fill - method fill1 - <$anon: shapeless.ops.tuple.Fill[N A]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Fill - method fill2,1.0,0.0,6.0,6.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object Fill - method fill2 - <$anon: shapeless.ops.tuple.Fill[(N1  N2) A]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Patcher - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Patcher - method tuplePatch,1.0,0.0,9.0,9.0,0.0,0.0,5.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object Patcher - method tuplePatch - <$anon: shapeless.ops.tuple.Patcher[N M T InT]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,4.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Grouper - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Grouper - method tupleGrouper,1.0,0.0,9.0,8.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object Grouper - method tupleGrouper - <$anon: shapeless.ops.tuple.Grouper[T N Step]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object PaddedGrouper - method apply,1.0,0.0,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object PaddedGrouper - method tuplePaddedGrouper,1.0,0.0,10.0,9.0,0.0,0.0,5.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object PaddedGrouper - method tuplePaddedGrouper - <$anon: shapeless.ops.tuple.PaddedGrouper[T N Step Pad]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,4.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - trait Align - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object tuple - object Align - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object Align - method tupleAlign,1.0,0.0,10.0,9.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object tuple - object Align - method tupleAlign - <$anon: T => U> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Generic1 - method to,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Generic1 - method from,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Generic1 - method mkFrr,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Generic1 - macro method mkGeneric10,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Generic1 - macro method mkGeneric11,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Generic1 - method unsafeInstance,1.0,0.0,8.0,8.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Generic1 - method unsafeInstance - <$anon: shapeless.Generic1[F FR]> - method mkFrr,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Generic1 - method unsafeInstance - <$anon: shapeless.Generic1[F FR]> - method to,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Generic1 - method unsafeInstance - <$anon: shapeless.Generic1[F FR]> - method from,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Generic10 - macro method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait IsHCons1 - method pack,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait IsHCons1 - method unpack,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait IsHCons1 - method mkFhh,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait IsHCons1 - method mkFtt,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object IsHCons1 - macro method mkIsHCons10,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object IsHCons1 - macro method mkIsHCons11,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object IsHCons1 - macro method mkIsHCons12,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object IsHCons1 - macro method mkIsHCons13,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object IsHCons1 - method unsafeInstance,1.0,0.0,14.0,14.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - object IsHCons1 - method unsafeInstance - <$anon: shapeless.IsHCons1[L FH FT]> - method mkFhh,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object IsHCons1 - method unsafeInstance - <$anon: shapeless.IsHCons1[L FH FT]> - method mkFtt,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object IsHCons1 - method unsafeInstance - <$anon: shapeless.IsHCons1[L FH FT]> - method pack,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object IsHCons1 - method unsafeInstance - <$anon: shapeless.IsHCons1[L FH FT]> - method unpack,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait IsHCons10 - macro method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait IsCCons1 - method pack,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait IsCCons1 - method unpack,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait IsCCons1 - method mkFhh,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait IsCCons1 - method mkFtt,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object IsCCons1 - macro method mkIsCCons10,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object IsCCons1 - macro method mkIsCCons11,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object IsCCons1 - macro method mkIsCCons12,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object IsCCons1 - macro method mkIsCCons13,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object IsCCons1 - method unsafeInstance,1.0,0.0,14.0,14.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - object IsCCons1 - method unsafeInstance - <$anon: shapeless.IsCCons1[L FH FT]> - method mkFhh,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object IsCCons1 - method unsafeInstance - <$anon: shapeless.IsCCons1[L FH FT]> - method mkFtt,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object IsCCons1 - method unsafeInstance - <$anon: shapeless.IsCCons1[L FH FT]> - method pack,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object IsCCons1 - method unsafeInstance - <$anon: shapeless.IsCCons1[L FH FT]> - method unpack,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait IsCCons10 - macro method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Split1 - method pack,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Split1 - method unpack,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Split1 - method mkFoo,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Split1 - method mkFii,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Split1 - macro method mkSplit10,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Split1 - macro method mkSplit11,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Split1 - macro method mkSplit12,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Split1 - macro method mkSplit13,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Split1 - method instance,1.0,0.0,9.0,9.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Split1 - method instance - <$anon: shapeless.Split1[[x]O0[I0[x]] FO FI]> - method mkFoo,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Split1 - method instance - <$anon: shapeless.Split1[[x]O0[I0[x]] FO FI]> - method mkFii,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Split1 - method instance - <$anon: shapeless.Split1[[x]O0[I0[x]] FO FI]> - method pack,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Split1 - method instance - <$anon: shapeless.Split1[[x]O0[I0[x]] FO FI]> - method unpack,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Split10 - macro method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class Generic1Macros - method mkGeneric1Impl,5.0,3.0,11.0,11.0,0.0,0.0,10.0,9.0,39.0,1.0,0.33333333333333337
HEAD,2,package shapeless - class Generic1Macros - method mkProductGeneric1,3.0,5.0,14.0,10.0,0.0,0.0,10.0,6.0,12.0,4.0,1.0
HEAD,2,package shapeless - class Generic1Macros - method mkCoproductGeneric1,1.0,0.0,20.0,15.0,0.0,0.0,15.0,11.0,0.0,0.0,1.0
HEAD,0,package shapeless - class Generic1Macros - method mkCoproductGeneric1 - method mkCoproductCases,1.0,0.0,7.0,6.0,0.0,0.0,6.0,6.0,0.0,0.0,1.0
HEAD,0,package shapeless - class IsHCons1Macros - method mkIsHCons1Impl,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class IsHCons1Macros - method mkPackUnpack,1.0,0.0,4.0,4.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - class IsCCons1Macros - method mkIsCCons1Impl,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class IsCCons1Macros - method mkPackUnpack,1.0,0.0,16.0,8.0,0.0,0.0,5.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait IsCons1Macros - method isCons1TC,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait IsCons1Macros - method consTpe,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,2,package shapeless - trait IsCons1Macros - method mkPackUnpack,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,2,package shapeless - trait IsCons1Macros - method mkIsCons1,7.0,5.0,25.0,20.0,0.0,0.0,31.0,15.0,85.0,8.0,0.49999999999999994
HEAD,0,package shapeless - class Split1Macros - method mkSplit1Impl,9.0,10.0,39.0,34.0,0.0,0.0,46.0,26.0,76.0,9.0,0.8888888888888888
HEAD,0,package shapeless - class Split1Macros - method mkSplit1Impl - method balanced,1.0,0.0,6.0,6.0,0.0,0.0,9.0,7.0,0.0,0.0,1.0
HEAD,0,package examples - object RouterExample - trait Router - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object RouterExample - trait Router - method map,1.0,0.0,4.0,4.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package examples - object RouterExample - trait Router - method map - <$anon: shapeless.examples.RouterExample.Router[B]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - object RouterExample - trait Router - method map - <$anon: shapeless.examples.RouterExample.Router[B]> - method toString,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object RouterExample - trait Router - method orElse,1.0,0.0,4.0,4.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - object RouterExample - trait Router - method orElse - <$anon: shapeless.examples.RouterExample.Router[B]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object RouterExample - trait Router - method orElse - <$anon: shapeless.examples.RouterExample.Router[B]> - method toString,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object RouterExample - trait Router - method :+:,1.0,0.0,6.0,6.0,0.0,0.0,11.0,7.0,0.0,0.0,1.0
HEAD,0,package examples - object RouterExample - trait Router - method :+: - <$anon: shapeless.examples.RouterExample.Router[adjoin.Out]> - method apply,1.0,0.0,3.0,3.0,0.0,0.0,10.0,6.0,0.0,0.0,1.0
HEAD,0,package examples - object RouterExample - method matchString,2.0,0.0,4.0,4.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - object RouterExample - method matchString - <$anon: shapeless.examples.RouterExample.Router[String]> - method apply,2.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object RouterExample - method matchString - <$anon: shapeless.examples.RouterExample.Router[String]> - method toString,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class Sized - method toString,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class Sized - method equals,3.0,4.0,5.0,5.0,0.0,0.0,1.0,1.0,5.0,1.0,1.0
HEAD,0,package shapeless - class Sized - method hashCode,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class SizedOps - method underlying,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class SizedOps - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class SizedOps - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - class SizedOps - method at,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class SizedOps - method at,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - class SizedOps - method head,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class SizedOps - method tail,1.0,0.0,1.0,1.0,0.0,0.0,2.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class SizedOps - method take,1.0,0.0,1.0,1.0,0.0,0.0,4.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - class SizedOps - method take,1.0,0.0,1.0,1.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - class SizedOps - method drop,1.0,0.0,1.0,1.0,0.0,0.0,4.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - class SizedOps - method drop,1.0,0.0,1.0,1.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - class SizedOps - method splitAt,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - class SizedOps - method splitAt,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - class SizedOps - method +:,1.0,0.0,6.0,6.0,0.0,0.0,6.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - class SizedOps - method :+,1.0,0.0,6.0,6.0,0.0,0.0,6.0,5.0,0.0,0.0,1.0
HEAD,1,package shapeless - class SizedOps - method ++,1.0,0.0,7.0,6.0,0.0,0.0,5.0,4.0,0.0,0.0,1.0
HEAD,1,package shapeless - class SizedOps - method map,1.0,0.0,5.0,5.0,0.0,0.0,6.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - class SizedOps - method toHList,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class SizedOps - method tupled,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPrioritySized - method sizedToRepr,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - object Sized - method sizedOps,1.0,0.0,3.0,3.0,0.0,0.0,2.0,1.0,0.0,0.0,1.0
HEAD,1,package shapeless - object Sized - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Sized - method apply,1.0,0.0,3.0,3.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,1,package shapeless - object Sized - method wrap,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Sized - method unapplySeq,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object AdditiveCollection - method linearSeqAdditiveCollection,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object AdditiveCollection - method vectorAdditiveCollection,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object AdditiveCollection - method arrayAdditiveCollection,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object AdditiveCollection - method stringAdditiveCollection,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object AdditiveCollection - method listAdditiveCollection,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object AdditiveCollection - method streamAdditiveCollection,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object AdditiveCollection - method queueAdditiveCollection,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object AdditiveCollection - method defaultAdditiveCollection,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object DefaultToIndexedSeq - method defaultInstance,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object DefaultToIndexedSeq - method explicitInstance,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait OrElse - method fold,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait OrElse - method unify,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - class Primary - method fold,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - class Secondary - method fold,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object OrElse - method primary,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class OrElse0 - method secondary,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object GCDExamples - object GCD - method gcd,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package examples - object GCDExamples - object GCD - method gcd0,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object GCDExamples - object GCD - method gcd1,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object GCDExamples - object GCD - method gcd2,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ProductTypeClass - method product,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ProductTypeClass - method emptyProduct,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ProductTypeClass - method project,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait ProductTypeClassCompanion - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ProductTypeClassCompanion - method deriveHNil,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait ProductTypeClassCompanion - method deriveHCons,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait ProductTypeClassCompanion - method deriveInstance,1.0,0.0,2.0,2.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait LabelledProductTypeClass - method product,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LabelledProductTypeClass - method emptyProduct,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LabelledProductTypeClass - method project,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait LabelledProductTypeClassCompanion - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LabelledProductTypeClassCompanion - class Wrap - method label,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LabelledProductTypeClassCompanion - class Wrap - method unlabel,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LabelledProductTypeClassCompanion - class Instance - method label,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LabelledProductTypeClassCompanion - class Instance - method unlabel,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait LabelledProductTypeClassCompanion - method deriveHNil,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait LabelledProductTypeClassCompanion - method deriveHCons,1.0,0.0,6.0,6.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait LabelledProductTypeClassCompanion - method deriveInstance,1.0,0.0,8.0,8.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait TypeClass - method coproduct,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait TypeClass - method emptyCoproduct,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait TypeClassCompanion - method deriveCNil,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait TypeClassCompanion - method deriveCCons,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LabelledTypeClass - method coproduct,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LabelledTypeClass - method emptyCoproduct,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait LabelledTypeClassCompanion - method deriveCNil,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,1,package shapeless - trait LabelledTypeClassCompanion - method deriveCCons,1.0,0.0,6.0,6.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package <empty> - package shapeless - package object shapeless - method unexpected,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package <empty> - package shapeless - package object shapeless - method neq,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package <empty> - package shapeless - package object shapeless - method neqAmbig1,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - package shapeless - package object shapeless - method neqAmbig2,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - package shapeless - package object shapeless - method nsub,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package <empty> - package shapeless - package object shapeless - method nsubAmbig1,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - package shapeless - package object shapeless - method nsubAmbig2,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - package shapeless - package object shapeless - trait DepFn0 - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - package shapeless - package object shapeless - trait DepFn1 - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - package shapeless - package object shapeless - trait DepFn2 - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package <empty> - package shapeless - package object shapeless - class ApplyEverything - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package <empty> - package shapeless - package object shapeless - method everything,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package <empty> - package shapeless - package object shapeless - method everywhere,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package <empty> - package shapeless - package object shapeless - macro method cachedImplicit,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,4,package <empty> - package shapeless - class CachedImplicitMacros - method cachedImplicitImpl,5.0,0.0,49.0,41.0,2.0,0.046511627906976744,14.0,11.0,0.0,0.0,0.7142857142857143
HEAD,2,package <empty> - package shapeless - class CachedImplicitMacros - method cachedImplicitImpl - <$anon: analyzer.ImplicitSearch> - method searchImplicit,2.0,0.0,12.0,12.0,0.0,0.0,6.0,6.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - trait Inject - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Inject - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Inject - method tlInject,1.0,0.0,3.0,3.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Inject - method tlInject - <$anon: shapeless.ops.coproduct.Inject[H :+: T I]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Inject - method hdInject,1.0,0.0,3.0,3.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Inject - method hdInject - <$anon: shapeless.ops.coproduct.Inject[H :+: T HH]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait Selector - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object coproduct - object Selector - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object coproduct - object Selector - method hdSelector,3.0,5.0,6.0,6.0,0.0,0.0,4.0,3.0,8.0,2.0,1.0
HEAD,1,package shapeless - package ops - object coproduct - object Selector - method hdSelector - <$anon: shapeless.ops.coproduct.Selector[H :+: T H]> - method apply,3.0,5.0,4.0,4.0,0.0,0.0,3.0,2.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Selector - method tlSelector,3.0,3.0,6.0,6.0,0.0,0.0,4.0,3.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Selector - method tlSelector - <$anon: shapeless.ops.coproduct.Selector[H :+: T S]> - method apply,3.0,3.0,4.0,4.0,0.0,0.0,3.0,2.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object At - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object At - method coproductAt0,3.0,5.0,7.0,7.0,0.0,0.0,3.0,3.0,5.0,1.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object At - method coproductAt0 - <$anon: shapeless.ops.coproduct.At[H :+: T shapeless.Nat._0]> - method apply,3.0,5.0,4.0,4.0,0.0,0.0,2.0,2.0,5.0,1.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object At - method coproductAtN,3.0,3.0,9.0,9.0,0.0,0.0,4.0,3.0,7.0,1.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object At - method coproductAtN - <$anon: shapeless.ops.coproduct.At[H :+: T shapeless.Succ[N]]> - method apply,3.0,3.0,4.0,4.0,0.0,0.0,3.0,2.0,7.0,1.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - trait IndexOf - method value,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object IndexOf - method apply,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object IndexOf - method matched,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object IndexOf - method matched - <$anon: shapeless.ops.coproduct.IndexOf[A :+: C A]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object IndexOf - method notMatched,1.0,0.0,8.0,8.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object IndexOf - method notMatched - <$anon: shapeless.ops.coproduct.IndexOf[H :+: C A]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait Partition - method filter,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait Partition - method filterNot,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait Partition - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait Partition - method coproduct,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Partition - method apply,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Partition - method cnilPartition,1.0,0.0,5.0,5.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Partition - method cnilPartition - <$anon: shapeless.ops.coproduct.Partition[shapeless.CNil U]> - method coproduct,1.0,0.0,1.0,1.0,0.0,0.0,2.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Partition - method coproductPartition_Match,5.0,7.0,13.0,13.0,0.0,0.0,11.0,5.0,16.0,4.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Partition - method coproductPartition_Match - <$anon: shapeless.ops.coproduct.Partition[H :+: T H]> - method coproduct,5.0,7.0,7.0,7.0,0.0,0.0,10.0,4.0,16.0,4.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Partition - method coproductPartition_NonMatch,6.0,8.0,14.0,14.0,0.0,0.0,18.0,5.0,24.0,5.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Partition - method coproductPartition_NonMatch - <$anon: shapeless.ops.coproduct.Partition[H :+: T U]> - method coproduct,6.0,8.0,8.0,8.0,0.0,0.0,17.0,4.0,24.0,5.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Filter - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Filter - method coproductFilter,1.0,0.0,6.0,6.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Filter - method coproductFilter - <$anon: shapeless.ops.coproduct.Filter[C U]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object FilterNot - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object FilterNot - method coproductFilterNot,1.0,0.0,6.0,6.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object FilterNot - method coproductFilterNot - <$anon: shapeless.ops.coproduct.FilterNot[C U]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait Remove - method inverse,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object coproduct - trait Remove - method coproduct,3.0,4.0,4.0,4.0,0.0,0.0,5.0,4.0,8.0,2.0,1.0
HEAD,1,package shapeless - package ops - object coproduct - trait LowPriorityRemove - method removeTail,8.0,8.0,17.0,17.0,0.0,0.0,23.0,8.0,32.0,7.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - trait LowPriorityRemove - method removeTail - <$anon: shapeless.ops.coproduct.Remove[H :+: T U]> - method apply,5.0,8.0,7.0,7.0,0.0,0.0,10.0,6.0,16.0,4.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - trait LowPriorityRemove - method removeTail - <$anon: shapeless.ops.coproduct.Remove[H :+: T U]> - method inverse,4.0,8.0,5.0,5.0,0.0,0.0,12.0,6.0,16.0,3.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Remove - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object coproduct - object Remove - method removeHead,5.0,6.0,11.0,11.0,0.0,0.0,9.0,6.0,16.0,4.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Remove - method removeHead - <$anon: shapeless.ops.coproduct.Remove[H :+: T H]> - method apply,3.0,6.0,4.0,4.0,0.0,0.0,4.0,3.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Remove - method removeHead - <$anon: shapeless.ops.coproduct.Remove[H :+: T H]> - method inverse,3.0,4.0,4.0,4.0,0.0,0.0,4.0,3.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - trait RemoveLast - method inverse,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait LowPriorityRemoveLast - method fromRemove,1.0,0.0,6.0,6.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - trait LowPriorityRemoveLast - method fromRemove - <$anon: shapeless.ops.coproduct.RemoveLast[C I]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait LowPriorityRemoveLast - method fromRemove - <$anon: shapeless.ops.coproduct.RemoveLast[C I]> - method inverse,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait LowPriorityRemoveLast - method toRemove,1.0,0.0,6.0,6.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - trait LowPriorityRemoveLast - method toRemove - <$anon: shapeless.ops.coproduct.Remove[C I]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait LowPriorityRemoveLast - method toRemove - <$anon: shapeless.ops.coproduct.Remove[C I]> - method inverse,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait LowPriorityRemoveLast - method removeLastHead,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object RemoveLast - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object RemoveLast - method removeLastTail,1.0,0.0,3.0,3.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object FlatMap - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object FlatMap - method cnilFlatMap,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object FlatMap - method cnilFlatMap - <$anon: shapeless.ops.coproduct.FlatMap[shapeless.CNil F]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object FlatMap - method cpFlatMap,3.0,4.0,12.0,11.0,0.0,0.0,7.0,6.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object FlatMap - method cpFlatMap - <$anon: shapeless.ops.coproduct.FlatMap[H :+: T F]> - method apply,3.0,4.0,4.0,4.0,0.0,0.0,6.0,5.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Mapper - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Mapper - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Mapper - method cnilMapper,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Mapper - method cnilMapper - <$anon: shapeless.ops.coproduct.Mapper[F shapeless.CNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Mapper - method cpMapper,3.0,4.0,9.0,9.0,0.0,0.0,7.0,6.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Mapper - method cpMapper - <$anon: shapeless.ops.coproduct.Mapper[F H :+: T]> - method apply,3.0,4.0,4.0,4.0,0.0,0.0,6.0,5.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Unifier - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Unifier - method lstUnifier,2.0,1.0,7.0,7.0,0.0,0.0,2.0,2.0,4.0,1.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Unifier - method lstUnifier - <$anon: shapeless.ops.coproduct.Unifier[H :+: shapeless.CNil]> - method apply,2.0,1.0,3.0,3.0,0.0,0.0,1.0,1.0,4.0,1.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Unifier - method cpUnifier,3.0,4.0,9.0,9.0,0.0,0.0,6.0,5.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Unifier - method cpUnifier - <$anon: shapeless.ops.coproduct.Unifier[H1 :+: H2 :+: T]> - method apply,3.0,4.0,4.0,4.0,0.0,0.0,5.0,4.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Folder - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Folder - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Folder - method mkFolder,1.0,0.0,6.0,6.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Folder - method mkFolder - <$anon: shapeless.ops.coproduct.Folder[F C]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object LeftFolder - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object LeftFolder - method hdLeftFolder,1.0,0.0,5.0,5.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object LeftFolder - method hdLeftFolder - <$anon: shapeless.ops.coproduct.LeftFolder[H :+: shapeless.CNil In F]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object LeftFolder - method tlLeftFolder,3.0,3.0,9.0,9.0,0.0,0.0,5.0,4.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object LeftFolder - method tlLeftFolder - <$anon: shapeless.ops.coproduct.LeftFolder[H :+: T In HF]> - method apply,3.0,3.0,5.0,5.0,0.0,0.0,4.0,3.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipConst - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipConst - method cnilZipConst,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipConst - method cnilZipConst - <$anon: shapeless.ops.coproduct.ZipConst[Z shapeless.CNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipConst - method cpZipConst,3.0,6.0,8.0,8.0,0.0,0.0,7.0,6.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipConst - method cpZipConst - <$anon: shapeless.ops.coproduct.ZipConst[Z VH :+: VT]> - method apply,3.0,6.0,4.0,4.0,0.0,0.0,6.0,5.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipWithKeys - <$anon: shapeless.ops.coproduct.ZipWithKeys[shapeless.HList shapeless.Coproduct]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object coproduct - object ZipWithKeys - method apply,1.0,0.0,3.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipWithKeys - method cnilZipWithKeys,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipWithKeys - method cconsZipWithKeys,1.0,0.0,4.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipWithIndex - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipWithIndex - method cpZipWithIndex,1.0,0.0,5.0,5.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipWithIndex - method cpZipWithIndex - <$anon: shapeless.ops.coproduct.ZipWithIndex[C]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipWithIndex - object Impl - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipWithIndex - object Impl - method singleZipWithIndexImpl,1.0,0.0,5.0,5.0,0.0,0.0,6.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipWithIndex - object Impl - method singleZipWithIndexImpl - <$anon: shapeless.ops.coproduct.ZipWithIndex.Impl[CH :+: shapeless.CNil N]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,5.0,4.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipWithIndex - object Impl - method cpZipWithIndexImpl,3.0,6.0,12.0,11.0,0.0,0.0,7.0,6.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipWithIndex - object Impl - method cpZipWithIndexImpl - <$anon: shapeless.ops.coproduct.ZipWithIndex.Impl[CH :+: CT N]> - method apply,3.0,6.0,4.0,4.0,0.0,0.0,6.0,5.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipWith - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipWith - method cnilZipWith,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipWith - method cnilZipWith - <$anon: shapeless.ops.coproduct.ZipWith[shapeless.HNil shapeless.CNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipWith - method cpZipWith,3.0,6.0,8.0,8.0,0.0,0.0,7.0,6.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object ZipWith - method cpZipWith - <$anon: shapeless.ops.coproduct.ZipWith[HH :: HT VH :+: VT]> - method apply,3.0,6.0,4.0,4.0,0.0,0.0,6.0,5.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Length - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Length - method cnilLength,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Length - method cnilLength - <$anon: shapeless.ops.coproduct.Length[shapeless.CNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Length - method coproductLength,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Length - method coproductLength - <$anon: shapeless.ops.coproduct.Length[H :+: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendRight - method apply,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendRight - method extendRightSingleton,3.0,5.0,8.0,8.0,0.0,0.0,6.0,4.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendRight - method extendRightSingleton - <$anon: shapeless.ops.coproduct.ExtendRight[H :+: shapeless.CNil A]> - method apply,3.0,5.0,4.0,4.0,0.0,0.0,5.0,3.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendRight - method extendRightCoproduct,3.0,4.0,9.0,9.0,0.0,0.0,6.0,5.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendRight - method extendRightCoproduct - <$anon: shapeless.ops.coproduct.ExtendRight[H :+: T A]> - method apply,3.0,4.0,4.0,4.0,0.0,0.0,5.0,4.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - trait ExtendBy - method right,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait ExtendBy - method left,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendBy - method apply,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendBy - method extendBy,1.0,0.0,7.0,7.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendBy - method extendBy - <$anon: shapeless.ops.coproduct.ExtendBy[L R]> - method right,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendBy - method extendBy - <$anon: shapeless.ops.coproduct.ExtendBy[L R]> - method left,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendLeftBy - method apply,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendLeftBy - method extendLeftByCoproduct,1.0,0.0,6.0,6.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendLeftBy - method extendLeftByCoproduct - <$anon: shapeless.ops.coproduct.ExtendLeftBy[L R]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendLeftBy - object Impl - method extendLeftByCNilImpl,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendLeftBy - object Impl - method extendLeftByCNilImpl - <$anon: shapeless.ops.coproduct.ExtendLeftBy.Impl[shapeless.CNil R]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendLeftBy - object Impl - method extendLeftByCoproductImpl,1.0,0.0,6.0,6.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendLeftBy - object Impl - method extendLeftByCoproductImpl - <$anon: shapeless.ops.coproduct.ExtendLeftBy.Impl[H :+: T R]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendRightBy - method apply,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendRightBy - method extendRightByCNil,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendRightBy - method extendRightByCNil - <$anon: shapeless.ops.coproduct.ExtendRightBy[L shapeless.CNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendRightBy - method extendRightByCoproduct,1.0,0.0,6.0,6.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object ExtendRightBy - method extendRightByCoproduct - <$anon: shapeless.ops.coproduct.ExtendRightBy[L H :+: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object RotateLeft - method apply,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object RotateLeft - method cnilRotateLeft,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object RotateLeft - method cnilRotateLeft - <$anon: shapeless.ops.coproduct.RotateLeft[shapeless.CNil N]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait LowPriorityRotateLeft - method coproductRotateLeft,1.0,0.0,14.0,13.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - trait LowPriorityRotateLeft - method coproductRotateLeft - <$anon: shapeless.ops.coproduct.RotateLeft[C N]> - method apply,1.0,0.0,4.0,4.0,0.0,0.0,2.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object RotateRight - method apply,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object RotateRight - method cnilRotateRight,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object RotateRight - method cnilRotateRight - <$anon: shapeless.ops.coproduct.RotateRight[shapeless.CNil N]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait LowPriorityRotateRight - method coproductRotateRight,1.0,0.0,11.0,10.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - trait LowPriorityRotateRight - method coproductRotateRight - <$anon: shapeless.ops.coproduct.RotateRight[C N]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait IsCCons - method head,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait IsCCons - method tail,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait IsCCons - method cons,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object IsCCons - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object IsCCons - method coproductCCons,7.0,5.0,16.0,16.0,0.0,0.0,9.0,5.0,18.0,4.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object IsCCons - method coproductCCons - <$anon: shapeless.ops.coproduct.IsCCons[H0 :+: T0]> - method head,3.0,5.0,4.0,4.0,0.0,0.0,2.0,2.0,5.0,1.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object IsCCons - method coproductCCons - <$anon: shapeless.ops.coproduct.IsCCons[H0 :+: T0]> - method tail,3.0,5.0,4.0,4.0,0.0,0.0,2.0,2.0,5.0,1.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object IsCCons - method coproductCCons - <$anon: shapeless.ops.coproduct.IsCCons[H0 :+: T0]> - method cons,3.0,4.0,4.0,4.0,0.0,0.0,4.0,3.0,8.0,2.0,1.0
HEAD,1,package shapeless - package ops - object coproduct - trait Split - method coproduct,3.0,5.0,6.0,6.0,0.0,0.0,6.0,4.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Split - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Split - method splitZero,1.0,0.0,6.0,6.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Split - method splitZero - <$anon: shapeless.ops.coproduct.Split[C shapeless.Nat._0]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Split - method splitSucc,5.0,8.0,13.0,13.0,0.0,0.0,11.0,7.0,16.0,4.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Split - method splitSucc - <$anon: shapeless.ops.coproduct.Split[H :+: T shapeless.Succ[N]]> - method apply,5.0,8.0,7.0,7.0,0.0,0.0,10.0,6.0,16.0,4.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Take - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Take - method takeZero,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Take - method takeZero - <$anon: shapeless.ops.coproduct.Take[C shapeless.Nat._0]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Take - method takeSucc,3.0,8.0,9.0,9.0,0.0,0.0,9.0,7.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Take - method takeSucc - <$anon: shapeless.ops.coproduct.Take[H :+: T shapeless.Succ[N]]> - method apply,3.0,8.0,4.0,4.0,0.0,0.0,8.0,6.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Drop - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Drop - method dropZero,1.0,0.0,5.0,5.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Drop - method dropZero - <$anon: shapeless.ops.coproduct.Drop[C shapeless.Nat._0]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Drop - method dropSucc,3.0,3.0,9.0,9.0,0.0,0.0,4.0,3.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Drop - method dropSucc - <$anon: shapeless.ops.coproduct.Drop[H :+: T shapeless.Succ[N]]> - method apply,3.0,3.0,4.0,4.0,0.0,0.0,3.0,2.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Reverse - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Reverse - method reverse,1.0,0.0,5.0,5.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Reverse - method reverse - <$anon: shapeless.ops.coproduct.Reverse[C]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Reverse - trait Reverse0 - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Reverse - object Reverse0 - method cnilReverse,2.0,1.0,6.0,6.0,0.0,0.0,2.0,2.0,4.0,1.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Reverse - object Reverse0 - method cnilReverse - <$anon: shapeless.ops.coproduct.Reverse.Reverse0[Out shapeless.CNil Out]> - method apply,2.0,1.0,3.0,3.0,0.0,0.0,1.0,1.0,4.0,1.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Reverse - object Reverse0 - method cconsReverse,4.0,6.0,9.0,9.0,0.0,0.0,12.0,7.0,16.0,3.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Reverse - object Reverse0 - method cconsReverse - <$anon: shapeless.ops.coproduct.Reverse.Reverse0[Acc InH :+: InT Out]> - method apply,4.0,6.0,5.0,5.0,0.0,0.0,11.0,6.0,16.0,3.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - trait Align - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Align - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Align - <$anon: shapeless.CNil => shapeless.CNil> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Align - method coproductAlign,3.0,4.0,7.0,7.0,0.0,0.0,7.0,6.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Align - method coproductAlign - <$anon: A => BH :+: BT> - method apply,3.0,4.0,4.0,4.0,0.0,0.0,6.0,5.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - trait LowestPriorityPrepend - method cconsPrepend,4.0,8.0,10.0,10.0,0.0,0.0,13.0,7.0,16.0,3.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - trait LowestPriorityPrepend - method cconsPrepend - <$anon: shapeless.ops.coproduct.Prepend[PH :+: PT S]> - method apply,4.0,8.0,5.0,5.0,0.0,0.0,12.0,6.0,16.0,3.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - trait LowPriorityPrepend - method cnilPrepend0,2.0,1.0,7.0,7.0,0.0,0.0,2.0,2.0,4.0,1.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - trait LowPriorityPrepend - method cnilPrepend0 - <$anon: shapeless.ops.coproduct.Prepend[P shapeless.CNil]> - method apply,2.0,1.0,3.0,3.0,0.0,0.0,1.0,1.0,4.0,1.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Prepend - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Prepend - method cnilPrepend1,2.0,1.0,7.0,7.0,0.0,0.0,2.0,2.0,4.0,1.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Prepend - method cnilPrepend1 - <$anon: shapeless.ops.coproduct.Prepend[shapeless.CNil S]> - method apply,2.0,1.0,3.0,3.0,0.0,0.0,1.0,1.0,4.0,1.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - trait InitLast - method init,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait InitLast - method last,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object InitLast - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object InitLast - method initLastCoproduct,1.0,0.0,8.0,8.0,0.0,0.0,5.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object InitLast - method initLastCoproduct - <$anon: shapeless.ops.coproduct.InitLast[C]> - method init,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object InitLast - method initLastCoproduct - <$anon: shapeless.ops.coproduct.InitLast[C]> - method last,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object cnilOrdering - method compare,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - method coproductPartialOrdering,7.0,7.0,14.0,14.0,0.0,0.0,24.0,8.0,42.0,8.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - method coproductPartialOrdering - <$anon: PartialOrdering[H :+: T]> - method lteq,4.0,7.0,5.0,5.0,0.0,0.0,13.0,6.0,21.0,4.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - method coproductPartialOrdering - <$anon: PartialOrdering[H :+: T]> - method tryCompare,4.0,5.0,5.0,5.0,0.0,0.0,10.0,5.0,21.0,4.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object ToHList - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object ToHList - method cconsToHList,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait Basis - method inverse,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package shapeless - package ops - object coproduct - object Basis - method apply,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Basis - method cnilBasis,2.0,1.0,7.0,7.0,1.0,0.125,3.0,3.0,4.0,1.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Basis - method cnilBasis - <$anon: shapeless.ops.coproduct.Basis[Super shapeless.CNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Basis - method cnilBasis - <$anon: shapeless.ops.coproduct.Basis[Super shapeless.CNil]> - method inverse,2.0,1.0,3.0,3.0,1.0,0.25,1.0,1.0,4.0,1.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Basis - method cconsBasis,9.0,11.0,20.0,20.0,0.0,0.0,26.0,9.0,32.0,8.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Basis - method cconsBasis - <$anon: shapeless.ops.coproduct.Basis[Super H :+: T]> - method apply,5.0,8.0,7.0,7.0,0.0,0.0,11.0,6.0,16.0,4.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Basis - method cconsBasis - <$anon: shapeless.ops.coproduct.Basis[Super H :+: T]> - method inverse,5.0,11.0,7.0,7.0,0.0,0.0,14.0,5.0,16.0,4.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - method toEither,4.0,6.0,5.0,5.0,0.0,0.0,6.0,4.0,11.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Reify - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Reify - method cnilReify,1.0,0.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Reify - method cnilReify - <$anon: shapeless.ops.coproduct.Reify[L]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object Reify - method coproductReify,1.0,0.0,8.0,8.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object Reify - method coproductReify - <$anon: shapeless.ops.coproduct.Reify[H :+: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - trait LiftAll - method instances,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object LiftAll - class Curried - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object LiftAll - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object LiftAll - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object LiftAll - method liftAllCnil,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object LiftAll - method liftAllCnil - <$anon: shapeless.ops.coproduct.LiftAll[F shapeless.CNil]> - method instances,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object LiftAll - method liftAllCcons,1.0,0.0,6.0,6.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object LiftAll - method liftAllCcons - <$anon: shapeless.ops.coproduct.LiftAll[F H :+: T]> - method instances,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object CoproductToEither - method baseToEither,4.0,6.0,8.0,8.0,0.0,0.0,6.0,4.0,11.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object CoproductToEither - method baseToEither - <$anon: shapeless.ops.coproduct.CoproductToEither[L :+: R :+: shapeless.CNil]> - method apply,4.0,6.0,5.0,5.0,0.0,0.0,5.0,3.0,11.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object CoproductToEither - method cconsToEither,3.0,6.0,9.0,9.0,0.0,0.0,6.0,5.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object CoproductToEither - method cconsToEither - <$anon: shapeless.ops.coproduct.CoproductToEither[L :+: R]> - method apply,3.0,6.0,4.0,4.0,0.0,0.0,5.0,4.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object EitherToCoproduct - method econsEitherToCoproduct,3.0,4.0,9.0,9.0,0.0,0.0,6.0,5.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object EitherToCoproduct - method econsEitherToCoproduct - <$anon: shapeless.ops.coproduct.EitherToCoproduct[L Either[RL RR]]> - method apply,3.0,4.0,4.0,4.0,0.0,0.0,5.0,4.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - trait EitherToCoproductLowPrio - method baseEitherToCoproduct,3.0,7.0,7.0,7.0,0.0,0.0,7.0,5.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - trait EitherToCoproductLowPrio - method baseEitherToCoproduct - <$anon: shapeless.ops.coproduct.EitherToCoproduct[L R]> - method apply,3.0,7.0,4.0,4.0,0.0,0.0,6.0,4.0,8.0,2.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - trait RuntimeInject - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - package ops - object coproduct - object RuntimeInject - method baseCaseRuntimeInject,1.0,0.0,6.0,6.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - object RuntimeInject - method baseCaseRuntimeInject - <$anon: shapeless.ops.coproduct.RuntimeInject[H :+: shapeless.CNil]> - method apply,1.0,0.0,2.0,2.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - trait RuntimeInjectLowPrio - method inductiveCaseRuntimeInject,3.0,6.0,9.0,9.0,0.0,0.0,8.0,8.0,6.0,1.0,1.0
HEAD,0,package shapeless - package ops - object coproduct - trait RuntimeInjectLowPrio - method inductiveCaseRuntimeInject - <$anon: shapeless.ops.coproduct.RuntimeInject[H :+: T]> - method apply,3.0,6.0,4.0,4.0,0.0,0.0,7.0,7.0,6.0,1.0,1.0
HEAD,0,package shapeless - object PolyDefns - class Case - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object PolyDefns - class Case - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - object PolyDefns - class Case - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - object PolyDefns - class Case - method apply,1.0,0.0,1.0,1.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - object PolyDefns - object Case - method apply,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object PolyDefns - object Case - macro method materializeFromValue1,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - object Case - macro method materializeFromValue2,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - object Case0 - method apply,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object PolyDefns - object Compose - method composeCase,1.0,0.0,5.0,5.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - object PolyDefns - object RotateLeft - method rotateLeftCase,1.0,0.0,6.0,6.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - object PolyDefns - object RotateRight - method rotateLeftCase,1.0,0.0,6.0,6.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - object PolyDefns - object BindFirst - method bindFirstCase,1.0,0.0,11.0,9.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package shapeless - object PolyDefns - trait LowPriorityCurried - method partialApplied,1.0,0.0,19.0,18.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - object PolyDefns - object Curried - method lastParameter,1.0,0.0,10.0,9.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package shapeless - object PolyDefns - class -> - method subT,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - trait LowPriorityLiftFunction1 - method default,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - class >-> - method subT,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - trait LowPriorityLiftU - method default,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object PolyDefns - class LiftU - method defined,1.0,0.0,4.0,4.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - object PolyDefns - trait ~> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - trait ~> - method caseUniv,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - object PolyDefns - object ~> - method inst1,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object PolyDefns - object ~> - method inst2,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object PolyDefns - object ~> - method inst3,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object PolyDefns - object ~> - method inst4,1.0,0.0,1.0,1.0,1.0,0.5,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object PolyDefns - object identity - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Poly - method compose,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Poly - method andThen,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Poly - method rotateLeft,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Poly - method rotateRight,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Poly - object ProductCase - method apply,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Poly - method use,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Poly - trait CaseBuilder - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Poly - trait LowPriorityCaseBuilder - method valueCaseBuilder,1.0,0.0,4.0,4.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Poly - trait LowPriorityCaseBuilder - method valueCaseBuilder - <$anon: Poly.this.CaseBuilder[T shapeless.HNil T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Poly - object CaseBuilder - method fnCaseBuilder,1.0,0.0,5.0,5.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Poly - object CaseBuilder - method fnCaseBuilder - <$anon: Poly.this.CaseBuilder[F H :: T Result]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait Poly - method caseAt,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Poly - method apply,1.0,0.0,1.0,1.0,0.0,0.0,2.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Poly - method inst0,1.0,0.0,1.0,1.0,0.0,0.0,2.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object Poly - method bindFirst,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object Poly - method curried,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait Poly0 - method at,1.0,0.0,4.0,4.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - class PolyMacros - method materializeFromValueImpl,4.0,4.0,13.0,12.0,0.0,0.0,10.0,6.0,21.0,2.0,0.5000000000000001
HEAD,0,package shapeless - trait ScalaVersionSpecifics - method implicitNotFoundMessage,3.0,6.0,10.0,10.0,0.0,0.0,2.0,2.0,10.0,1.0,1.0
HEAD,0,package examples - object compose - method cases,2.0,3.0,3.0,3.0,0.0,0.0,3.0,2.0,7.0,2.0,1.0
HEAD,0,package examples - object ZipApplyExamples - method intFunction,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object ZipApplyExamples - method stringFunction,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object ZipApplyExamples - method longFunction,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object ZipApplyExamples - method uuidFunction,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package examples - object ZipApplyExamples - method booleanFunction,2.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ZipApplyExamples - method zipApplyExample,1.0,0.0,81.0,29.0,51.0,0.6375,35.0,17.0,0.0,0.0,-0.5584415584415584
HEAD,0,package examples - object ZipApplyExamples - method zipApplyExample - method inferenceExample,1.0,0.0,15.0,14.0,0.0,0.0,6.0,5.0,0.0,0.0,1.0
HEAD,0,package examples - object FibonacciExamples - object Fibonacci - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object FibonacciExamples - object Fibonacci - method fibN,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object FibonacciExamples - method fibonacci,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package examples - object FibonacciExamples - trait Fibs - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FibonacciExamples - object Fibs - method fibs0,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object FibonacciExamples - object Fibs - method fibs0 - <$anon: shapeless.examples.FibonacciExamples.Fibs[shapeless.nat._0 shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object FibonacciExamples - object Fibs - method fibsN,1.0,0.0,5.0,5.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package examples - object FibonacciExamples - object Fibs - method fibsN - <$anon: shapeless.examples.FibonacciExamples.Fibs[shapeless.Succ[N] H :: T]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package examples - object FibonacciExamples - method fibs,1.0,0.0,2.0,2.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - object BooleanInduction - trait If - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object BooleanInduction - object If - method ifTrue,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object BooleanInduction - object If - method ifTrue - <$anon: shapeless.examples.BooleanInduction.If[shapeless.examples.BooleanInduction.True A B]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object BooleanInduction - object If - method ifFalse,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object BooleanInduction - object If - method ifFalse - <$anon: shapeless.examples.BooleanInduction.If[shapeless.examples.BooleanInduction.False A B]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object BooleanInduction - method boolInduction,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object ScalaEnumDemo - method isWorkingDay,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object ScalaEnumDemo - method isWeekend,2.0,1.0,4.0,3.0,1.0,0.25,0.0,0.0,7.0,0.0,1.0
HEAD,0,package examples - object ShapelessEnumDemo - method isWorkingDay,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object ShapelessEnumDemo - method isWeekend,3.0,1.0,4.0,4.0,1.0,0.2,0.0,0.0,8.0,0.0,1.0
HEAD,0,package examples - object Values - method conv,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object Values - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Values - trait MkValues - method values,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Values - object MkValues - method values,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object Values - object MkValues - method values - <$anon: shapeless.examples.Values.MkValues[T]> - method values,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Values - object MkValues - trait Aux - method values,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Values - object MkValues - object Aux - method cnilAux,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object Values - object MkValues - object Aux - method cnilAux - <$anon: shapeless.examples.Values.MkValues.Aux[A shapeless.CNil]> - method values,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object Values - object MkValues - object Aux - method cconsAux,1.0,0.0,3.0,3.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - object Values - object MkValues - object Aux - method cconsAux - <$anon: shapeless.examples.Values.MkValues.Aux[T L :+: R]> - method values,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - trait Functor - method map,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - trait Applicative - method pure,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - trait Applicative - method app,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - trait Applicative - method map,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - trait Applicative - method map2,1.0,0.0,2.0,2.0,0.0,0.0,5.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - object Applicative - <$anon: shapeless.examples.recursionschemes.Applicative[shapeless.Id]> - method pure,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Applicative - <$anon: shapeless.examples.recursionschemes.Applicative[shapeless.Id]> - method app,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - object Applicative - <$anon: shapeless.examples.recursionschemes.Applicative[Option]> - method pure,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Applicative - <$anon: shapeless.examples.recursionschemes.Applicative[Option]> - method app,1.0,0.0,2.0,2.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - object Applicative - method constApp,1.0,0.0,6.0,6.0,0.0,0.0,4.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - object Applicative - method constApp - <$anon: shapeless.examples.recursionschemes.Applicative[[x]shapeless.examples.recursionschemes.ConstF[T x]]> - method pure,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Applicative - method constApp - <$anon: shapeless.examples.recursionschemes.Applicative[[x]shapeless.examples.recursionschemes.ConstF[T x]]> - method app,1.0,0.0,2.0,2.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - trait Traverse - method traverse,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - trait Traverse - method sequence,1.0,0.0,1.0,1.0,0.0,0.0,4.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - trait Traverse - method map,1.0,0.0,1.0,1.0,0.0,0.0,3.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - trait Traverse - method fold,1.0,0.0,2.0,2.0,0.0,0.0,5.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - object Traverse - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Traverse - <$anon: shapeless.examples.recursionschemes.Traverse[Seq]> - method traverse,1.0,0.0,5.0,5.0,0.0,0.0,7.0,5.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - trait Monoid - method empty,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - trait Monoid - method combine,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Monoid - <$anon: shapeless.examples.recursionschemes.Monoid[Int]> - method empty,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Monoid - <$anon: shapeless.examples.recursionschemes.Monoid[Int]> - method combine,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Monoid - method optMonoid,1.0,0.0,5.0,5.0,0.0,0.0,5.0,5.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - object Monoid - method optMonoid - <$anon: shapeless.examples.recursionschemes.Monoid[Option[A]]> - method empty,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Monoid - method optMonoid - <$anon: shapeless.examples.recursionschemes.Monoid[Option[A]]> - method combine,1.0,0.0,2.0,2.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - object Monoid - method unionMonoid,1.0,0.0,4.0,4.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - object Monoid - method unionMonoid - <$anon: shapeless.examples.recursionschemes.Monoid[Set[A]]> - method empty,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Monoid - method unionMonoid - <$anon: shapeless.examples.recursionschemes.Monoid[Set[A]]> - method combine,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Monoid - method overwriteMonoid,1.0,0.0,4.0,4.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - object Monoid - method overwriteMonoid - <$anon: shapeless.examples.recursionschemes.Monoid[Map[K V]]> - method empty,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Monoid - method overwriteMonoid - <$anon: shapeless.examples.recursionschemes.Monoid[Map[K V]]> - method combine,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - trait Morph - method tie,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - trait Morph - method untie,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - trait Morph - method traverse,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - trait Morph - method map,1.0,0.0,2.0,2.0,0.0,0.0,3.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - trait Morph - method fold,1.0,0.0,2.0,2.0,0.0,0.0,5.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - trait Morph - method fixPoint,1.0,0.0,2.0,2.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - trait Morph - method collapse,1.0,0.0,2.0,2.0,0.0,0.0,2.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - trait Morph - method cata,1.0,0.0,2.0,2.0,0.0,0.0,6.0,4.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - trait Morph - method ana,1.0,0.0,2.0,2.0,0.0,0.0,6.0,4.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - trait Morph - method hylo,1.0,0.0,2.0,2.0,0.0,0.0,7.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - trait Morph - method para,1.0,0.0,2.0,2.0,0.0,0.0,8.0,6.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - trait Morph - method apo,1.0,0.0,2.0,2.0,0.0,0.0,8.0,6.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - trait Morph - method zygo,1.0,0.0,2.0,2.0,0.0,0.0,8.0,5.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - trait Morph - method cataTrace,1.0,0.0,7.0,7.0,0.0,0.0,15.0,8.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - trait Morph - object F - trait Extractor - object as - method unapply,1.0,0.0,3.0,3.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - trait Morph - object F - trait Extractor - object tupled - method unapply,1.0,0.0,3.0,3.0,0.0,0.0,4.0,4.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - trait Morph - object F - trait Extractor - object seq - method unapplySeq,1.0,0.0,3.0,3.0,0.0,0.0,3.0,3.0,0.0,0.0,1.0
HEAD,1,package examples - package recursionschemes - trait Morph - object F - method selectDynamic,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Morph - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Morph - trait Rec - method tie,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Morph - trait Rec - method untie,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Morph - trait Rec - method traverse,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,1,package examples - package recursionschemes - object Morph - object Rec - method reflexive,1.0,0.0,8.0,7.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - object Morph - object Rec - method reflexive - <$anon: shapeless.examples.recursionschemes.Morph.Rec[T T]> - method tie,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Morph - object Rec - method reflexive - <$anon: shapeless.examples.recursionschemes.Morph.Rec[T T]> - method untie,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Morph - object Rec - method reflexive - <$anon: shapeless.examples.recursionschemes.Morph.Rec[T T]> - method traverse,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,1,package examples - package recursionschemes - object Morph - object Rec - method traverse,1.0,0.0,11.0,10.0,0.0,0.0,13.0,6.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - object Morph - object Rec - method traverse - <$anon: shapeless.examples.recursionschemes.Morph.Rec[T H[U]]> - method tie,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,1,package examples - package recursionschemes - object Morph - object Rec - method traverse - <$anon: shapeless.examples.recursionschemes.Morph.Rec[T H[U]]> - method untie,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,1,package examples - package recursionschemes - object Morph - object Rec - method traverse - <$anon: shapeless.examples.recursionschemes.Morph.Rec[T H[U]]> - method traverse,1.0,0.0,2.0,2.0,0.0,0.0,6.0,2.0,0.0,0.0,1.0
HEAD,1,package examples - package recursionschemes - object Morph - trait Rec1 - method fieldType,1.0,0.0,12.0,11.0,0.0,0.0,11.0,6.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - object Morph - trait Rec1 - method fieldType - <$anon: shapeless.examples.recursionschemes.Morph.Rec[T shapeless.labelled.FieldType[K V]]> - method tie,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Morph - trait Rec1 - method fieldType - <$anon: shapeless.examples.recursionschemes.Morph.Rec[T shapeless.labelled.FieldType[K V]]> - method untie,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,1,package examples - package recursionschemes - object Morph - trait Rec1 - method fieldType - <$anon: shapeless.examples.recursionschemes.Morph.Rec[T shapeless.labelled.FieldType[K V]]> - method traverse,1.0,0.0,2.0,2.0,0.0,0.0,6.0,3.0,0.0,0.0,1.0
HEAD,1,package examples - package recursionschemes - object Morph - trait Rec1 - method hnil,1.0,0.0,9.0,8.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - object Morph - trait Rec1 - method hnil - <$anon: shapeless.examples.recursionschemes.Morph.RecHList[T shapeless.HNil]> - method tie,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Morph - trait Rec1 - method hnil - <$anon: shapeless.examples.recursionschemes.Morph.RecHList[T shapeless.HNil]> - method untie,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package examples - package recursionschemes - object Morph - trait Rec1 - method hnil - <$anon: shapeless.examples.recursionschemes.Morph.RecHList[T shapeless.HNil]> - method traverse,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,1,package examples - package recursionschemes - object Morph - trait Rec1 - method cnil,1.0,0.0,9.0,8.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - object Morph - trait Rec1 - method cnil - <$anon: shapeless.examples.recursionschemes.Morph.RecCoproduct[T shapeless.CNil]> - method tie,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Morph - trait Rec1 - method cnil - <$anon: shapeless.examples.recursionschemes.Morph.RecCoproduct[T shapeless.CNil]> - method untie,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package examples - package recursionschemes - object Morph - trait Rec1 - method cnil - <$anon: shapeless.examples.recursionschemes.Morph.RecCoproduct[T shapeless.CNil]> - method traverse,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,1,package examples - package recursionschemes - object Morph - trait Rec1 - method hcons,1.0,0.0,11.0,10.0,0.0,0.0,19.0,7.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - object Morph - trait Rec1 - method hcons - <$anon: shapeless.examples.recursionschemes.Morph.RecHList[U H :: T]> - method tie,1.0,0.0,1.0,1.0,0.0,0.0,4.0,3.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Morph - trait Rec1 - method hcons - <$anon: shapeless.examples.recursionschemes.Morph.RecHList[U H :: T]> - method untie,1.0,0.0,1.0,1.0,0.0,0.0,4.0,3.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Morph - trait Rec1 - method hcons - <$anon: shapeless.examples.recursionschemes.Morph.RecHList[U H :: T]> - method traverse,1.0,0.0,2.0,2.0,0.0,0.0,10.0,4.0,0.0,0.0,1.0
HEAD,1,package examples - package recursionschemes - object Morph - trait Rec1 - method ccons,7.0,9.0,21.0,20.0,0.0,0.0,27.0,8.0,24.0,6.0,1.0
HEAD,0,package examples - package recursionschemes - object Morph - trait Rec1 - method ccons - <$anon: shapeless.examples.recursionschemes.Morph.RecCoproduct[T L :+: R]> - method tie,3.0,5.0,4.0,4.0,0.0,0.0,6.0,4.0,8.0,2.0,1.0
HEAD,0,package examples - package recursionschemes - object Morph - trait Rec1 - method ccons - <$anon: shapeless.examples.recursionschemes.Morph.RecCoproduct[T L :+: R]> - method untie,3.0,5.0,4.0,4.0,0.0,0.0,6.0,4.0,8.0,2.0,1.0
HEAD,0,package examples - package recursionschemes - object Morph - trait Rec1 - method ccons - <$anon: shapeless.examples.recursionschemes.Morph.RecCoproduct[T L :+: R]> - method traverse,3.0,9.0,6.0,6.0,0.0,0.0,14.0,5.0,8.0,2.0,1.0
HEAD,1,package examples - package recursionschemes - object Morph - trait Rec1 - method generic,1.0,0.0,11.0,10.0,0.0,0.0,8.0,6.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - object Morph - trait Rec1 - method generic - <$anon: shapeless.examples.recursionschemes.Morph.Rec[T U]> - method tie,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Morph - trait Rec1 - method generic - <$anon: shapeless.examples.recursionschemes.Morph.Rec[T U]> - method untie,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,1,package examples - package recursionschemes - object Morph - trait Rec1 - method generic - <$anon: shapeless.examples.recursionschemes.Morph.Rec[T U]> - method traverse,1.0,0.0,2.0,2.0,0.0,0.0,3.0,1.0,0.0,0.0,1.0
HEAD,1,package examples - package recursionschemes - object Morph - trait Rec2 - method const,1.0,0.0,9.0,8.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - object Morph - trait Rec2 - method const - <$anon: shapeless.examples.recursionschemes.Morph.Rec[T U]> - method tie,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Morph - trait Rec2 - method const - <$anon: shapeless.examples.recursionschemes.Morph.Rec[T U]> - method untie,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,1,package examples - package recursionschemes - object Morph - trait Rec2 - method const - <$anon: shapeless.examples.recursionschemes.Morph.Rec[T U]> - method traverse,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,1,package examples - package recursionschemes - object Morph - method morph,1.0,0.0,11.0,10.0,0.0,0.0,8.0,6.0,0.0,0.0,1.0
HEAD,0,package examples - package recursionschemes - object Morph - method morph - <$anon: shapeless.examples.recursionschemes.Morph[T]> - method tie,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - package recursionschemes - object Morph - method morph - <$anon: shapeless.examples.recursionschemes.Morph[T]> - method untie,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,1,package examples - package recursionschemes - object Morph - method morph - <$anon: shapeless.examples.recursionschemes.Morph[T]> - method traverse,1.0,0.0,2.0,2.0,0.0,0.0,3.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - package examples - object Expr - method evalAlg,8.0,8.0,12.0,12.0,0.0,0.0,19.0,6.0,36.0,6.0,1.0
HEAD,0,package examples - package examples - object Expr - method eval,1.0,0.0,2.0,2.0,0.0,0.0,3.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - package examples - object Expr - method pprint,7.0,5.0,12.0,12.0,0.0,0.0,17.0,2.0,36.0,6.0,1.0
HEAD,0,package examples - package examples - object Expr - method freeVars,3.0,3.0,4.0,4.0,0.0,0.0,5.0,2.0,8.0,2.0,1.0
HEAD,0,package examples - package examples - object Expr - method subst,3.0,3.0,4.0,4.0,0.0,0.0,6.0,2.0,9.0,3.0,1.0
HEAD,0,package examples - package examples - object Expr - method optFast,1.0,0.0,3.0,3.0,0.0,0.0,4.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object RecursionSchemesExamples - method show,1.0,0.0,1.0,1.0,0.0,0.0,3.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - object LowPriority - macro method materialize,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object LowPriority - object Ignoring - macro method materialize,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - class LowPriorityMacros - method strictTpe,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - class LowPriorityMacros - method stripRefinements,3.0,5.0,5.0,5.0,0.0,0.0,3.0,3.0,20.0,1.0,1.0
HEAD,0,package shapeless - class LowPriorityMacros - method mkLowPriority,3.0,10.0,11.0,11.0,0.0,0.0,7.0,6.0,6.0,1.0,1.0
HEAD,0,package shapeless - class LowPriorityMacros - method mkLowPriorityIgnoring,3.0,10.0,11.0,11.0,0.0,0.0,6.0,5.0,6.0,1.0,1.0
HEAD,0,package shapeless - trait LowPriorityTypes - method lowPriorityForTpe,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityTypes - method lowPriorityForIgnoringTpe,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait LowPriorityTypes - object LowPriorityFor - method unapply,4.0,6.0,12.0,12.0,0.0,0.0,18.0,10.0,99.0,5.0,1.0
HEAD,0,package shapeless - package syntax - class UnionOps - method get,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class UnionOps - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class UnionOps - method keys,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class UnionOps - method values,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class UnionOps - method fields,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class UnionOps - method toMap,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class UnionOps - method mapValues,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class UnionOps - method union,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,1,package shapeless - package syntax - class DynamicUnionOps - method selectDynamic,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class RecordOps - method get,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class RecordOps - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class RecordOps - method fieldAt,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class RecordOps - method updated,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class RecordOps - method replace,1.0,0.0,2.0,2.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class RecordOps - method updateWith,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class RecordOps - method remove,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class RecordOps - method +,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class RecordOps - method -,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class RecordOps - method merge,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class RecordOps - method deepMerge,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class RecordOps - method extract,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class RecordOps - method mergeWith,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class RecordOps - method renameField,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class RecordOps - method keys,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class RecordOps - method values,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class RecordOps - method fields,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class RecordOps - method toMap,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class RecordOps - method mapValues,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - package syntax - class RecordOps - method alignByKeys,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - package syntax - class RecordOps - method record,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,1,package shapeless - package syntax - class DynamicRecordOps - method selectDynamic,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - class :: - method toString,3.0,6.0,4.0,4.0,0.0,0.0,0.0,0.0,4.0,0.0,1.0
HEAD,0,package shapeless - trait HNil - method ::,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - trait HNil - method toString,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object HList - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object HList - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object HList - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object HList - method fill,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object HList - method fill,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object HList - class FillWithOps - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - object HList - method fillWith,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object HList - method hlistOps,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,1,package shapeless - object HList - macro method selectDynamic,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package shapeless - object HList - method unsafeGet,3.0,4.0,5.0,5.0,0.0,0.0,5.0,4.0,12.0,4.0,1.0
HEAD,0,package shapeless - object HList - method unsafeReversePrepend,3.0,9.0,9.0,8.0,0.0,0.0,5.0,4.0,7.0,2.0,1.0
HEAD,0,package shapeless - object HList - method unsafeReversePrepend - method loop,3.0,9.0,5.0,5.0,0.0,0.0,4.0,4.0,7.0,2.0,1.0
HEAD,0,package shapeless - object HList - method unsafeReverse,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package shapeless - object HList - method unsafePrepend,1.0,0.0,2.0,2.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package shapeless - object HList - method unsafeUpdateAt,3.0,9.0,9.0,8.0,0.0,0.0,11.0,7.0,12.0,4.0,1.0
HEAD,0,package shapeless - object HList - method unsafeUpdateAt - method loop,3.0,9.0,5.0,5.0,0.0,0.0,10.0,7.0,12.0,4.0,1.0
HEAD,0,package shapeless - object HList - method unsafeUpdateAppend,4.0,9.0,10.0,9.0,0.0,0.0,13.0,8.0,13.0,4.0,1.0
HEAD,0,package shapeless - object HList - method unsafeUpdateAppend - method loop,4.0,9.0,6.0,6.0,0.0,0.0,12.0,8.0,13.0,4.0,1.0
HEAD,0,package shapeless - object HList - method unsafeUpdateWith,3.0,9.0,9.0,8.0,0.0,0.0,12.0,8.0,12.0,4.0,1.0
HEAD,0,package shapeless - object HList - method unsafeUpdateWith - method loop,3.0,9.0,5.0,5.0,0.0,0.0,11.0,8.0,12.0,4.0,1.0
HEAD,0,package shapeless - object HList - method unsafeRemove,3.0,9.0,9.0,8.0,0.0,0.0,10.0,8.0,12.0,4.0,1.0
HEAD,0,package shapeless - object HList - method unsafeRemove - method loop,3.0,9.0,5.0,5.0,0.0,0.0,9.0,8.0,12.0,4.0,1.0
HEAD,0,package shapeless - trait NatProductArgs - macro method applyDynamic,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait ProductArgs - macro method applyDynamic,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait FromProductArgs - macro method applyDynamic,1.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - trait SingletonProductArgs - macro method applyDynamic,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
HEAD,0,package shapeless - class ProductMacros - method forwardImpl,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - class ProductMacros - method forwardNatImpl,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - class ProductMacros - method forwardSingletonImpl,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package shapeless - class ProductMacros - method forwardNat,4.0,1.0,16.0,14.0,0.0,0.0,11.0,10.0,5.0,1.0,0.2
HEAD,0,package shapeless - class ProductMacros - method forward,3.0,1.0,10.0,9.0,0.0,0.0,6.0,6.0,5.0,1.0,-0.3333333333333333
HEAD,0,package shapeless - class ProductMacros - method forwardFromProductImpl,5.0,9.0,23.0,18.0,0.0,0.0,18.0,13.0,11.0,3.0,0.7894736842105262
HEAD,0,package shapeless - class ProductMacros - method mkProductImpl,4.0,11.0,7.0,7.0,0.0,0.0,13.0,6.0,16.0,5.0,1.0
HEAD,0,package shapeless - class ProductMacros - method mkProductNatImpl,3.0,11.0,10.0,10.0,0.0,0.0,13.0,8.0,29.0,4.0,1.0
HEAD,0,package shapeless - class ProductMacros - method mkProductNatTypeParamsImpl,3.0,11.0,9.0,9.0,0.0,0.0,12.0,7.0,28.0,3.0,1.0
HEAD,0,package examples - object ImpredicativeExamples - object head - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object ImpredicativeExamples - method g,3.0,9.0,4.0,4.0,0.0,0.0,7.0,4.0,6.0,1.0,1.0
HEAD,0,package examples - object UnfoldExamples - trait Unfold - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UnfoldExamples - object Unfold - method unfold1,1.0,0.0,6.0,6.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0
HEAD,0,package examples - object UnfoldExamples - object Unfold - method unfold1 - <$anon: shapeless.examples.UnfoldExamples.Unfold[F E S]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object UnfoldExamples - object Unfold - trait ApplyUnfold - method apply,1.0,0.0,2.0,2.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object UnfoldExamples - object Unfold - method unfold,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object UnfoldExamples - object Unfold - method unfold,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0
HEAD,0,package examples - object UnfoldExamples - trait UnfoldAux - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UnfoldExamples - object UnfoldAux - method unfold1,1.0,0.0,3.0,3.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0
HEAD,0,package examples - object UnfoldExamples - object UnfoldAux - method unfold1 - <$anon: shapeless.examples.UnfoldExamples.UnfoldAux[F S S CoS shapeless.HNil]> - method apply,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
HEAD,0,package examples - object UnfoldExamples - object UnfoldAux - method unfold2,2.0,5.0,11.0,10.0,0.0,0.0,7.0,6.0,6.0,2.0,1.0
HEAD,0,package examples - object UnfoldExamples - object UnfoldAux - method unfold2 - <$anon: shapeless.examples.UnfoldExamples.UnfoldAux[F E S CoS OutH :: OutT]> - method apply,2.0,5.0,4.0,4.0,0.0,0.0,6.0,5.0,6.0,2.0,1.0
HEAD,0,package examples - object UnfoldExamples - object unfoldMisc - method case0,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object UnfoldExamples - object unfoldMisc - method case1,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object UnfoldExamples - object unfoldMisc - method case2,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object UnfoldExamples - object unfoldMisc - method case3,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object UnfoldExamples - object unfoldFibs - method case0,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object UnfoldExamples - object unfoldFibs - method case1,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0
HEAD,0,package examples - object UnfoldExamples - object unfoldFibs - method caseN,1.0,0.0,7.0,6.0,0.0,0.0,3.0,3.0,0.0,0.0,0.0
HEAD,0,package examples - object UnfoldExamples - object toInt - method default,1.0,0.0,1.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0